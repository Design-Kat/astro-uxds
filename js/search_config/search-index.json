{
  "app": {
    "name": "markdown-json",
    "cwd": "./js/search_config/",
    "src": "../../_content/",
    "filePattern": "**/*.md",
    "ignore": "*(icon|input)*",
    "dist": "./js/search_config/search-index.json",
    "server": false,
    "display": false,
    "port": "3001",
    "version": "1.4.1"
  },
  "data": [
    {
      "tags": "resources",
      "path": "/design-guidelines/compliance",
      "date": "Last Modified",
      "layout": "interior.template.njk",
      "title": "Compliance",
      "class": "compliance",
      "contents": "<h1 id=\"egs-compliance\">EGS Compliance</h1>\n<ol>\n<li><p>General </p>\n<ol>\n<li>All designs should follow the guidance marked as &quot;Rules of Thumb&quot;, &quot;Do&#39;s&quot; and &quot;Don&#39;ts&quot;.</li>\n</ol>\n</li>\n<li><p><a href=\"/design-guidelines/color\">Color</a></p>\n<ol>\n<li>Ordinary User Interface elements and backgrounds shall be designed with the colors identified in the Primary, Secondary, Tertiary, and Quaternary palettes.</li>\n<li>User Interface elements that require distinct colors shall be designed with the colors identified in the Tag 1, Tag 2, Tag 3, and Tag 4 palettes.</li>\n</ol>\n</li>\n<li><p><a href=\"/design-guidelines/typography\">Typography</a></p>\n<ol>\n<li>Applications shall be designed using the Open Sans and Roboto Mono fonts.</li>\n<li>Applications should follow the typeface size guidelines for Heading<!--link to headings table--> and Body<!--link to body table--> elements.</li>\n</ol>\n</li>\n<li><p><a href=\"/design-guidelines/status-system\">Status System</a></p>\n<ol>\n<li>User Interface elements indicating state or status shall be designed with the six shapes specified<!--link to status symbol illustration-->.</li>\n<li>User Interface elements indicating state or status shall be designed with the six colors specified<!--link to status color illustration-->.</li>\n</ol>\n</li>\n<li><p><a href=\"/design-guidelines/data-visualization\">Data Visualization</a></p>\n<ol>\n<li>Data visualizations shall have no more than 8 colors per data set to manage cognitive load.</li>\n</ol>\n</li>\n<li><p>Components</p>\n<ol>\n<li><p><a href=\"/ui-components/button\">Button</a></p>\n<ol>\n<li>Buttons shall be used for actionable controls only, not as state indicators.</li>\n</ol>\n</li>\n<li><p><a href=\"/ui-components/checkbox\">Checkbox</a></p>\n<ol>\n<li>Checkboxes shall be used for setting values only, not to initiate actions.</li>\n</ol>\n</li>\n<li><p><a href=\"/ui-components/dialog-box\">Dialog Box</a></p>\n<ol>\n<li>Dialog Boxes shall use Buttons for for confirm or cancel actions.  </li>\n<li>Dialog Boxes shall be closed only with confirm or cancel Buttons.</li>\n<li>Dialog Box confirmation Button shall be to the right of the cancel Button.</li>\n</ol>\n</li>\n<li><p><a href=\"/ui-components/drop-down\">Drop Down</a></p>\n<ol>\n<li>Menu items shall use title-style capitalization.</li>\n<li>Menu items shall use an ellipsis (…) to indicate that further action is required to complete the command.</li>\n</ol>\n</li>\n<li><p><a href=\"/ui-components/global-status-bar\">Global Status Bar</a></p>\n<ol>\n<li>The Global Status Bar shall be reserved for global elements that appear on every screen.</li>\n<li>Global Status Bar elements shall be arranged left to right as shown in the &quot;Most Complex Global Status Bar&quot;<!--linked illustration--> illustration.</li>\n</ol>\n</li>\n<li><p><a href=\"/ui-components/icons-and-symbols\">Icons and Symbols</a></p>\n<ol>\n<li>Monitoring Icons shall include a label and a status symbol as illustrated.<!--link to icon illustration--></li>\n<li>Monitoring Icons shall be rendered with the standard status colors.<!--link to status colors--></li>\n</ol>\n</li>\n<li><p><a href=\"/ui-components/input-field\">Input Field</a></p>\n<ol>\n<li>Stacked Input Fields shall be left aligned.</li>\n<li>Input Fields shall use the text size defined in the CSS<!--link to CSS-->.</li>\n</ol>\n</li>\n<li><p><a href=\"/ui-components/link\">Link</a></p>\n<ol>\n<li>Links shall use the color defined in the CSS<!--link to CSS-->.</li>\n<li>Links shall use a text style that is without an underline.</li>\n</ol>\n</li>\n<li><p><a href=\"/ui-components/log\">Log</a></p>\n<ol>\n<li>Custom Log implementations shall perform all of the scrolling<!--link to scrolling--> and filtering interactions<!--link to filtering--> described.</li>\n</ol>\n</li>\n<li><p><a href=\"/ui-components/pagination\">Pagination</a></p>\n<ol>\n<li>Pagination shall use a text style that is without an underline.</li>\n</ol>\n</li>\n<li><p><a href=\"/ui-components/pop-up\">Pop Up</a></p>\n<ol>\n<li>Menu items shall use title-style capitalization.</li>\n<li>Menu items shall use an ellipsis (…) to indicate that further action is required to complete the command.</li>\n</ol>\n</li>\n<li><p><a href=\"/ui-components/progress\">Progress</a></p>\n<ol>\n<li>Progress indicator shall indicate the precise completion time for an operation.</li>\n</ol>\n</li>\n<li><p><a href=\"/ui-components/radio-button\">Radio Button</a></p>\n<ol>\n<li>Radio Buttons shall be used only for mutually exclusive choices.</li>\n</ol>\n</li>\n<li><p><a href=\"/ui-components/search\">Search</a></p>\n<ol>\n<li>Search Fields shall contain prompt text.</li>\n</ol>\n</li>\n<li><p><a href=\"/ui-components/segmented-button\">Segmented Button</a></p>\n<ol>\n<li>Segmented Buttons shall be used only for mutually exclusive selections.</li>\n</ol>\n</li>\n<li><p><a href=\"/ui-components/status-symbol\">Status Symbol</a></p>\n<ol>\n<li>Status Symbols shall always be rendered with the specified shapes<!--link to colors-->.</li>\n<li>Status Symbols shall always be rendered with the specified colors<!--link to shapes-->.</li>\n</ol>\n</li>\n<li><p><a href=\"/ui-components/tabs\">Tabs</a></p>\n<ol>\n<li>Tabs shall be arranged in a single row.</li>\n<li>Tabs shall use title-style capitalization.</li>\n</ol>\n</li>\n<li><p><a href=\"/ui-components/toggle\">Toggle</a></p>\n<ol>\n<li>Toggle shall be used when the action takes immediate effect.</li>\n</ol>\n</li>\n</ol>\n</li>\n</ol>\n",
      "excerpt": "<p>General </p>",
      "id": "design-guidelines\\compliance"
    },
    {
      "tags": "resources",
      "path": "/design-guidelines/glossary",
      "date": "Last Modified",
      "layout": "interior.template.njk",
      "title": "Glossary",
      "contents": "<h3 id=\"a\">A</h3>\n<ul>\n<li>Accordion - A navigational device which presents a hierarchical set of items in which only a single branch of that hierarchy is exposed at one time.</li>\n<li><a href=\"https://astrouxds.com/ui-components/button\">Action Button</a> - A UI control allowing users to trigger actions by clicking, tapping, or pressing a corresponding - key on a keyboard, such as “Enter.”</li>\n<li>Activation - The manner in which users invoke an action on the currently selected object(s).</li>\n<li>Alarm - The most critical alert category. Indicates that a condition exists which requires immediate operator action.</li>\n<li>Alert - Indication of a condition regarding people, systems or the mission, categorized into alarms, warnings, events and informational messages.</li>\n</ul>\n<h3 id=\"b\">B</h3>\n<ul>\n<li><a href=\"https://astrouxds.com/ui-components/button\">Button</a> - A Button allows users to trigger actions by clicking, tapping, or pressing a corresponding key on a keyboard, such as “Enter.”</li>\n</ul>\n<h3 id=\"c\">C</h3>\n<ul>\n<li><a href=\"https://astrouxds.com/ui-components/checkbox\">Checkbox</a> - A Checkbox allows a user to select a value from a small set of options.</li>\n<li>Close Button - A UI component that, when activated, dismisses a Dialog Box.</li>\n<li>Container - An object that holds other objects.</li>\n<li><a href=\"https://astrouxds.com/the-design-process/ui-design\">Concept Sketch</a> - A sketch on paper that lays out the main Content Workspace and controls and clarifies the flow of user interaction from screen-to-screen.</li>\n</ul>\n<h3 id=\"d\">D</h3>\n<ul>\n<li>Default Action - The action that users would most likely want to execute in the window with focus.</li>\n<li><a href=\"https://astrouxds.com/ui-components/dialog-box\">Dialog Box</a> - A Dialog Box interrupts app processing to prompt a user to confirm an action or acknowledge a piece of information. It displays information along with a set of buttons allowing users to accept or cancel the actions presented within the Dialog Box.</li>\n<li><a href=\"https://astrouxds.com/ui-components/drop-down\">Drop Down Menu</a> - A UI control that allows users to select a value from a list of values.</li>\n</ul>\n<h3 id=\"g\">G</h3>\n<ul>\n<li><a href=\"https://astrouxds.com/the-design-process/ui-design\">Global Controls</a> - Display top-level system and equipment status throughout Astro Applications.</li>\n<li><a href=\"https://astrouxds.com/ui-components/global-status-bar\">Global Status Bar</a> - A full width view across the top of an application that displays the overall health and status of a system.</li>\n<li>Grip Handle - The part of a movable menu bar or toolbar that, when dragged, detaches the control and displays it in a separate window.</li>\n</ul>\n<h3 id=\"l\">L</h3>\n<ul>\n<li>Label - Text or a graphic that identifies an object or control.</li>\n<li><a href=\"https://astrouxds.com/ui-components/link\">Link</a> - A link (also known as a hyperlink) is a clickable text element. The link control is used for navigation, but can also trigger an event.</li>\n<li><a href=\"https://astrouxds.com/ui-components/log\">Logs</a> - A tabular representation of application events and may include username, priority, equipment type, signal type, etc.</li>\n</ul>\n<h3 id=\"m\">M</h3>\n<ul>\n<li>Menu - A list of options from which users choose. The options can execute commands, display a window (to request more information from users) or submenu and specify settings.</li>\n</ul>\n<h3 id=\"n\">N</h3>\n<ul>\n<li><a href=\"https://astrouxds.com/ui-components/tabs\">Navigational Tabs</a> - Divide major areas of content and to indicate a work process.</li>\n<li><a href=\"https://astrouxds.com/design-guidelines/notifications\">Notification System</a> - A system which generates, prioritizes and displays event notifications for significant occurrences within an application and its associated systems and hardware.</li>\n</ul>\n<h3 id=\"p\">P</h3>\n<ul>\n<li><a href=\"https://astrouxds.com/ui-components/pagination\">Pagination</a> - The process of dividing content for display on multiple pages. It is utilized when content, such as - Search results, does not fit onto one page and must be split across multiple pages.</li>\n<li><a href=\"https://astrouxds.com/ui-components/pop-up\">Pop-Up Menu</a> - A menu provides users with a quick way to access common actions for a highlighted item.</li>\n<li>Push Button - A control that initiates an action.</li>\n</ul>\n<h3 id=\"r\">R</h3>\n<ul>\n<li><a href=\"https://astrouxds.com/ui-components/radio-button\">Radio Button</a> - Allows users to mutually select an option from a predefined set of options. When one selection is made, the previous selection becomes deselected.</li>\n</ul>\n<h3 id=\"s\">S</h3>\n<ul>\n<li><a href=\"https://astrouxds.com/ui-components/search\">Search</a> - A specialized text field for entering Search terms.</li>\n<li><a href=\"https://astrouxds.com/ui-components/segmented-button\">Segmented Button</a> - Allows users to select one item at a time from two to four options.</li>\n<li><a href=\"https://astrouxds.com/ui-components/slider\">Slider</a> - A graphical control element that allows users to choose from a range of continuous and discrete values.</li>\n<li><a href=\"https://astrouxds.com/ui-components/status-symbol\">Status Indicator</a> - Indicates the state of a device or feature in a standard and consistent way using color, shapes, labeling and badging.</li>\n<li><a href=\"https://astrouxds.com/ui-components/icons-and-symbols\">Symbols</a> - A graphical representation or glyph associated with actions, concepts or objects such as an asterisk.</li>\n</ul>\n<h3 id=\"t\">T</h3>\n<ul>\n<li><a href=\"https://astrouxds.com/ui-components/table\">Tables</a> - A UX design mechanism comprised of rows and columns used for displaying content.</li>\n<li><a href=\"https://astrouxds.com/ui-components/timeline\">Timeline</a> - Displays event information within a specified time period.</li>\n<li>Title Bar - A component that displays the name for a table or window.</li>\n<li><a href=\"https://astrouxds.com/ui-components/toggle\">Toggle</a> - A switch which describes a state or value. It allows users to change a setting between two states such as “On and Off.</li>\n<li><a href=\"https://astrouxds.com/ui-components/tree\">Tree</a> - A list box that displays the hierarchical relationship among the objects in the list.</li>\n</ul>\n<h3 id=\"v\">V</h3>\n<ul>\n<li><a href=\"https://astrouxds.com/ui-components/validation\">Validation</a> - Ensures that data is properly entered into an Input Field or Form. It alerts users to data errors, required input and prompts them to make corrections.</li>\n</ul>\n<h3 id=\"w\">W</h3>\n<ul>\n<li><a href=\"https://astrouxds.com/the-design-process/ui-design\">Wireframe</a> - A page schematic or screen blueprint that represents the skeletal framework of a Web page or Web site.</li>\n</ul>\n",
      "excerpt": "",
      "id": "design-guidelines\\glossary"
    },
    {
      "tags": "resources",
      "path": "/design-guidelines/color",
      "date": "Last Modified",
      "layout": "interior.template.njk",
      "class": "color",
      "title": "Color",
      "contents": "<p>Maintaining color consistency across applications is an essential part of what makes an application an Astro Application. In Astro four key colors (primary, secondary, tertiary and quaternary) along with their respective light and dark variants provide a formalized approach to color. Additional color palettes with light and dark variants are provided for status colors and non-status colors.</p>\n<p>Color palettes are provided here with their respective RGB and CSS values as well as their <a href=\"https://developer.mozilla.org/en-US/docs/Web/CSS/Using_CSS_variables\">CSS Custom Property</a> names, which can be used in conjunction with the Astro CSS library. Example text overlays use the optimal colors for <a href=\"https://www.w3.org/TR/UNDERSTANDING-WCAG20/visual-audio-contrast-contrast.html\">WCAG contrast compliance</a>.</p>\n<p>::: note\nThe Astro library makes use of CSS Custom Properties by offering semantic color assignment and support for live theme switching. Using the CSS Custom Properties instead of the RGB or Hex values will future-proof your application.\n:::</p>\n<h2 id=\"primary\">Primary</h2>\n<p>The primary color palette is typically, though not universally, used for interface elements in their default state. When creating an element or pattern not defined in the guidelines, start with the primary color palette.</p>\n<table>\n<thead>\n<tr>\n<th></th>\n<th>Step</th>\n<th>Hex</th>\n<th>RGB</th>\n<th>CSS</th>\n</tr>\n</thead>\n<tbody><tr>\n<td><img src=\"/img/swatches/primary__tint-80.svg\" alt=\"Primary Lighten Step 4\"></td>\n<td>+4</td>\n<td><code>#cbdee9</code></td>\n<td><code>203, 222, 233</code></td>\n<td><code>--colorPrimaryLighten4</code></td>\n</tr>\n<tr>\n<td><img src=\"/img/swatches/primary__tint-60.svg\" alt=\"Primary Lighten Step 3\"></td>\n<td>+3</td>\n<td><code>#98bdd3</code></td>\n<td><code>152, 189, 211</code></td>\n<td><code>--colorPrimarytint-60</code></td>\n</tr>\n<tr>\n<td><img src=\"/img/swatches/primary__tint-40.svg\" alt=\"Primary Lighten Step 2\"></td>\n<td>+2</td>\n<td><code>#649cbd</code></td>\n<td><code>100, 156, 189</code></td>\n<td><code>--colorPrimarytint-40</code></td>\n</tr>\n<tr>\n<td><img src=\"/img/swatches/primary__tint-20.svg\" alt=\"Primary Lighten Step 1\"></td>\n<td>+1</td>\n<td><code>#2f7aa7</code></td>\n<td><code>47, 122, 167</code></td>\n<td><code>--colorPrimarytint-20</code></td>\n</tr>\n<tr>\n<td><img src=\"/img/swatches/primary.svg\" alt=\"Primary Base Color\"></td>\n<td>Base</td>\n<td><code>#005a8f</code></td>\n<td><code>0, 90, 143</code></td>\n<td><code>--colorPrimary</code></td>\n</tr>\n<tr>\n<td><img src=\"/img/swatches/primary__shade-20.svg\" alt=\"Primary Darken Step 1\"></td>\n<td>-1</td>\n<td><code>#004872</code></td>\n<td><code>0, 72, 114</code></td>\n<td><code>--colorPrimaryshade-20</code></td>\n</tr>\n<tr>\n<td><img src=\"/img/swatches/primary__shade-40.svg\" alt=\"Primary Darken Step 2\"></td>\n<td>-2</td>\n<td><code>#003655</code></td>\n<td><code>0, 54, 85</code></td>\n<td><code>--colorPrimaryshade-40</code></td>\n</tr>\n<tr>\n<td><img src=\"/img/swatches/primary__shade-60.svg\" alt=\"Primary Darken Step 3\"></td>\n<td>-3</td>\n<td><code>#002439</code></td>\n<td><code>0, 36, 57</code></td>\n<td><code>--colorPrimaryshade-60</code></td>\n</tr>\n<tr>\n<td><img src=\"/img/swatches/primary__shade-80.svg\" alt=\"Primary Darken Step 4\"></td>\n<td>-4</td>\n<td><code>#00121c</code></td>\n<td><code>0, 18, 28</code></td>\n<td><code>--colorPrimaryshade-80</code></td>\n</tr>\n</tbody></table>\n<h2 id=\"secondary\">Secondary</h2>\n<p>The secondary color palette can be utilized for accents as well as active and hover states of interface elements.</p>\n<table>\n<thead>\n<tr>\n<th></th>\n<th>Step</th>\n<th>Hex</th>\n<th>RGB</th>\n<th>CSS</th>\n</tr>\n</thead>\n<tbody><tr>\n<td><img src=\"/img/swatches/secondary__tint-80.svg\" alt=\"Secondary Lighten Step 4\"></td>\n<td>+4</td>\n<td><code>#daeeff</code></td>\n<td><code>218, 238, 255</code></td>\n<td><code>--colorSecondaryLighten4</code></td>\n</tr>\n<tr>\n<td><img src=\"/img/swatches/secondary__tint-60.svg\" alt=\"Secondary Lighten Step 3\"></td>\n<td>+3</td>\n<td><code>#b7dcff</code></td>\n<td><code>183, 220, 255</code></td>\n<td><code>--colorSecondarytint-60</code></td>\n</tr>\n<tr>\n<td><img src=\"/img/swatches/secondary__tint-40.svg\" alt=\"Secondary Lighten Step 2\"></td>\n<td>+2</td>\n<td><code>#92cbff</code></td>\n<td><code>146, 203, 255</code></td>\n<td><code>--colorSecondarytint-40</code></td>\n</tr>\n<tr>\n<td><img src=\"/img/swatches/secondary__tint-20.svg\" alt=\"Secondary Lighten Step 1\"></td>\n<td>+1</td>\n<td><code>#6ebaff</code></td>\n<td><code>110, 186, 255</code></td>\n<td><code>--colorSecondarytint-20</code></td>\n</tr>\n<tr>\n<td><img src=\"/img/swatches/secondary.svg\" alt=\"Secondary Base Color\"></td>\n<td>Base</td>\n<td><code>#4dacff</code></td>\n<td><code>77, 172, 255</code></td>\n<td><code>--colorSecondary</code></td>\n</tr>\n<tr>\n<td><img src=\"/img/swatches/secondary__shade-20.svg\" alt=\"Secondary Darken Step 1\"></td>\n<td>-1</td>\n<td><code>#3a87cf</code></td>\n<td><code>58, 135, 207</code></td>\n<td><code>--colorSecondaryshade-20</code></td>\n</tr>\n<tr>\n<td><img src=\"/img/swatches/secondary__shade-40.svg\" alt=\"Secondary Darken Step 2\"></td>\n<td>-2</td>\n<td><code>#2b659b</code></td>\n<td><code>43, 101, 155</code></td>\n<td><code>--colorSecondaryshade-40</code></td>\n</tr>\n<tr>\n<td><img src=\"/img/swatches/secondary__shade-60.svg\" alt=\"Secondary Darken Step 3\"></td>\n<td>-3</td>\n<td><code>#1d4367</code></td>\n<td><code>29, 67, 103</code></td>\n<td><code>--colorSecondaryshade-60</code></td>\n</tr>\n<tr>\n<td><img src=\"/img/swatches/secondary__shade-80.svg\" alt=\"Secondary Darken Step 4\"></td>\n<td>-4</td>\n<td><code>#0e2234</code></td>\n<td><code>14, 34, 52</code></td>\n<td><code>--colorSecondaryshade-80</code></td>\n</tr>\n</tbody></table>\n<h2 id=\"tertiary\">Tertiary</h2>\n<p>The tertiary color palette is typically used in dark-themed Astro applications for container elements (e.g., Global Status Bar) and overall application background. Take care when utilizing the tertiary palette for user interface elements in a dark-themed application, as this palette runs the risk of blending in with dark-themed background elements.</p>\n<table>\n<thead>\n<tr>\n<th></th>\n<th>Step</th>\n<th>Hex</th>\n<th>RGB</th>\n<th>CSS</th>\n</tr>\n</thead>\n<tbody><tr>\n<td><img src=\"/img/swatches/tertiary__tint-80.svg\" alt=\"Tertiary Lighten Step 4\"></td>\n<td>+4</td>\n<td><code>#d4d8dd</code></td>\n<td><code>212, 216, 221</code></td>\n<td><code>--colorTertiaryLighten4</code></td>\n</tr>\n<tr>\n<td><img src=\"/img/swatches/tertiary__tint-60.svg\" alt=\"Tertiary Lighten Step 3\"></td>\n<td>+3</td>\n<td><code>#a9b2bc</code></td>\n<td><code>169, 178, 188</code></td>\n<td><code>--colorTertiarytint-60</code></td>\n</tr>\n<tr>\n<td><img src=\"/img/swatches/tertiary__tint-40.svg\" alt=\"Tertiary Lighten Step 2\"></td>\n<td>+2</td>\n<td><code>#7e8c9b</code></td>\n<td><code>126, 140, 155</code></td>\n<td><code>--colorTertiarytint-40</code></td>\n</tr>\n<tr>\n<td><img src=\"/img/swatches/tertiary__tint-20.svg\" alt=\"Tertiary Lighten Step 1\"></td>\n<td>+1</td>\n<td><code>#52667a</code></td>\n<td><code>82, 102, 122</code></td>\n<td><code>--colorTertiarytint-20</code></td>\n</tr>\n<tr>\n<td><img src=\"/img/swatches/tertiary.svg\" alt=\"Tertiary Base Color\"></td>\n<td>Base</td>\n<td><code>#274059</code></td>\n<td><code>39, 64, 89</code></td>\n<td><code>--colorTertiary</code></td>\n</tr>\n<tr>\n<td><img src=\"/img/swatches/tertiary__shade-20.svg\" alt=\"Tertiary Darken Step 1\"></td>\n<td>-1</td>\n<td><code>#1f3347</code></td>\n<td><code>31, 51, 71</code></td>\n<td><code>--colorTertiaryshade-20</code></td>\n</tr>\n<tr>\n<td><img src=\"/img/swatches/tertiary__shade-40.svg\" alt=\"Tertiary Darken Step 2\"></td>\n<td>-2</td>\n<td><code>#172635</code></td>\n<td><code>36, 38, 53</code></td>\n<td><code>--colorTertiaryshade-40</code></td>\n</tr>\n<tr>\n<td><img src=\"/img/swatches/tertiary__shade-60.svg\" alt=\"Tertiary Darken Step 3\"></td>\n<td>-3</td>\n<td><code>#101923</code></td>\n<td><code>16, 25, 35</code></td>\n<td><code>--colorTertiaryshade-60</code></td>\n</tr>\n<tr>\n<td><img src=\"/img/swatches/tertiary__shade-80.svg\" alt=\"Tertiary Darken Step 4\"></td>\n<td>-4</td>\n<td><code>#080c11</code></td>\n<td><code>8, 12, 17</code></td>\n<td><code>--colorTertiaryshade-80</code></td>\n</tr>\n</tbody></table>\n<h2 id=\"quaternary\">Quaternary</h2>\n<p>The quaternary color palette is typically used in light-themed Astro applications for container elements and overall application background. Take care when utilizing the quaternary palette for user interface elements in a light-themed application, as this palette runs the risk of blending in with light-themed background elements.</p>\n<table>\n<thead>\n<tr>\n<th></th>\n<th>Step</th>\n<th>Hex</th>\n<th>RGB</th>\n<th>CSS</th>\n</tr>\n</thead>\n<tbody><tr>\n<td><img src=\"/img/swatches/quaternary__tint-80.svg\" alt=\"Quaternary Lighten Step 4\"></td>\n<td>+4</td>\n<td><code>#f5f6f9</code></td>\n<td><code>245, 246, 249</code></td>\n<td><code>--colorQuaternaryLighten4</code></td>\n</tr>\n<tr>\n<td><img src=\"/img/swatches/quaternary__tint-60.svg\" alt=\"Quaternary Lighten Step 3\"></td>\n<td>+3</td>\n<td><code>#eaeef4</code></td>\n<td><code>234, 238, 244</code></td>\n<td><code>--colorQuaternarytint-60</code></td>\n</tr>\n<tr>\n<td><img src=\"/img/swatches/quaternary__tint-40.svg\" alt=\"Quaternary Lighten Step 2\"></td>\n<td>+2</td>\n<td><code>#e1e6ef</code></td>\n<td><code>225, 230, 239</code></td>\n<td><code>--colorQuaternarytint-40</code></td>\n</tr>\n<tr>\n<td><img src=\"/img/swatches/quaternary__tint-20.svg\" alt=\"Quaternary Lighten Step 1\"></td>\n<td>+1</td>\n<td><code>#d7dee9</code></td>\n<td><code>215, 222, 233</code></td>\n<td><code>--colorQuaternarytint-20</code></td>\n</tr>\n<tr>\n<td><img src=\"/img/swatches/quaternary.svg\" alt=\"Quaternary Base Color\"></td>\n<td>Base</td>\n<td><code>#ced6e4</code></td>\n<td><code>206, 214, 228</code></td>\n<td><code>--colorQuaternary</code></td>\n</tr>\n<tr>\n<td><img src=\"/img/swatches/quaternary__shade-20.svg\" alt=\"Quaternary Darken Step 1\"></td>\n<td>-1</td>\n<td><code>#a4abb6</code></td>\n<td><code>164, 171, 182</code></td>\n<td><code>--colorQuaternaryshade-20</code></td>\n</tr>\n<tr>\n<td><img src=\"/img/swatches/quaternary__shade-40.svg\" alt=\"Quaternary Darken Step 2\"></td>\n<td>-2</td>\n<td><code>#7b8089</code></td>\n<td><code>123, 128, 137</code></td>\n<td><code>--colorQuaternaryshade-40</code></td>\n</tr>\n<tr>\n<td><img src=\"/img/swatches/quaternary__shade-60.svg\" alt=\"Quaternary Darken Step 3\"></td>\n<td>-3</td>\n<td><code>#51555b</code></td>\n<td><code>81, 85, 91</code></td>\n<td><code>--colorQuaternaryshade-60</code></td>\n</tr>\n<tr>\n<td><img src=\"/img/swatches/quaternary__shade-80.svg\" alt=\"Quaternary Darken Step 4\"></td>\n<td>-4</td>\n<td><code>#292a2d</code></td>\n<td><code>41, 42, 45</code></td>\n<td><code>--colorQuaternaryshade-80</code></td>\n</tr>\n</tbody></table>\n<h2 id=\"status-colors\">Status Colors</h2>\n<p>Status colors have been selected to adhere to<a href=\"https://www.jcs.mil/Portals/36/Documents/Doctrine/Other_Pubs/ms_2525d.pdf\"> MIL Standard 2525D</a>, <a href=\"http://everyspec.com/MIL-STD/MIL-STD-1400-1499/MIL-STD-1472G_39997/\">MIL Standard 1472G</a> and WCAG 2.0. Deviation from the primary color for each status is non-compliant. See the <a href=\"./status-system\">status page</a> for additional information about status color usage.</p>\n<h2 id=\"non-status-colors\">Non-Status Colors</h2>\n<p>Non-Status colors are designated for user interface elements that require distinct colors, but colors that do not conflict with status.</p>\n<p>::: note\nA common use for non-status colors as in identifying civilian assets or tagging.\n:::</p>\n<h2 id=\"tag-1\">Tag 1</h2>\n<table>\n<thead>\n<tr>\n<th></th>\n<th>Step</th>\n<th>Hex</th>\n<th>RGB</th>\n<th>CSS</th>\n</tr>\n</thead>\n<tbody><tr>\n<td><img src=\"/img/swatches/tag-1__tint-80.svg\" alt=\"Tag1 Lighten Step 4\"></td>\n<td>+4</td>\n<td><code>#f5f6f9</code></td>\n<td><code>208, 244, 244</code></td>\n<td><code>--colorTag1Lighten4</code></td>\n</tr>\n<tr>\n<td><img src=\"/img/swatches/tag-1__tint-60.svg\" alt=\"Tag1 Lighten Step 3\"></td>\n<td>+3</td>\n<td><code>#eaeef4</code></td>\n<td><code>161, 233, 235</code></td>\n<td><code>--colorTag1tint-60</code></td>\n</tr>\n<tr>\n<td><img src=\"/img/swatches/tag-1__tint-40.svg\" alt=\"Tag1 Lighten Step 2\"></td>\n<td>+2</td>\n<td><code>#e1e6ef</code></td>\n<td><code>112, 221, 224</code></td>\n<td><code>--colorTag1tint-40</code></td>\n</tr>\n<tr>\n<td><img src=\"/img/swatches/tag-1__tint-20.svg\" alt=\"Tag1 Lighten Step 1\"></td>\n<td>+1</td>\n<td><code>#d7dee9</code></td>\n<td><code>215, 222, 233</code></td>\n<td><code>--colorTag1tint-20</code></td>\n</tr>\n<tr>\n<td><img src=\"/img/swatches/tag-1.svg\" alt=\"Tag1 Base Color\"></td>\n<td>Base</td>\n<td><code>#ced6e4</code></td>\n<td><code>206, 214, 228</code></td>\n<td><code>--colorTag1</code></td>\n</tr>\n<tr>\n<td><img src=\"/img/swatches/tag-1__shade-20.svg\" alt=\"Tag1 Darken Step 1\"></td>\n<td>-1</td>\n<td><code>#a4abb6</code></td>\n<td><code>164, 171, 182</code></td>\n<td><code>--colorTag1shade-20</code></td>\n</tr>\n<tr>\n<td><img src=\"/img/swatches/tag-1__shade-40.svg\" alt=\"Tag1 Darken Step 2\"></td>\n<td>-2</td>\n<td><code>#7b8089</code></td>\n<td><code>123, 128, 137</code></td>\n<td><code>--colorTag1shade-40</code></td>\n</tr>\n<tr>\n<td><img src=\"/img/swatches/tag-1__shade-60.svg\" alt=\"Tag1 Darken Step 3\"></td>\n<td>-3</td>\n<td><code>#51555b</code></td>\n<td><code>81, 85, 91</code></td>\n<td><code>--colorTag1shade-60</code></td>\n</tr>\n<tr>\n<td><img src=\"/img/swatches/tag-1__shade-80.svg\" alt=\"Tag1 Darken Step 4\"></td>\n<td>-4</td>\n<td><code>#292a2d</code></td>\n<td><code>41, 42, 45</code></td>\n<td><code>--colorTag1shade-80</code></td>\n</tr>\n</tbody></table>\n<h2 id=\"tag-2\">Tag 2</h2>\n<table>\n<thead>\n<tr>\n<th></th>\n<th>Step</th>\n<th>Hex</th>\n<th>RGB</th>\n<th>CSS</th>\n</tr>\n</thead>\n<tbody><tr>\n<td><img src=\"/img/swatches/tag-2__tint-80.svg\" alt=\"Tag2 Lighten Step 4\"></td>\n<td>+4</td>\n<td><code>#e4e2f7</code></td>\n<td><code>228, 226, 247</code></td>\n<td><code>--colorTag2Lighten4</code></td>\n</tr>\n<tr>\n<td><img src=\"/img/swatches/tag-2__tint-60.svg\" alt=\"Tag2 Lighten Step 3\"></td>\n<td>+3</td>\n<td><code>#c9c5ed</code></td>\n<td><code>201, 197, 237</code></td>\n<td><code>--colorTag2tint-60</code></td>\n</tr>\n<tr>\n<td><img src=\"/img/swatches/tag-2__tint-40.svg\" alt=\"Tag2 Lighten Step 2\"></td>\n<td>+2</td>\n<td><code>#aea8e5</code></td>\n<td><code>174, 168, 229</code></td>\n<td><code>--colorTag2tint-40</code></td>\n</tr>\n<tr>\n<td><img src=\"/img/swatches/tag-2__tint-20.svg\" alt=\"Tag2 Lighten Step 1\"></td>\n<td>+1</td>\n<td><code>#938bdb</code></td>\n<td><code>147, 139, 219</code></td>\n<td><code>--colorTag2tint-20</code></td>\n</tr>\n<tr>\n<td><img src=\"/img/swatches/tag-2.svg\" alt=\"Tag2 Base Color\"></td>\n<td>Base</td>\n<td><code>#786dd3</code></td>\n<td><code>120, 109, 211</code></td>\n<td><code>--colorTag2</code></td>\n</tr>\n<tr>\n<td><img src=\"/img/swatches/tag-2__shade-20.svg\" alt=\"Tag2 Darken Step 1\"></td>\n<td>-1</td>\n<td><code>#6058a8</code></td>\n<td><code>96, 88, 168</code></td>\n<td><code>--colorTag2shade-20</code></td>\n</tr>\n<tr>\n<td><img src=\"/img/swatches/tag-2__shade-40.svg\" alt=\"Tag2 Darken Step 2\"></td>\n<td>-2</td>\n<td><code>#48417f</code></td>\n<td><code>72, 65, 127</code></td>\n<td><code>--colorTag2shade-40</code></td>\n</tr>\n<tr>\n<td><img src=\"/img/swatches/tag-2__shade-60.svg\" alt=\"Tag2 Darken Step 3\"></td>\n<td>-3</td>\n<td><code>#302c54</code></td>\n<td><code>48, 44, 84</code></td>\n<td><code>--colorTag2shade-60</code></td>\n</tr>\n<tr>\n<td><img src=\"/img/swatches/tag-2__shade-80.svg\" alt=\"Tag2 Darken Step 4\"></td>\n<td>-4</td>\n<td><code>#18152b</code></td>\n<td><code>24, 21, 43</code></td>\n<td><code>--colorTag2shade-80</code></td>\n</tr>\n</tbody></table>\n<h2 id=\"tag-3\">Tag 3</h2>\n<table>\n<thead>\n<tr>\n<th></th>\n<th>Step</th>\n<th>Hex</th>\n<th>RGB</th>\n<th>CSS</th>\n</tr>\n</thead>\n<tbody><tr>\n<td><img src=\"/img/swatches/tag-3__tint-80.svg\" alt=\"Tag3 Lighten Step 4\"></td>\n<td>+4</td>\n<td><code>#edcef3</code></td>\n<td><code>237, 206, 243</code></td>\n<td><code>--colorTag3Lighten4</code></td>\n</tr>\n<tr>\n<td><img src=\"/img/swatches/tag-3__tint-60.svg\" alt=\"Tag3 Lighten Step 3\"></td>\n<td>+3</td>\n<td><code>#da9ce7</code></td>\n<td><code>218, 156, 231</code></td>\n<td><code>--colorTag3tint-60</code></td>\n</tr>\n<tr>\n<td><img src=\"/img/swatches/tag-3__tint-40.svg\" alt=\"Tag3 Lighten Step 2\"></td>\n<td>+2</td>\n<td><code>#c76ada</code></td>\n<td><code>199, 106, 218</code></td>\n<td><code>--colorTag3tint-40</code></td>\n</tr>\n<tr>\n<td><img src=\"/img/swatches/tag-3__tint-20.svg\" alt=\"Tag3 Lighten Step 1\"></td>\n<td>+1</td>\n<td><code>#b534ce</code></td>\n<td><code>181, 52, 206</code></td>\n<td><code>--colorTag3tint-20</code></td>\n</tr>\n<tr>\n<td><img src=\"/img/swatches/tag-3.svg\" alt=\"Tag3 Base Color\"></td>\n<td>Base</td>\n<td><code>#a200c1</code></td>\n<td><code>162, 0, 193</code></td>\n<td><code>--colorTag3</code></td>\n</tr>\n<tr>\n<td><img src=\"/img/swatches/tag-3__shade-20.svg\" alt=\"Tag3 Darken Step 1\"></td>\n<td>-1</td>\n<td><code>#81009a</code></td>\n<td><code>129, 0, 154</code></td>\n<td><code>--colorTag3shade-20</code></td>\n</tr>\n<tr>\n<td><img src=\"/img/swatches/tag-3__shade-40.svg\" alt=\"Tag3 Darken Step 2\"></td>\n<td>-2</td>\n<td><code>#610074</code></td>\n<td><code>97, 0, 116</code></td>\n<td><code>--colorTag3shade-40</code></td>\n</tr>\n<tr>\n<td><img src=\"/img/swatches/tag-3__shade-60.svg\" alt=\"Tag3 Darken Step 3\"></td>\n<td>-3</td>\n<td><code>#41004d</code></td>\n<td><code>65, 0, 77</code></td>\n<td><code>--colorTag3shade-60</code></td>\n</tr>\n<tr>\n<td><img src=\"/img/swatches/tag-3__shade-80.svg\" alt=\"Tag3 Darken Step 4\"></td>\n<td>-4</td>\n<td><code>#200227</code></td>\n<td><code>32, 2, 39</code></td>\n<td><code>--colorTag3shade-80</code></td>\n</tr>\n</tbody></table>\n<h2 id=\"tag-4\">Tag 4</h2>\n<table>\n<thead>\n<tr>\n<th></th>\n<th>Step</th>\n<th>Hex</th>\n<th>RGB</th>\n<th>CSS</th>\n</tr>\n</thead>\n<tbody><tr>\n<td><img src=\"/img/swatches/tag-4__tint-80.svg\" alt=\"Tag4 Lighten Step 4\"></td>\n<td>+4</td>\n<td><code>#f8ddd1</code></td>\n<td><code>248, 221, 209</code></td>\n<td><code>--colorTag4Lighten4</code></td>\n</tr>\n<tr>\n<td><img src=\"/img/swatches/tag-4__tint-60.svg\" alt=\"Tag4 Lighten Step 3\"></td>\n<td>+3</td>\n<td><code>#f0baa3</code></td>\n<td><code>240, 186, 163</code></td>\n<td><code>--colorTag4tint-60</code></td>\n</tr>\n<tr>\n<td><img src=\"/img/swatches/tag-4__tint-40.svg\" alt=\"Tag4 Lighten Step 2\"></td>\n<td>+2</td>\n<td><code>#ea9875</code></td>\n<td><code>234, 152, 117</code></td>\n<td><code>--colorTag4tint-40</code></td>\n</tr>\n<tr>\n<td><img src=\"/img/swatches/tag-4__tint-20.svg\" alt=\"Tag4 Lighten Step 1\"></td>\n<td>+1</td>\n<td><code>#e27545</code></td>\n<td><code>226, 117, 69</code></td>\n<td><code>--colorTag4tint-20</code></td>\n</tr>\n<tr>\n<td><img src=\"/img/swatches/tag-4.svg\" alt=\"Tag4 Base Color\"></td>\n<td>Base</td>\n<td><code>#da5309</code></td>\n<td><code>218, 83, 9</code></td>\n<td><code>--colorTag4</code></td>\n</tr>\n<tr>\n<td><img src=\"/img/swatches/tag-4__shade-20.svg\" alt=\"Tag4 Darken Step 1\"></td>\n<td>-1</td>\n<td><code>#af420a</code></td>\n<td><code>175, 66, 10</code></td>\n<td><code>--colorTag4shade-20</code></td>\n</tr>\n<tr>\n<td><img src=\"/img/swatches/tag-4__shade-40.svg\" alt=\"Tag4 Darken Step 2\"></td>\n<td>-2</td>\n<td><code>#833209</code></td>\n<td><code>131, 50, 9</code></td>\n<td><code>--colorTag4shade-40</code></td>\n</tr>\n<tr>\n<td><img src=\"/img/swatches/tag-4__shade-60.svg\" alt=\"Tag4 Darken Step 3\"></td>\n<td>-3</td>\n<td><code>#572108</code></td>\n<td><code>87, 33, 8</code></td>\n<td><code>--colorTag4shade-60</code></td>\n</tr>\n<tr>\n<td><img src=\"/img/swatches/tag-4__shade-80.svg\" alt=\"Tag4 Darken Step 4\"></td>\n<td>-4</td>\n<td><code>#2b1105</code></td>\n<td><code>43, 17, 5</code></td>\n<td><code>--colorTag4shade-80</code></td>\n</tr>\n</tbody></table>\n",
      "excerpt": "<p>Maintaining color consistency across applications is an essential part of what makes an application an Astro Application. In Astro four key colors (primary, secondary, tertiary and quaternary) along with their respective light and dark variants provide a formalized approach to color. Additional color palettes with light and dark variants are provided for status colors and non-status colors.</p>",
      "id": "design-guidelines\\color"
    },
    {
      "tags": "resources",
      "path": "/design-guidelines/grid",
      "date": "Last Modified",
      "layout": "interior.template.njk",
      "title": "Grid",
      "contents": "<h1 id=\"grid\">Grid</h1>\n<p>A <a href=\"https://www.creativebloq.com/web-design/grid-theory-41411345\">grid system</a> is a defined set of vertical columns and optionally horizontal rows based on time-tested principles of graphic design and layout. Ensuring a consistent grid system within your application and across all Astro applications creates a sense of continuity and relationship from screen to screen and app to app, even when the layouts between those screens may have dramatically different requirements.</p>\n<h2 id=\"columns-gutters-and-margins\">Columns, Gutters and Margins</h2>\n<p>The Astro Grid is a standard 12 <a href=\"https://developer.mozilla.org/en-US/docs/Web/CSS/grid-column\">column</a> grid with column widths that expand or contract in relation to the width of the display. Columns are separated by a fixed-width <a href=\"https://developer.mozilla.org/en-US/docs/Web/CSS/column-gap\">gutter</a>. Astro-compliant applications may use gutters of either 20 pixels (default) or 10 pixels (compact). The grid is enclosed by a fixed-width margin of 30 pixels.</p>\n<p><img src=\"/img/design-guidelines/grid-lg-20px-gutter.png\" alt=\"Sample grid 20px gutter.\" title=\"Sample grid 20px gutter.\"></p>\n<p><img src=\"/img/design-guidelines/grid-lg-20px-gutter.png\" alt=\"Sample grid 10px gutter.\" title=\"Sample grid 10px gutter.\"></p>\n<h2 id=\"breakpoints\">Breakpoints</h2>\n<p>At certain screen sizes, Astro optimizes for display on narrow devices by reducing the number of columns and rearranging the layout of your application via <a href=\"https://developers.google.com/web/fundamentals/design-and-ux/responsive/\">responsive design</a> practices.</p>\n<table>\n<thead>\n<tr>\n<th>Breakpoint</th>\n<th>Columns</th>\n<th>Margin</th>\n<th>Cap</th>\n<th>Gap (compact)</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>0-350px</td>\n<td>4</td>\n<td>20px</td>\n<td>20px</td>\n<td>10px</td>\n</tr>\n<tr>\n<td>351-768px</td>\n<td>8</td>\n<td>30px</td>\n<td>20px</td>\n<td>10px</td>\n</tr>\n<tr>\n<td>769px</td>\n<td>12</td>\n<td>30px</td>\n<td>20px</td>\n<td>10px</td>\n</tr>\n</tbody></table>\n<p>::: note\n<a href=\"https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Grid_Layout\">CSS Grid</a> is the recommended method for implementing a grid in your Astro project. Using a custom layout grid adds overhead and layers of incompatibility, and as such, should only be used if your project requires backwards-compatibility with Internet Explorer 9 or earlier.\n:::</p>\n",
      "excerpt": "<p>A <a href=\"https://www.creativebloq.com/web-design/grid-theory-41411345\">grid system</a> is a defined set of vertical columns and optionally horizontal rows based on time-tested principles of graphic design and layout. Ensuring a consistent grid system within your application and across all Astro applications creates a sense of continuity and relationship from screen to screen and app to app, even when the layouts between those screens may have dramatically different requirements.</p>",
      "id": "design-guidelines\\grid"
    },
    {
      "tags": "resources",
      "path": "/design-guidelines/theme",
      "date": "Last Modified",
      "layout": "interior.template.njk",
      "title": "Theme",
      "contents": "<h1 id=\"theme\">Theme</h1>\n<p>Astro supports a brand new light theme along with the original and default dark theme.</p>\n<p><img src=\"/img/design-guidelines/theme-lightui.png\" alt=\"Example of a light theme Astro application.\" title=\"Example of a light theme Astro application.\">\nExample of a light theme Astro application.</p>\n<p>::: note\nBy convention, the Global Status Bar and its enclosed elements will always use the dark theme styling.\n:::</p>\n<h2 id=\"when-to-use-light-vs-dark\">When to Use Light vs Dark</h2>\n<p>It is important to determine the users’ environment and select the appropriate theme. In low-light operating environments where users’ pupils expand to allow more light to enter the cornea, a light-themed UI can be glaring and cause eye strain. Conversely, in a bright operating environment where the pupil contracts, letting less light in, dark-themed UIs can lose distinction and readability.</p>\n<h2 id=\"light-theme-use-cases\">Light Theme Use Cases:</h2>\n<ul>\n<li>Outdoor environments</li>\n<li>Brightly lit operating environments</li>\n<li>Elements with long passages of text</li>\n</ul>\n<h2 id=\"dark-theme-use-cases\">Dark Theme Use Cases</h2>\n<ul>\n<li>Dark operating environments</li>\n<li>Projection on large screens</li>\n<li>Applications where a primary media element demands attention</li>\n</ul>\n<p><img src=\"/img/design-guidelines/theme-darkui.png\" alt=\"The Global Status Bar is always rendered with the dark theme, as is any element contained within it.\" title=\"The Global Status Bar is always rendered with the dark theme, as is any element contained within it.\"></p>\n<h2 id=\"mixed-use\">Mixed Use</h2>\n<p>Individual sections or components can override their inherited theme on a case-by-case basis, enabling the render an element with a light theme in an predominantly dark-themed interface and vice versa. Examples:</p>\n<ul>\n<li>Dark-themed elements in the global status bar</li>\n<li>Light-themed modal window in a dark themed app</li>\n</ul>\n<p><img src=\"/img/design-guidelines/theme-darkui-mixed.png\" alt=\"Example of a predominantly dark theme interface with the modal window rendered using the light theme to place greater emphasis on an interaction demanding the user’s attention.\" title=\"Example of a predominantly dark theme interface with the modal window rendered using the light theme to place greater emphasis on an interaction demanding the user’s attention.\"></p>\n<h2 id=\"future-considerations\">Future Considerations</h2>\n<p>While not enabled by default at this time, light and dark themes can be swapped at runtime. For situations where lighting conditions can vary considerably, consider enabling runtime theme switching. A user-definable toggle in the application settings, an ambient light sensor or respecting OS level dark/light theme settings are all viable options.</p>\n<h2 id=\"implementation\">Implementation</h2>\n<p>Astro applications using the Astro CSS Library will default to the dark theme with no additional involvement by the developer. To enable the light theme with the Astro CSS Library, the <code>&lt;body&gt;</code> element of the application should be given a light-theme class (e.g., <code>&lt;body class=“light-theme”&gt;</code>. For all other applications, refer to the <a href=\"./color\">Color Palettes</a> for specific hex/rgb values in light and dark UIs.</p>\n",
      "excerpt": "<p>Astro supports a brand new light theme along with the original and default dark theme.</p>",
      "id": "design-guidelines\\theme"
    },
    {
      "tags": "resources",
      "path": "/design-guidelines/typography",
      "date": "Last Modified",
      "layout": "interior.template.njk",
      "title": "Typography",
      "contents": "<h1 id=\"typography\">Typography</h1>\n<p>Astro uses the open source typeface <a href=\"https://fonts.google.com/specimen/Open+Sans\">Open Sans</a> with bold, regular and light font variants for all heading, body copy and most interface elements. Astro also uses the open source typeface <a href=\"https://fonts.google.com/specimen/Roboto+Mono\">Roboto Mono</a> for elements requiring a monospaced typeface. As with all Astro elements, sizing is rendered in rem units. For those working with systems that don’t support <a href=\"https://developer.mozilla.org/en-US/docs/Learn/CSS/Introduction_to_CSS/Values_and_units#Length_and_size\">rem</a>, the corollary size is provided in points.</p>\n<h2 id=\"headings\">Headings</h2>\n<p>Astro supports three levels of headline text (h1, h2, h3). CSS properties are automatically applied to HTML elements.</p>\n<table>\n<thead>\n<tr>\n<th>Sample</th>\n<th>Weight</th>\n<th>Markup</th>\n<th>REM</th>\n<th>PX</th>\n<th>Class</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>H1</td>\n<td>Light</td>\n<td><code>&lt;h1&gt;</code></td>\n<td>2.375</td>\n<td>38</td>\n<td><code>.h1</code></td>\n</tr>\n<tr>\n<td>H2</td>\n<td>Light</td>\n<td><code>&lt;h2&gt;</code></td>\n<td>1.75</td>\n<td>28</td>\n<td><code>.h2</code></td>\n</tr>\n<tr>\n<td>H#</td>\n<td>Light</td>\n<td><code>&lt;h3&gt;</code></td>\n<td>1.375</td>\n<td>22</td>\n<td><code>.h3</code></td>\n</tr>\n</tbody></table>\n<p>::: note\nIn addition to semantic headings, Astro supports overriding a header element&#39;s presentation via .h1, .h2 .h3 CSS classes which will apply the visual appearance of the corresponding header element.\n:::</p>\n<h2 id=\"body-text\">Body Text</h2>\n<p>The default font size in Astro is 1rem/16px. Astro supports four additional font sizes for body copy.</p>\n<table>\n<thead>\n<tr>\n<th>Sample</th>\n<th>Weight</th>\n<th>REM</th>\n<th>PX</th>\n<th>Class</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>Lorem ipsum …</td>\n<td>Normal</td>\n<td>1.125</td>\n<td>18</td>\n<td><code>.xl</code></td>\n</tr>\n<tr>\n<td>Lorem ipsum …</td>\n<td>Normal</td>\n<td>1</td>\n<td>16</td>\n<td>--</td>\n</tr>\n<tr>\n<td>Lorem ipsum …</td>\n<td>Normal</td>\n<td>0.875</td>\n<td>14</td>\n<td><code>.md</code></td>\n</tr>\n<tr>\n<td>Lorem ipsum …</td>\n<td>Normal</td>\n<td>0.75</td>\n<td>12</td>\n<td><code>.sm</code></td>\n</tr>\n<tr>\n<td>Lorem ipsum …</td>\n<td>Normal</td>\n<td>0.65</td>\n<td>10</td>\n<td><code>.xs</code></td>\n</tr>\n</tbody></table>\n<h2 id=\"inline-text-styles\">Inline Text Styles</h2>\n<table>\n<thead>\n<tr>\n<th>Sample</th>\n<th>Class</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>Link Color</td>\n<td>--</td>\n</tr>\n<tr>\n<td>Low Contrast*</td>\n<td>`.low-contrast``</td>\n</tr>\n<tr>\n<td>Inverted Text Style</td>\n<td><code>.inverted</code></td>\n</tr>\n</tbody></table>\n<p>* The low contrast text option will fail WCAG readability compliance</p>\n",
      "excerpt": "<p>Astro uses the open source typeface <a href=\"https://fonts.google.com/specimen/Open+Sans\">Open Sans</a> with bold, regular and light font variants for all heading, body copy and most interface elements. Astro also uses the open source typeface <a href=\"https://fonts.google.com/specimen/Roboto+Mono\">Roboto Mono</a> for elements requiring a monospaced typeface. As with all Astro elements, sizing is rendered in rem units. For those working with systems that don&#x2019;t support <a href=\"https://developer.mozilla.org/en-US/docs/Learn/CSS/Introduction_to_CSS/Values_and_units#Length_and_size\">rem</a>, the corollary size is provided in points.</p>",
      "id": "design-guidelines\\typography"
    },
    {
      "tags": "design-process",
      "path": "/design-process/research",
      "date": "Last Modified",
      "layout": "interior.template.njk",
      "title": "Research",
      "contents": "<h1 id=\"research\">Research</h1>\n<p>Research is essential to a project’s success. It reveals, clarifies and establishes the foundation on which the application resides. Overlooked needs and requirements in this critical phase greatly diminish the quality and overall usability of the design. Take time to thoroughly understand the app’s UX requirements by learning more about:</p>\n<h2 id=\"the-user\">The User</h2>\n<ul>\n<li>Who is using it?</li>\n<li>Where are they using it?</li>\n<li>What are their tasks and workflows?</li>\n</ul>\n<h2 id=\"the-application\">The Application</h2>\n<ul>\n<li>What are the objectives and expectations?</li>\n<li>What problems is it solving?</li>\n<li>What processes must it include?</li>\n</ul>\n<h2 id=\"the-technology\">The Technology</h2>\n<ul>\n<li>What features are supported?</li>\n<li>What tools and templates are currently available?</li>\n<li>What are the technical capabilities and constraints?</li>\n</ul>\n<h2 id=\"the-stakeholders-the-people-who-determine-the-projects-success\">The Stakeholders (the people who determine the project’s success)</h2>\n<ul>\n<li>What are their expectations?</li>\n<li>What factors determine the user’s success?</li>\n<li>What factors determine the project’s success?</li>\n</ul>\n<h2 id=\"research-tasks-and-deliverables\">Research Tasks and Deliverables</h2>\n<p>As you conduct your research, complete each of these tasks to develop a comprehensive, 360-degree view of the needs, goals and requirements for the UX Design</p>\n<h3 id=\"key-research-tasks\">Key Research Tasks</h3>\n<ul>\n<li>Develop a concise Mission Statement.</li>\n<li>Define the objectives and expectations for the application.</li>\n<li>Continue to refer back to this statement throughout application development to avoid feature - drift and to stay on goal.</li>\n<li>Review all project and application materials.</li>\n<li>Interview and observe users.</li>\n<li>Interview subject matter experts (SME’s).</li>\n<li>Interview project stakeholders.</li>\n<li>Interview project technical leads.</li>\n</ul>\n<h3 id=\"key-research-deliverables\">Key Research Deliverables</h3>\n<ul>\n<li><a href=\"/downloads/user-interview-questions.zip\">User Interview Questions</a> [ZIP]</li>\n<li><a href=\"/downloads/sample-user-personas.zip\">Sample User Personas</a> [ZIP]</li>\n<li><a href=\"/downloads/persona-worksheet.zip\">Personas Worksheet</a> [ZIP]</li>\n<li><a href=\"/downloads/user-testing-questions-template.zip\">User Testing Questions Template</a> [ZIP]</li>\n<li><a href=\"/downloads/user-profile-worksheet.zip\">User Profile Worksheet</a> [ZIP]</li>\n</ul>\n<h2 id=\"user-requirements\">User Requirements</h2>\n<p>UX Design begins with extracting and documenting user requirements. Understanding the needs, wants and expectations of users creates the best user experience possible. Great apps go beyond meeting user requirements; they may solve problems that the user didn’t even know they had.</p>\n<h2 id=\"identify-required-features-and-content\">Identify Required Features and Content</h2>\n<ul>\n<li>What are the user’s primary tasks and goals?</li>\n<li>What features are essential to accomplishing those goals?</li>\n<li>What is the hierarchy of importance of features and content to support user workflows?</li>\n<li>What are the key tasks for the majority of users?</li>\n<li>Feature prioritization may be role dependent. A successful app design may require role-based presentation of content and/or complete screens.</li>\n</ul>\n<h2 id=\"interview-users\">Interview Users</h2>\n<p>As early as possible, interview users for a general understanding of their goals and requirements. Get to know their needs, wants, limitations and preferences. Watch for patterns to emerge in the gathered data and observe unique variables. Typical users include:</p>\n<ul>\n<li>Administrator</li>\n<li>Crew Chief</li>\n<li>Crew Commander</li>\n<li>Operator</li>\n<li>Range Control Officer</li>\n<li>Range Engineer</li>\n<li>Range Operator</li>\n<li>System Engineer</li>\n</ul>\n<h2 id=\"visit-users-on-site\">Visit Users On Site</h2>\n<p>Whenever possible, observe users in the process of doing their job on site. Take into consideration how the app fits into the physical environment in which it is used. Ask the user what they’re doing, and observe what they’re doing — this will often uncover findings that aren’t revealed during an interview.</p>\n<h2 id=\"develop-user-personas\">Develop User Personas</h2>\n<ul>\n<li>User Personas capture the user’s goals, motivations and limitations.</li>\n<li>Using the information gathered from user interviews and observation, create a profile that conveys a common understanding of the users for each role, including their primary motivations.</li>\n<li><a href=\"/downloads/sample-user-personas.zip\">Review examples of User Personas</a> [ZIP].</li>\n</ul>\n",
      "excerpt": "<p>Research is essential to a project&#x2019;s success. It reveals, clarifies and establishes the foundation on which the application resides. Overlooked needs and requirements in this critical phase greatly diminish the quality and overall usability of the design. Take time to thoroughly understand the app&#x2019;s UX requirements by learning more about:</p>",
      "id": "design-process\\research"
    },
    {
      "tags": "resources",
      "path": "/design-process/resources",
      "date": "Last Modified",
      "layout": "interior.template.njk",
      "title": "Design Resources",
      "contents": "<h1 id=\"resources\">Resources</h1>\n<h2 id=\"web-design\">Web Design</h2>\n<ul>\n<li>Stackoverflow.com – Questions and problem solving</li>\n<li>CodePen.io - Working examples of Web code and the ability to experiment “live”</li>\n<li>SmashingMagazine.com - HTML, CSS, JS, UX/UI, typography and design</li>\n<li>Alistapart.com - Web design, development, standards and best practices</li>\n<li>w3.org - Authoritative source for HTML standards</li>\n</ul>\n<h2 id=\"books-on-ux-design\">Books on UX Design</h2>\n<ul>\n<li>An Introduction to Human Factors Engineering, Second Edition, by Wickens, Lee, Liu, Becke</li>\n<li>About Face: The Essentials of Interaction Design 4th Edition by Alan Cooper, Robert Reimann, David Cronin, Christopher Noessel</li>\n<li>HTML5 For Web Designers by Jeremy Keith</li>\n<li>Just Enough Research by Erika Hall</li>\n<li>Microinteractions: Designing with Details 1st Edition by Dan Saffer</li>\n<li>Process and Guidelines for Ensuring a Quality User Experience by Rex Hartson, Pardha S. Pylar</li>\n<li>Sketching User Experiences by Bill Buxton</li>\n<li>Writing for Interaction: Crafting the Information Experience for Web and Software Apps by Linda Newman Lior</li>\n</ul>\n<h2 id=\"wireframing-and-prototyping-tools\">Wireframing and Prototyping Tools</h2>\n<ul>\n<li>Balsamiq</li>\n<li>Powerpoint</li>\n<li>Keynote</li>\n<li>Axure</li>\n<li>Invision</li>\n<li>Sketch</li>\n</ul>\n",
      "excerpt": "",
      "id": "design-process\\resources"
    },
    {
      "tags": "design-process",
      "path": "/design-process/ui-design",
      "date": "Last Modified",
      "layout": "interior.template.njk",
      "title": "UI Design",
      "contents": "<h1 id=\"ui-design\">UI Design</h1>\n<h2 id=\"design-process-preparation\">Design Process Preparation</h2>\n<p>The most successful application designs are built upon in-depth knowledge of the user’s needs, wants and expectations. Before entering the design phase:</p>\n<ul>\n<li>Complete your research.</li>\n<li>Establish key workflows.</li>\n<li>Determine the goals of the user and the application.</li>\n</ul>\n<p>To ensure optimal user experience and reduce development time, use these Design Principles — Communication, Simplicity, Workflow and High-Interactivity to guide you throughout the design process.</p>\n<h2 id=\"concept-sketches\">Concept Sketches</h2>\n<p>Before coding begins, Concept Sketches on paper help lay out the main navigation and controls. Sketches clarify the flow of user interaction from screen-to-screen.</p>\n<p><img src=\"/img/ui-design/concept-sketches.png\" alt=\"Hand drawn wireframe example\" title=\"Example of a hand drawn wireframe concept\"></p>\n<h2 id=\"wireframe-design\">Wireframe Design</h2>\n<p>Wireframes are analogous to creating a blueprint for a house. Before building the house, there is an architectural diagram to follow. Wireframes are detailed evolution of the Concept Sketches. They visually represent the user interface. Wireframes don’t include visual design or interactive elements.</p>\n<p>The goal of wireframing is to communicate detailed screens views, the hierarchy of information and the flow of one screen to the next. For example, when a user presses a “Next” button, the wireframe diagram should indicate what screen are they directed to.</p>\n<p>Wireframes should:</p>\n<ul>\n<li>Demonstrate and attend to the main goals of the user and the application.</li>\n<li>Reflect user motivations and tasks.</li>\n<li>Specify the placement of functionality (which should reinforce the priorities of the user).</li>\n<li>Indicate the flow of the functionality.</li>\n</ul>\n<p>Validate the Wireframes with the users. It’s important that you elicit feedback from users on the wireframes prior to prototyping. Make sure the:</p>\n<ul>\n<li>App supports the users workflow and tasks.</li>\n<li>Wireframes communicate the functionality.</li>\n</ul>\n<p><img src=\"/img/ui-design/wireframes.png\" alt=\"Low fidelity wireframes\" title=\"Example of a low fidelity wireframes executed in a design program\"></p>\n",
      "excerpt": "<p>The most successful application designs are built upon in-depth knowledge of the user&#x2019;s needs, wants and expectations. Before entering the design phase:</p>",
      "id": "design-process\\ui-design"
    },
    {
      "tags": "design-process",
      "path": "/design-process/visual-design",
      "date": "Last Modified",
      "layout": "interior.template.njk",
      "title": "Visual Design",
      "contents": "<h1 id=\"visual-design\">Visual Design</h1>\n<p>The Visual Language for Astro Applications is designed to reinforce usability and provide a professional appearance. The visual design supports key functionality such as monitoring the health and status of systems, logically grouping common tasks and related data, and rapid identification of different equipment. The Astro Visual Language is comprised of specific colors, fonts, icons, widgets and controls.</p>\n<p><img src=\"/img/visual-design/visual-design.png\" alt=\"Low fidelity wireframe juxtaposed against a final visual design\"></p>\n<p>If an application requires the design of unique application elements that aren&#39;t covered in the guidelines, make the new designs complement the Astro Visual Language. Whenever possible, use the same color palette, fonts and icon style. The goal is to evolve the visual language to meet specific application needs, not redesign it.</p>\n<p>All icon metaphors must be the same across applications. Don&#39;t assign them new meaning. It&#39;s important that icons have metaphors that are quickly identifiable and clearly distinguishable from one another. To maintain consistency, when creating new icons, make sure they use the same design style, colors and sizes.</p>\n<p>Once you have completed the interface with wireframes, it’s time to consider the visual design. Visual design focuses on the overall aesthetics of the interface. A good visual design should reinforce the appropriate use of the functionality and communicate the overall goal of the user. For example, if the most important goal of the application is to communicate overall health and status of the system, the visual design should reinforce communication through use of color, imagery and designed controls.</p>\n<p>Well-designed UI frameworks are a prerequisite for good visual design as one plays off the other. For instance, good groupings of information, such as status iconography, helps the visual design communicate the appropriate message at the right time. User interface and visual design should be synergistic rather than in competition with each other. Again, understanding common patterns and placement of UI elements and widgets used within Astro Apps help lay the groundwork for a cohesive visual presentation of information.</p>\n<p>Visual design is an enhancement of the User Interface Design. Combined, each discipline creates the overall User Experience. Appearance, behavior and satisfaction all come into play in how users judge an application. Each interaction affects how users interpret and evaluate an application. What users see conveyed through layout, color, type, imagery, controls and affordances affects not only their first impression, but also how they use the application.</p>\n<h2 id=\"visual-design-principles\">Visual Design Principles</h2>\n<p>Visual Design can be somewhat elusive to many developers. The Astro UX Guidelines provide a robust UI Component Library supported by visual examples that detail best practices and common mistakes. Review these core visual design principles and tools that support the creation of a successful visual language.</p>\n<h3 id=\"consistency\">Consistency</h3>\n<ul>\n<li>Establishes and supports user expectations</li>\n<li>Speeds learning</li>\n<li>Reinforces task efficiency and accuracy</li>\n<li>Examples: - Elements and controls look and behave the same - Status panels and key controls are in the same location - Iconography utilizes consistent metaphors for like functions and are styled the same</li>\n</ul>\n<h3 id=\"hierarchy\">Hierarchy</h3>\n<ul>\n<li>Reinforces workflows</li>\n<li>Establishes relative importance and relationships</li>\n<li>Established through size, placement, color and design style</li>\n<li>Examples: - Layout reinforces workflow (typically top left to bottom right) - Status Indicators that must be monitored, are always large and prominent - Header type is larger and more prominent than content type</li>\n</ul>\n<h3 id=\"personality\">Personality</h3>\n<ul>\n<li>Reinforces perception of application quality</li>\n<li>Supports user expectation of application usability</li>\n</ul>\n<h2 id=\"five-visual-design-tools\">Five Visual Design Tools</h2>\n<h3 id=\"layout\">Layout</h3>\n<ul>\n<li>Establishes expectations of where things belong</li>\n<li>Addresses positioning, alignment, spacing and grids</li>\n<li>Reinforces Hierarchy</li>\n</ul>\n<h3 id=\"type\">Type</h3>\n<ul>\n<li>Legibility: size, style, spacing and contrast</li>\n<li>Provides quick recognition and readability speed</li>\n<li>Reinforces Personality</li>\n</ul>\n<h3 id=\"color\">Color</h3>\n<ul>\n<li>Establishes and reinforces Consistency</li>\n<li>Reinforces Hierarchy</li>\n<li>Reinforces Personality</li>\n<li>Affords status heat</li>\n</ul>\n<h3 id=\"iconography-and-imagery\">Iconography and Imagery</h3>\n<ul>\n<li>A pictorial language to quickly identify states, objects, tools and actions</li>\n<li>Reinforces Consistency, Hierarchy and Personality</li>\n<li>Image metaphors are quickly identifiable and distinguishable</li>\n<li>State indicators are quickly identifiable and distinguishable</li>\n</ul>\n<h3 id=\"controls-and-affordances\">Controls and Affordances</h3>\n<ul>\n<li>Controls: Interactive interface elements which may be singular or widgets comprised of many controls</li>\n<li>Affordances: Visual properties that provide visual cues for quick usability recognition (for example: - “Click” versus “Drag” interaction)</li>\n<li>Reinforces Consistency and Personality: Utilizing these methodologies, the UI Component Library and visual examples provide a framework of compliance standards for an application visual language design.</li>\n</ul>\n",
      "excerpt": "<p>The Visual Language for Astro Applications is designed to reinforce usability and provide a professional appearance. The visual design supports key functionality such as monitoring the health and status of systems, logically grouping common tasks and related data, and rapid identification of different equipment. The Astro Visual Language is comprised of specific colors, fonts, icons, widgets and controls.</p>",
      "id": "design-process\\visual-design"
    },
    {
      "tags": [
        "ttc",
        "egs"
      ],
      "path": "/ttc-service-ux-design/about-the-ttc-designs",
      "date": "Last Modified",
      "layout": "interior.template.njk",
      "title": "About the TT&C Designs",
      "contents": "<h1 id=\"about-the-ttc-designs\">About the TT&amp;C Designs</h1>\n<h2 id=\"telemetry-tracking--command-ttc\">Telemetry, Tracking &amp; Command (TT&amp;C)</h2>\n<p>The purpose of a Telemetry, Tracking, and Command (TT&amp;C) system is to support missions requiring communication between satellites and ground systems. Key aspects of this include tracking the satellites, monitoring and maintaining their state of health (SOH) via telemetry data, and transmitting commands to them to achieve mission objectives. An analysis of existing systems and task flows reveals three main components to supporting TT&amp;C services:</p>\n<ul>\n<li><strong>Monitor Constellation</strong> - monitor the status, health and function of a satellite constellation and the systems it relies on.</li>\n<li><strong>Command Satellites</strong> - send and receive streams of data to and from a spacecraft, done using a set of commands arranged into a pass plan.</li>\n<li><strong>Investigate Anomalies</strong> - investigate spacecraft alerts and anomalies, as well as analyze subsystem mnemonics, measurements, value limits, etc.</li>\n</ul>\n<p>The animated graphic below depicts a much simplified version of a TT&amp;C task flow, including major phases and activities.</p>\n<p><img src=\"/img/service-specific-ux-design/gif-placeholder.png\" alt=\"Task Flow Example\"></p>\n<h3 id=\"ux-research-findings\">UX Research Findings</h3>\n<p>UX research conducted in collaboration with users and domain experts on existing TT&amp;C workflows and systems found that:</p>\n<ul>\n<li>There are operational differences based on mission, but the job of interacting with TT&amp;C solutions is in the hands of Satellite Systems Operators (SSO) or Satellite Vehicle Operators (SVO). These operators can range from entry-level to advanced in terms of skill and engineering knowledge and generally work in a control center environment using a dedicated computer system with 2 or 3 large displays.</li>\n<li>The majority of operators’ TT&amp;C activities take place when a target satellite is within contact range, but there are activities to be completed between contacts, including preparing for contact with the next satellite in the constellation.</li>\n<li>Accomplishing all the necessary tasks during a pass (when the satellite is within contact) can require switching between many windows or workstations to access controls and information.</li>\n<li>Current TT&amp;C solutions lack a centralized place for operators to view important information at-a-glance.</li>\n<li>Operators are responsible for multiple satellites and there is a limited window to communicate with each, so it is imperative that they be able to perform their tasks quickly and with a minimum of cognitive load.<br>The software used for these systems often appears dated and visually disjointed.</li>\n</ul>\n<h2 id=\"ux-design-and-sample-apps\">UX Design and Sample Apps</h2>\n<p>Based on this initial research and follow-up design iterations with operators and stakeholders, the resulting design effort focused on a suite of three TT&amp;C Sample Apps, each designed to support key functionality and task flows. Each of the apps is designed to occupy its own browser window, allowing operators to focus on the task at hand, but by virtue of being integrated into a suite, the apps share functionality and support common task flows.</p>\n<h3 id=\"ttc-app-suite\">TT&amp;C App Suite</h3>\n<p>:::two-col</p>\n<p><img src=\"/img/service-specific-ux-design/ttc-suite-apps.png\" alt=\"TT&amp;C Application Suite\"></p>\n<p>:::col\nThe TT&amp;C App Suite comprises three integrated apps: Monitor, Command &amp; Investigate.</p>\n<ul>\n<li><a href=\"http://com.rocketcom.astrouxds.s3.amazonaws.com/attachments/cjtsuut4g06uf4iqnzr4bbtpu-tt-c-specifications.pdf\">TT&amp;C Design Specifications (pdf)</a></li>\n<li><a href=\"http://com.rocketcom.astrouxds.s3.amazonaws.com/attachments/cjtsuumzf06uc4iqnahidda1l-tt-c-wireframes.pdf\">TT&amp;C Wireframes (pdf)</a>\n:::</li>\n</ul>\n<h3 id=\"ttc-monitor\">TT&amp;C Monitor</h3>\n<p>:::two-col</p>\n<p><img src=\"/img/service-specific-ux-design/ttc-monitor-app.png\" alt=\"TT&amp;C Monitor App\"></p>\n<p>:::col\nThe TT&amp;C Monitor app allows operators to monitor status, alerts, health and function of an individual satellite and satellite constellations.</p>\n<ul>\n<li><a href=\"https://astrouxds.com/tt-c-service-ux-design/tt-c-monitor\">Overview of TT&amp;C Monitor</a></li>\n<li><a href=\"https://ttc-monitor.astrouxds.com/\">Launch TT&amp;C Monitor Sample App</a></li>\n<li><a href=\"https://bitbucket.org/rocketcom/tt-c-monitor/src/master/\">App Source Code (Git Repository)</a>\n:::</li>\n</ul>\n<h3 id=\"ttc-command\">TT&amp;C Command</h3>\n<p>:::two-col</p>\n<p><img src=\"/img/service-specific-ux-design/ttc-equipment-manager-app.png\" alt=\"TT&amp;C Command App\"></p>\n<p>:::col\nThe TT&amp;C Command app allows operators to send and receive streams of data to and from a spacecraft using a set of commands, often referred to as a pass plan.</p>\n<ul>\n<li><a href=\"https://astrouxds.com/tt-c-service-ux-design/tt-c-command\">Overview of TT&amp;C Command</a></li>\n<li><a href=\"https://ttc-command.astrouxds.com/\">Launch TT&amp;C Command Sample App</a></li>\n<li><a href=\"https://bitbucket.org/rocketcom/tt-c-command/src/master/\">App Source Code (Git Repository)</a></li>\n</ul>\n<p>:::</p>\n<h3 id=\"ttc-investigate\">TT&amp;C Investigate</h3>\n<p>:::two-col</p>\n<p><img src=\"/img/service-specific-ux-design/ttc-investigate-app.png\" alt=\"TT&amp;C Schedule App\"></p>\n<p>:::col\nThe TT&amp;C Investigate app allows operators to investigate spacecraft alerts and anomalies and analyze subsystem mnemonics, measurements, limits, etc …</p>\n<ul>\n<li><a href=\"https://astrouxds.com/tt-c-service-ux-design/tt-c-investigate\">Overview of TT&amp;C Investigate</a></li>\n<li><a href=\"https://ttc-investigate.astrouxds.com/\">Launch TT&amp;C Investigate Sample App</a></li>\n<li><a href=\"https://bitbucket.org/rocketcom/tt-c-investigate/src/master/\">App Source Code (Git Repository)</a>\n:::</li>\n</ul>\n",
      "excerpt": "<p>The purpose of a Telemetry, Tracking, and Command (TT&amp;C) system is to support missions requiring communication between satellites and ground systems. Key aspects of this include tracking the satellites, monitoring and maintaining their state of health (SOH) via telemetry data, and transmitting commands to them to achieve mission objectives. An analysis of existing systems and task flows reveals three main components to supporting TT&amp;C services:</p>",
      "id": "ttc-service-ux-design\\about-the-ttc-designs"
    },
    {
      "tags": [
        "ttc",
        "egs"
      ],
      "path": "/ttc-service-ux-design/ttc-command",
      "date": "Last Modified",
      "layout": "interior.template.njk",
      "title": "TT&C Comand",
      "contents": "<h2 id=\"ttc-comand\">TT&amp;C Comand</h2>\n<p><a href=\"https://ttc-command.astrouxds.com/\">Launch TT&amp;C Comand Sample App</a> | <a href=\"#contentBottom\">Design Materials and Source Code</a></p>\n<p>The TT&amp;C Command app is designed to be used for sending and receiving communications with a satellite during a contact. It contains status and command data for only a single satellite - one currently in a pass. Operators can open multiple command windows if they are managing several passes simultaneously.</p>\n<p>UX research underscored the fact that commanding is the core of TT&amp;C operations and that existing systems often split the functionality to support it across application windows. This makes finding critical information and actions more difficult and time consuming. Therefore, a key tenet of the Command app design was to centralize the core functionality into a single window.</p>\n<p>Another aspect of the design aimed at reducing cognitive load is to give operators the ability to automate execution of the Pass Plan. Here, a plan can be run in a Manual mode, in which an operator determines when the next step is executed, Automated mode, in which the steps are executed sequentially by the system itself, or Semi-Auto mode, a hybrid of the two. Plans are set up to run in a default mode, but operators with sufficient privileges can override this as the situation dictates. Operators also have the option to add commands to the Pass Plan queue if necessary.</p>\n<p><img src=\"/img/service-specific-ux-design/ttc-command-app.png\" alt=\"TT&amp;C Comand App\"></p>\n<p>There are four main areas in the Command app: the Global Status Bar, Alerts panel, Pass Plan panel and System Health panel. The key elements are described below, but you can find much more design and task flow detail in the <a href=\"/tt-c-service-ux-design/tt-c-command#contentBottom\">TT&amp;C Design Specification and Wireframes</a> documents. You can also launch the <a href=\"https://ttc-command.astrouxds.com/\">TT&amp;C Command Sample App</a> to explore the design interactively.\n<img src=\"/img/service-specific-ux-design/ttc-command-app-details.png\" alt=\"TT&amp;C Comand App Details\"></p>\n<h2 id=\"global-status-bar\">Global Status Bar</h2>\n<p>As outlined on the <a href=\"/ttc-service-ux-design/about-the-ttc-designs\">About TT&amp;C Designs</a> page, each of the apps in the TT&amp;C Suite is designed to occupy its own browser window, allowing operators to focus on the task at hand. But by virtue of being integrated into a suite, the apps share common functionality, such as a single login. Much of the shared functionality is provided in the <a href=\"/ui-components/global-status-bar\">Global Status Bar</a>, an Astro component featured in all three apps. Though the status bar contents vary somewhat between apps in order to best support each app’s individual workflows, all contain a <a href=\"/ui-components/clock\">Clock</a>, <a href=\"/ui-components/icons-and-symbols\">Monitoring Icons</a>, and an app switching menu that allows operators to transition quickly from one TT&amp;C task flow to another.</p>\n<p><img src=\"/img/service-specific-ux-design/ttc-command-global-status-bar-details.png\" alt=\"TT&amp;C Comand Global Status Bar Details\"></p>\n<ol>\n<li><strong>App Switcher Menu</strong> - the App Switcher Menu allows the user to launch new instances of different TT&amp;C apps, sign in/sign out, and edit preferences.</li>\n<li><strong>Global Clock</strong> - time is central to many TT&amp;C service task flows, so it is included in the Global Status Bar in all TT&amp;C apps.</li>\n<li><strong>Monitoring Icons</strong> - the Dashboard app includes Upcoming Contacts Allocated (UCA) and Software status indicators, as well as status and alert counts for each of the top categories in the equipment hierarchy.</li>\n</ol>\n<h2 id=\"alerts\">Alerts</h2>\n<p>The Alerts panel provides operators with a roll-up of spacecraft specific alerts, as well as communications, software, and its assigned ground station. Operators can filter the alerts by Severity and Category, allowing them to quickly identify the most severe issues or focus in on particular areas of the system. This allows operators to efficiently track their workflow and keeps the Alerts pane more sparsely populated, so they’ll be more likely to notice when new alerts come in. Operators can also drill in to see additional information on any of the alerts and launch an instance of the <a href=\"/tt-c-service-ux-design/tt-c-investigate\">TT&amp;C Investigate App</a> to explore the issue further.</p>\n<p>:::two-col\n<img src=\"/img/service-specific-ux-design/ttc-monitor-alerts-details.png\" alt=\"TT&amp;C Comand Alerts Detail\"></p>\n<ol>\n<li><strong>Active Alert Hero Number</strong> - Shows number of active alerts at a glance.</li>\n<li><strong>Filter Drop-downs</strong> - filters alert list by severity and category.</li>\n<li><strong>Expandable List Items</strong> - expands to show alert details and call-to-action (if applicable).</li>\n<li><strong>Investigate</strong> - launches an instance of the TT&amp;C Investigate App.</li>\n<li><strong>Acknowledge/Dismiss</strong> - acknowledges or dismisses alerts.\n:::</li>\n</ol>\n<h2 id=\"pass-plan\">Pass Plan</h2>\n<p>The Pass Plan panel is where operators will track or initiate execution of the commands sent to the satellite. Depending on whether the current plan is running in Manual, Semi-Auto or Automated mode, operators will either explicitly initiate commands in this pane, simply monitor the progress as the system initiates the commands, or something in between. If it becomes necessary to insert a command in the plan, operators could use the Add to queue functionality at the bottom of the pane to search and specify the command to be inserted.</p>\n<p>:::two-col\n<img src=\"/img/service-specific-ux-design/ttc-command-pass-plan-details.png\" alt=\"TT&amp;C Comand Pass Plan Detail\"></p>\n<ol>\n<li><strong>Mode</strong> - allows operators with the necessary permissions to set the plan to run in Manual, Semi-Auto, or Automated mode.</li>\n<li><strong>Pass Indicator</strong> - allows operators to determine if they are in pre-pass, pass or post-pass in relation to the AOS/LOS for the contact.</li>\n<li><strong>Pass Plan</strong> - an interactive checklist of instructions an operator is expected to complete during a pass. This includes, but is not limited to: Checkboxes, drop down selectors and play and pause controls.</li>\n<li><strong>Mnemonic Snapshot</strong> - allows operators to inspect a mnemonic called out for verification in the pass plan.</li>\n<li><strong>Command Line</strong> - allows operators to enter commands needed to maintain the overall health of the pass, for anomaly resolution and/or other operational needs.\n:::</li>\n</ol>\n<h2 id=\"system-health\">System Health</h2>\n<p>The System Health panel allows operators to track the strength of the communication signal with the satellite and monitor the overall health of the satellite subsystems. The health data here is determined from telemetry data coming in during the pass. If there is a problem with any of the subsystems, operators can navigate directly to a detailed view of it in the Investigate app to determine if action is required during the pass. This panel also includes Watcher functionality specific to the satellite.\n:::two-col\n<img src=\"/img/service-specific-ux-design/ttc-command-system-health-details.png\" alt=\"TT&amp;C Comand System Health Detail\"></p>\n<ol>\n<li><strong>Lock and Signal Strength</strong> - displays the lock value and signal strength, as well as a status indicator of the quality of lock.</li>\n<li><strong>Telemetry and Total Frame Count</strong> - displays telemetry value and a status indicator to determine, at-a-glance, the quality of telemetry, as well as the frame count.</li>\n<li><strong>VCC (Vehicle Command Count)</strong> - displays the total command count of the commands being sent to the spacecraft as well as any bad commands sent or received.</li>\n<li><strong>Subsystem Status</strong> - the subsystem’s health is identified by the accompanying status indicator.</li>\n<li><strong>Investigate</strong> - opens a view of the subsystem in the TT&amp;C Investigate App.</li>\n<li><strong>Contextual Watcher</strong> - displays mnemonic information being watched for the satellite in the current pass.\n:::</li>\n</ol>\n<h2 id=\"task-flow-example---pass-flow\">Task Flow Example - Pass Flow</h2>\n<p>Below is an animated walkthrough of a representative task flow using the TT&amp;C Monitor app. In this flow, an operator runs through the steps in the pre-defined pass plan and adds a command at the end.</p>\n<p><img src=\"/img/service-specific-ux-design/gif-placeholder.png\" alt=\"Task Flow Example\"></p>\n<h2 id=\"design-materials-and-source-code\">Design Materials and Source Code</h2>\n<p>Below are design and development resources to get you started on an app that supports TT&amp;C services. Note that there are some discrepancies between the design documents and the <a href=\"https://ttc-command.astrouxds.com/\">TT&amp;C Command Sample App</a> due to design improvements that were introduced late in the app development cycle.</p>\n<table>\n<thead>\n<tr>\n<th>Resources</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody><tr>\n<td><a href=\"http://com.rocketcom.astrouxds.s3.amazonaws.com/attachments/cjx3r384i2gbihmqnxcwrq25d-ttc-specifications.pdf\">TT&amp;C Design Specifications (pdf)</a></td>\n<td>The TT&amp;C Design Specification contains information on use cases, task flows, UX research and wireframes for key features of the TT&amp;C App Suite.</td>\n</tr>\n<tr>\n<td><a href=\"http://com.rocketcom.astrouxds.s3.amazonaws.com/attachments/cjtsx349t073s4iqnxbejjwg6-ttc-wireframes.pdf\">TT&amp;C Design Wireframes (pdf)</a></td>\n<td>The TT&amp;C Design Wireframes document contains the complete set of wireframes (mid-fidelity renderings) of the screens designed for the TT&amp;C App Suite.</td>\n</tr>\n<tr>\n<td><a href=\"https://bitbucket.org/rocketcom/tt-c-command/src/master/\">App Source Code (Git Repository)</a></td>\n<td>The source code Git repository and other useful documentation for the TT&amp;C Command App is hosted at bitbucket.org so that you can check it out in detail.</td>\n</tr>\n</tbody></table>\n",
      "excerpt": "<p><a href=\"https://ttc-command.astrouxds.com/\">Launch TT&amp;C Comand Sample App</a> | <a href=\"#contentBottom\">Design Materials and Source Code</a></p>",
      "id": "ttc-service-ux-design\\ttc-command"
    },
    {
      "tags": [
        "ttc",
        "egs"
      ],
      "path": "/ttc-service-ux-design/ttc-investigate",
      "date": "Last Modified",
      "layout": "interior.template.njk",
      "title": "TT&C Investigate",
      "contents": "<h2 id=\"ttc-investigate\">TT&amp;C Investigate</h2>\n<p><a href=\"https://ttc-equipment.astrouxds.com/\">Launch TT&amp;C Investigate Sample App</a> | <a href=\"#contentBottom\">Design Materials and Source Code</a></p>\n<p>The Investigate app displays system schematics and status data for a selected satellite. This allows operators to gather additional detail on alerts, view the relationships of components in the equipment hierarchy and select particular values to add to the Watcher panel in the Monitor and Command apps.</p>\n<p>UX research revealed that existing systems often require operators to drill-in through the hierarchy of systems and subsystems in a manner that opens a new window each time. This forces operators to spend time and effort managing windows in order to find data they need. To overcome this problem, the design of the Investigate app allows operators to select an item of interest from a tree structure on the left side of the window and then drill-in to more detail using panes to the right, keeping everything in a single window.</p>\n<p><img src=\"/img/service-specific-ux-design/ttc-investigate-app.png\" alt=\"TT&amp;C Investigate App\"></p>\n<p>There are four main areas in the Investigate app: the Global Status Bar, Subsystem Tree Menu, Subsystem Assembly Layout and Mnemonic Data Table. The key elements are described below, but you can find much more design and task flow detail in the <a href=\"/tt-c-service-ux-design/tt-c-investigate#contentBottom\">TT&amp;C Design Specification and Wireframes</a> documents. You can also launch the <a href=\"https://ttc-investigate.astrouxds.com/\">TT&amp;C Investigate Sample App</a> to explore the design interactively.</p>\n<p><img src=\"/img/service-specific-ux-design/ttc-investigate-app-details.png\" alt=\"TT&amp;C Investigate App Details\"></p>\n<h2 id=\"global-status-bar\">Global Status Bar</h2>\n<p>As outlined on the <a href=\"/ttc-service-ux-design/about-the-ttc-designs\">About TT&amp;C Designs</a> page, each of the apps in the TT&amp;C Suite is designed to occupy its own browser window, allowing operators to focus on the task at hand. But by virtue of being integrated into a suite, the apps share common functionality, such as a single login. Much of the shared functionality is provided in the <a href=\"/ui-components/global-status-bar\">Global Status Bar</a>, an Astro component featured in all three apps. Though the status bar contents vary somewhat between apps in order to best support each app’s individual workflows, all contain a <a href=\"/ui-components/clock\">Clock</a>, <a href=\"/ui-components/icons-and-symbols\">Monitoring Icons</a>, and an app switching menu that allows operators to transition quickly from one TT&amp;C task flow to another.</p>\n<p><img src=\"/img/service-specific-ux-design/ttc-investigate-global-status-bar-details.png\" alt=\"TT&amp;C Dashboard Global Status Bar Details\"></p>\n<ol>\n<li><strong>App Switcher Menu</strong> - the App Switcher Menu allows the user to launch new instances of different TT&amp;C apps, sign in/sign out, and edit preferences.</li>\n<li><strong>Global Clock</strong> - time is central to many TT&amp;C service task flows, so it is included in the Global Status Bar in all TT&amp;C apps.</li>\n<li><strong>Monitoring Icons</strong> - the Dashboard app includes Upcoming Contacts Allocated (UCA) and Software status indicators, as well as status and alert counts for each of the top categories in the equipment hierarchy.</li>\n</ol>\n<h2 id=\"subsystem-tree-menu\">Subsystem Tree Menu</h2>\n<p>The Subsystem Tree Menu shows a hierarchical list of the satellite subsystems. Status of lower level elements is bubbled up to the subsystem level so that operators can quickly identify subsystems that have problems without having to expand nodes in the tree. When a subsystem is selected, the related subsystem assembly layout and mnemonic data table is shown in the content area to the right.</p>\n<p>:::two-col</p>\n<p><img src=\"/img/service-specific-ux-design/ttc-investigate-subsystem-tree-details.png\" alt=\"TT&amp;C Subsytem Tree\"></p>\n<ol>\n<li><strong>Expandable List Items</strong> - subsystem menu items expand to show any related sub-subsystems in the section to the right.</li>\n<li><strong>Status Symbols</strong> - status symbols indicate current subsystem status and severity.</li>\n</ol>\n<p>:::</p>\n<h2 id=\"inoperable-equipment-page\">Inoperable Equipment Page</h2>\n<p>The default view of the Investigate app is the Inoperable Equipment page, which contains a grid of equipment in a critical or serious alert state, organized by category and color coded by severity. This allows operators to quickly identify assets that need attention. From this view, operators can click on a piece of equipment to be taken to its details page for more information and to take action.</p>\n<p><img src=\"/img/service-specific-ux-design/ttc-investigate-inop-details.png\" alt=\"TT&amp;C Investigate Inoperable Equipment Page\"></p>\n<ol>\n<li><strong>Equipment Categories</strong> - inoperable equipment is organized into categories along with a total for the category.</li>\n<li><strong>Equipment Status</strong> - inoperable equipment is displayed with status coding indicating the severity of the problem.</li>\n</ol>\n<h2 id=\"subsystem-assembly-layout\">Subsystem Assembly Layout</h2>\n<p>When an item has been selected in the Subsystem Tree Menu, its next level of detail is displayed in schematic form in the Subsystem Assembly Layout to the right. The elements in this schematic are color-coded to reflect the health status of the data mnemonics associated with it. Operators can then click on one of these schematic elements to load an additional level of detail in the Mnemonic Data Table that appears below.</p>\n<p><img src=\"/img/service-specific-ux-design/ttc-investigate-subsystem-assembly-details.png\" alt=\"TT&amp;C Subsystem Assembly Layout Details\"></p>\n<ol>\n<li><strong>Selectable Elements</strong> - operators can select an element in the schematic to have its data load in the Mnemonic Data Table below</li>\n<li><strong>Status Colors</strong> - the elements in the schematic are color coded to reflect current status.</li>\n</ol>\n<h3 id=\"mnemonic-data-table\">Mnemonic Data Table</h3>\n<p>The Mnemonic Data Table displays the data for the component selected in the Subsystem Assembly Layout above. Because there could be a large number of mnemonics, the table includes the ability to do a type-ahead search for a particular item or filter the table by status. Once operators have identified a mnemonic of interest, the table includes the ability to add it to the Watcher panels in the Monitor and Command apps to keep an eye on it over time.</p>\n<p><img src=\"/img/service-specific-ux-design/ttc-investigate-mnemonics-table-details.png\" alt=\"TT&amp;C Mnemonic Data Table Details\"></p>\n<ol>\n<li><strong>Status Symbols</strong> - symbols indicate current subsystem status and can be sorted by severity.</li>\n<li><strong>Table Filters</strong> - the table can be filtered by name or severity to narrow down high volumes of content and surface the most relevant results.</li>\n<li><strong>Add to Watcher</strong> - clicking the checkbox adds the row item, or mnemonic, to the Watcher component in the Monitor Application.</li>\n</ol>\n<h2 id=\"task-flow-example---add-mnemonics-to-watcher\">Task Flow Example - Add Mnemonics to Watcher</h2>\n<p>Below is an animated walkthrough of a representative task flow using the TT&amp;C Investigate app. In this flow, an operator uses the app to identify a problem in a satellite subsystem assembly and then adds two mnemonics to the Watcher panels in the Monitor and Command apps.</p>\n<p><img src=\"/img/service-specific-ux-design/gif-placeholder.png\" alt=\"Task Flow Example\"></p>\n<h2 id=\"design-materials-and-source-code\">Design Materials and Source Code</h2>\n<p>Below are design and development resources to get you started on an app that supports TT&amp;C services. Note that there are some discrepancies between the design documents and the <a href=\"https://ttc-investigate.astrouxds.com/\">TT&amp;C Investigate Sample App</a> due to design improvements that were introduced late in the app development cycle.</p>\n<table>\n<thead>\n<tr>\n<th>Resources</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody><tr>\n<td><a href=\"http://com.rocketcom.astrouxds.s3.amazonaws.com/attachments/cjx3r384i2gbihmqnxcwrq25d-ttc-specifications.pdf\">TT&amp;C Design Specifications (pdf)</a></td>\n<td>The TT&amp;C Design Specification contains information on use cases, task flows, UX research and wireframes for key features of the TT&amp;C App Suite.</td>\n</tr>\n<tr>\n<td><a href=\"http://com.rocketcom.astrouxds.s3.amazonaws.com/attachments/cjtsx349t073s4iqnxbejjwg6-ttc-wireframes.pdf\">TT&amp;C Design Wireframes (pdf)</a></td>\n<td>The TT&amp;C Design Wireframes document contains the complete set of wireframes (mid-fidelity renderings) of the screens designed for the TT&amp;C App Suite.</td>\n</tr>\n<tr>\n<td><a href=\"https://bitbucket.org/rocketcom/tt-c-investigate/src/master/\">App Source Code (Git Repository)</a></td>\n<td>The source code Git repository and other useful documentation for the TT&amp;C Investigate App is hosted at bitbucket.org so that you can check it out in detail.</td>\n</tr>\n</tbody></table>\n",
      "excerpt": "<p><a href=\"https://ttc-equipment.astrouxds.com/\">Launch TT&amp;C Investigate Sample App</a> | <a href=\"#contentBottom\">Design Materials and Source Code</a></p>",
      "id": "ttc-service-ux-design\\ttc-investigate"
    },
    {
      "tags": [
        "ttc",
        "egs"
      ],
      "path": "/ttc-service-ux-design/ttc-monitor",
      "date": "Last Modified",
      "layout": "interior.template.njk",
      "title": "TT&C Monitor",
      "contents": "<h2 id=\"ttc-monitor\">TT&amp;C Monitor</h2>\n<p><a href=\"https://ttc-monitor.astrouxds.com/\">Launch TT&amp;C Monitor Sample App</a> | <a href=\"/ttc-service-ux-design/ttc-monitor#contentBottom\">Design Materials and Source Code</a></p>\n<p>For operators of a TT&amp;C service, maintaining situational awareness is of critical importance, and the TT&amp;C Monitor app is designed to support this requirement. During the UX research effort, operators expressed a desire for a quick and efficient way to view overall status of their constellation and all of their systems, something lacking in their current systems. To deliver on this, the design team worked with domain experts and the operators to identify the most important data and then display it in a clear, logical manner in the app.</p>\n<p>As operators’ primary TT&amp;C app, the Monitor app would constantly occupy one of their large displays. The main usage would be in between contacts, when operators would use it to keep an eye on system and constellation health, prepare for upcoming contacts and view system trends.</p>\n<p><img src=\"/img/service-specific-ux-design/ttc-monitor-app.png\" alt=\"TT&amp;C Monitor App\"></p>\n<p>There are four main areas in the Monitor app: the Global Status Bar, Alerts panel, Constellation panel and Watcher panel. The key elements are described below, but you can find much more design and task flow detail in the <a href=\"/ttc-service-ux-design/ttc-monitor#contentBottom\">TT&amp;C Design Specification and Wireframes</a> documents. You can also launch the <a href=\"https://ttc-monitor.astrouxds.com/\">TT&amp;C Monitor Sample App</a> to explore the design interactively.</p>\n<p><img src=\"/img/service-specific-ux-design/ttc-monitor-app-details.png\" alt=\"TT&amp;C Monitor App Details\"></p>\n<h2 id=\"global-status-bar\">Global Status Bar</h2>\n<p>As outlined on the <a href=\"/ttc-service-ux-design/about-the-ttc-designs\">About TT&amp;C Designs</a> page, each of the apps in the TT&amp;C Suite is designed to occupy its own browser window, allowing operators to focus on the task at hand. But by virtue of being integrated into a suite, the apps share common functionality, such as a single login. Much of the shared functionality is provided in the <a href=\"/ui-components/global-status-bar\">Global Status Bar</a>, an Astro component featured in all three apps. Though the status bar contents vary somewhat between apps in order to best support each app’s individual workflows, all contain a <a href=\"/ui-components/clock\">Clock</a>, <a href=\"/ui-components/icons-and-symbols\">Monitoring Icons</a>, and an app switching menu that allows operators to transition quickly from one TT&amp;C task flow to another.</p>\n<p><img src=\"/img/service-specific-ux-design/ttc-monitor-global-status-bar-details.png\" alt=\"TT&amp;C Monitor App Details\"></p>\n<ol>\n<li><strong>App Switcher Menu</strong> - the App Switcher Menu allows the user to launch new instances of different TT&amp;C apps, sign in/sign out, and edit preferences.</li>\n<li><strong>Global Clock</strong> - time is central to many TT&amp;C service task flows, so it is included in the Global Status Bar in all TT&amp;C apps.</li>\n<li><strong>Monitoring Icons</strong> - the Monitor app includes Upcoming Contacts Allocated (UCA) and Software status indicators, as well as status and alert counts for each of the top categories in the equipment hierarchy.</li>\n</ol>\n<h2 id=\"alerts\">Alerts</h2>\n<p>The Alerts panel provides operators with a roll-up of alerts across the ground system, satellite vehicles, and satellite subsystems. Operators can filter the alerts by Severity and Category, allowing them to quickly identify the most severe issues or focus in on particular areas of the global system. This allows operators to efficiently track their workflow and keeps the Alerts pane more sparsely populated, so they’ll be more likely to notice when new alerts come in. Operators can also drill in to see additional information on any of the alerts and launch an instance of the TT&amp;C Investigate App to explore the issue further.</p>\n<p>:::two-col\n<img src=\"/img/service-specific-ux-design/ttc-monitor-alerts-details.png\" alt=\"TT&amp;C Monitor Alerts Details\"></p>\n<ol>\n<li><strong>Active Alert Hero Number</strong> - Shows number of active alerts at a glance.</li>\n<li><strong>Filter Drop-downs</strong> - filters alert list by severity and category.</li>\n<li><strong>Expandable List Items</strong> - expands to show alert details and call-to-action (if applicable).</li>\n<li><strong>Investigate</strong> - launches an instance of the TT&amp;C Investigate App.</li>\n<li><strong>Acknowledge/Dismiss</strong> - acknowledges or dismisses alerts.\n:::</li>\n</ol>\n<h2 id=\"constellation\">Constellation</h2>\n<p>The Constellation panel shows the contacts for the satellites in the constellation. The operator has the option to either view these in a Timeline view, which shows past, current and future contacts along a scalable time range, or in a List view, which provides additional detail on each pass. In both views, the user can click a contact to open a <a href=\"/design-guidelines/modeless-panes\">Modeless Pane</a> containing its Contact Details or the associated Pass Plan.</p>\n<h3 id=\"timeline-view\">Timeline View</h3>\n<p><img src=\"/img/service-specific-ux-design/ttc-monitor-constellation-timeline-details.png\" alt=\"TT&amp;C Timeline View\"></p>\n<ol>\n<li><strong>Spacecraft Names &amp; Status Symbols</strong> - indicates spacecraft and current status and severity.</li>\n<li><strong>Time Blocks</strong> - shows contact/pass duration and respective ground station and ground station status. Clicking a time block also launches the Contact Details Slide-In Pane (Contact Details tab) where you can view contact details, as well as launch a Command Application Window for the corresponding spacecraft.</li>\n<li><strong>Zoom Tool</strong> - zooms in and out of the timeline, magnifying the time blocks and stretching the space between time increments.</li>\n<li><strong>View Switch</strong> - switches between List and Timeline views.</li>\n</ol>\n<h3 id=\"list-view\">List View</h3>\n<p><img src=\"/img/service-specific-ux-design/ttc-monitor-constellation-list-details.png\" alt=\"TT&amp;C List View\"></p>\n<ol>\n<li><strong>Spacecraft Names &amp; Status Symbols</strong> - indicates spacecraft and current status and severity.</li>\n<li><strong>Command Quick Launch</strong> - launches the Command App/Window for respective spacecrafts (in active pass state). This interaction is indicated by the underline.</li>\n<li><strong>View Switch</strong> - switches between List and Timeline views.</li>\n<li><strong>Actions Menu (View Pass Plan)</strong> - opens the Contact Details Modeless Pane</li>\n</ol>\n<h2 id=\"contact-details-and-pass-plan-pane\">Contact Details and Pass Plan Pane</h2>\n<p>The Contact Details Modeless Pane opens on the right side of the browser window. It allows operators to view contact details for a spacecraft — including information such as next pass time, AOS/LOS, state of contact as well as ground station details like name, azimuth and elevation. Operators can also toggle the view to display the Pass Plan for the spacecraft’s current/upcoming pass, which includes details like AOS commands, steps, and run lengths.</p>\n<p><img src=\"/img/service-specific-ux-design/ttc-monitor-contact-details.png\" alt=\"TT&amp;C Contact Details Pane\"></p>\n<ol>\n<li><strong>Command Quick Launch</strong> - launches TT&amp;C Command App for the contact.</li>\n<li><strong>View Switch</strong> - switches between Contact Details and Pass Plan views.</li>\n</ol>\n<h2 id=\"watcher\">Watcher</h2>\n<p>The Watcher functionality allows the operator to flag and watch specific telemetry trends over time such as changes in battery levels and other mnemonic values. Mnemonics are monitored for actual value in relation to the assigned value threshold.</p>\n<p><img src=\"/img/service-specific-ux-design/ttc-monitor-watcher-details.png\" alt=\"TT&amp;C Watcher\"></p>\n<ol>\n<li>Collapsible Item List - items in the watcher are categorized by spacecraft and can be collapsed or expanded to show the subsequent list of mnemonics being monitored.</li>\n<li>Mnemonics - hovering over a mnemonic value shows the longhand version of its name. This interaction is indicated by the dashed underline. Clicking a mnemonic/watcher item changes the graph on the right to reflect how the values have trended over time.</li>\n<li>Editable Threshold Value - threshold can be edited by clicking on the field, setting the desired value and saving changes by clicking the checkmark icon.</li>\n<li>Action Menu - allows operators to remove items from the watchlist and/or investigate them in the TT&amp;C Investigate application.</li>\n<li>Graph - shows mnemonic value trends over time.</li>\n<li>Data Values - hovering over a point in the trend line displays the associated value.</li>\n</ol>\n<h2 id=\"task-flow-example---prepare-for-pass\">Task Flow Example - Prepare for Pass</h2>\n<p>Below is an animated walkthrough of a representative task flow using the TT&amp;C Monitor app. In this flow, an operator reviews the details and Pass Plan for an upcoming contact and then navigates to the Command app to conduct Pass operations.</p>\n<p><img src=\"/img/service-specific-ux-design/gif-placeholder.png\" alt=\"Task Flow Example\"></p>\n<h2 id=\"design-materials-and-source-code\">Design Materials and Source Code</h2>\n<p>Below are design and development resources to get you started on an app that supports TT&amp;C services. Note that there are some discrepancies between the design documents and the <a href=\"https://ttc-monitor.astrouxds.com/\">TT&amp;C Monitor Sample App</a> due to design improvements that were introduced late in the app development cycle.</p>\n<table>\n<thead>\n<tr>\n<th>Resources</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody><tr>\n<td><a href=\"http://com.rocketcom.astrouxds.s3.amazonaws.com/attachments/cjtsy7te707614iqnq3czazo4-ttc-specifications.pdf\">TT&amp;C Design Specifications (pdf)</a></td>\n<td>The TT&amp;C Design Specification contains information on use cases, task flows, UX research and wireframes for key features of the TT&amp;C App Suite.</td>\n</tr>\n<tr>\n<td><a href=\"http://com.rocketcom.astrouxds.s3.amazonaws.com/attachments/cjtsy72c3075p4iqntmk534ua-ttc-wireframes.pdf\">TT&amp;C Design Wireframes (pdf)</a></td>\n<td>The TT&amp;C Design Wireframes document contains the complete set of wireframes (mid-fidelity renderings) of the screens designed for the TT&amp;C App Suite.</td>\n</tr>\n<tr>\n<td><a href=\"https://bitbucket.org/rocketcom/ttc-monitor/src/master/\">App Source Code (Git Repository)</a></td>\n<td>The source code Git repository and other useful documentation for the TT&amp;C Monitor App is hosted at bitbucket.org so that you can check it out in detail.</td>\n</tr>\n</tbody></table>\n",
      "excerpt": "<p><a href=\"https://ttc-monitor.astrouxds.com/\">Launch TT&amp;C Monitor Sample App</a> | <a href=\"/ttc-service-ux-design/ttc-monitor#contentBottom\">Design Materials and Source Code</a></p>",
      "id": "ttc-service-ux-design\\ttc-monitor"
    },
    {
      "tags": [
        "grm",
        "egs"
      ],
      "path": "/grm-service-ux-design/about-the-grm-designs",
      "date": "Last Modified",
      "layout": "interior.template.njk",
      "title": "About the GRM Designs",
      "contents": "<h2 id=\"ground-resource-management-grm\">Ground Resource Management (GRM)</h2>\n<p>Directing and maintaining satellites orbiting in space requires coordinating personnel, processes and equipment on the ground. This is the role of Ground Resource Management (GRM) systems. Key aspects of GRM services include the following:</p>\n<ul>\n<li>Monitor System - maintaining awareness of the status of critical components of the ground system, including equipment and scheduled contacts.</li>\n<li>Manage Contacts - coordinate ground systems to ensure satellite contacts have all the equipment needed to achieve mission objectives.</li>\n<li>Manage Equipment - monitor health status of ground system equipment and schedule maintenance jobs as needed to ensure availability and ongoing reliability.</li>\n</ul>\n<h3 id=\"ux-research-findings\">UX Research Findings</h3>\n<p>UX research conducted in collaboration with users and domain experts on existing GRM workflows and systems found that:</p>\n<ul>\n<li>The operators performing GRM tasks range from entry-level to advanced in terms of skill and engineering knowledge and typically work in a control center environment using a dedicated computer system with 2 or 3 large displays.</li>\n<li>There isn’t an integrated software solution to manage the core components of GRM - instead the end-to-end workflow requires various pieces of software, phone calls, emails and paperwork.</li>\n<li>Current GRM solutions lack a centralized place for operators to view the most important information at-a-glance.</li>\n<li>In current GRM solutions, when critical information is presented alongside less critical information, such as an event log, it is often not clearly distinguished, making it difficult to quickly identify high priority items.</li>\n<li>Existing GRM solutions are not consistently designed or structured between systems, thus complicating training requirements and hindering transfer of learning.</li>\n<li>GRM systems need to support scheduling and ground system management for a large number of simultaneous satellite contacts, placing a significant cognitive burden on operators. As missions expand in size and scope and squadrons consolidate, this burden would be expected to increase.</li>\n<li>Equipment is often a shared resource between operational groups, and sometimes conditions require that contact with a particular satellite needs to take priority over contacts that are already scheduled, thus causing scheduling conflicts that need to be resolved.</li>\n</ul>\n<p>A GRM system that enables efficient coordination of ground resources would allow for consolidation of equipment, thus decreasing purchasing and maintenance costs, more agile response to events that create schedule conflicts, increased system scalability, and opportunities for automation.</p>\n<h2 id=\"ux-design-and-sample-apps\">UX Design and Sample Apps</h2>\n<p>Based on this initial research and follow-up design iterations with operators and stakeholders, the resulting design effort focused on an integrated suite of three GRM Sample Apps, each designed to support key functionality and task flows. Each of the apps is designed to occupy its own browser window, allowing operators to focus on the task at hand, but by virtue of being integrated into a suite, the apps share functionality and support common task flows.</p>\n<h3 id=\"grm-app-suite\">GRM App Suite</h3>\n<p>:::two-col\n<img src=\"/img/service-specific-ux-design/grm-suite-apps.png\" alt=\"GRM Application Suite\">\n:::col</p>\n<p>The GRM App Suite comprises three integrated sample apps: Dashboard, Equipment Manager and Schedule.</p>\n<ul>\n<li><a href=\"http://com.rocketcom.astrouxds.s3.amazonaws.com/attachments/cjx3r384i2gbihmqnxcwrq25d-grm-specifications.pdf\">GRM Design Specifications (pdf)</a></li>\n<li><a href=\"http://com.rocketcom.astrouxds.s3.amazonaws.com/attachments/cjtsx349t073s4iqnxbejjwg6-grm-wireframes.pdf\">GRM Wireframes (pdf)</a></li>\n</ul>\n<p>:::</p>\n<h3 id=\"grm-dashboard\">GRM Dashboard</h3>\n<p>:::two-col\n<img src=\"/img/service-specific-ux-design/grm-dashboard-app.png\" alt=\"GRM Dashboard App\"></p>\n<p>:::col</p>\n<p>The GRM Dashboard app rolls up all information necessary for providing the operator the highest level of situational awareness.</p>\n<ul>\n<li><p><a href=\"/grm-service-ux-design/grm-dashboard\">Overview of GRM Dashboard</a></p>\n</li>\n<li><p><a href=\"https://grm-dashboard.astrouxds.com/\">Launch GRM Dashboard Sample App</a></p>\n</li>\n<li><p><a href=\"https://bitbucket.org/rocketcom/grm-sample-apps-dashboard/src/master/\">App Source Code (Git repo)</a></p>\n<p>:::</p>\n</li>\n</ul>\n<h3 id=\"grm-equipment-manager\">GRM Equipment Manager</h3>\n<p>:::two-col\n<img src=\"/img/service-specific-ux-design/grm-equipment-manager-app.png\" alt=\"GRM Equipment Manager App\"></p>\n<p>:::col</p>\n<p>The GRM Equipment Manager app consolidates all ground equipment in one place, allowing operators to view status and request maintenance.</p>\n<ul>\n<li><p><a href=\"/grm-service-ux-design/grm-equipment-manager\">Overview of GRM Equipment Manager</a></p>\n</li>\n<li><p><a href=\"https://grm-equipment.astrouxds.com/\">Launch GRM Equipment Manager Sample App</a></p>\n</li>\n<li><p><a href=\"https://bitbucket.org/rocketcom/grm-sample-apps-equipment/src/master/\">App Source Code (Git Repository)</a></p>\n<p>:::</p>\n</li>\n</ul>\n<h3 id=\"grm-schedule\">GRM Schedule</h3>\n<p>:::two-col\n<img src=\"/img/service-specific-ux-design/grm-schedule-app.png\" alt=\"GRM Schedule App\"></p>\n<p>:::col</p>\n<p>The GRM Schedule app allows operators to view and manage the full schedule of contacts in their sphere of responsibility.</p>\n<ul>\n<li><p><a href=\"/grm-service-ux-design/grm-schedule\">Overview of GRM Schedule</a></p>\n</li>\n<li><p><a href=\"https://grm-schedule.astrouxds.com/\">Launch GRM Schedule Sample App</a></p>\n</li>\n<li><p><a href=\"https://bitbucket.org/rocketcom/grm-sample-apps-schedule/src/master/\">App Source Code (Git Repository)</a></p>\n<p>:::</p>\n</li>\n</ul>\n",
      "excerpt": "<p>Directing and maintaining satellites orbiting in space requires coordinating personnel, processes and equipment on the ground. This is the role of Ground Resource Management (GRM) systems. Key aspects of GRM services include the following:</p>",
      "id": "grm-service-ux-design\\about-the-grm-designs"
    },
    {
      "tags": [
        "grm",
        "egs"
      ],
      "path": "/grm-service-ux-design/grm-dashboard",
      "date": "Last Modified",
      "layout": "interior.template.njk",
      "title": "GRM Dashboard",
      "contents": "<h2 id=\"grm-dashboard\">GRM Dashboard</h2>\n<p><a href=\"https://grm-dashboard.astrouxds.com/\">Launch GRM Dashboard Sample App</a> | <a href=\"/grm-service-ux-design/grm-dashboard#contentBottom\">Design Materials and Source Code</a></p>\n<p>Given the large number of satellite contacts and equipment assets that operators are responsible for, maintaining situational awareness poses a significant challenge. Operators must be able to quickly identify equipment issues and resolve them so that there are no missed opportunities to communicate with satellites. The GRM Dashboard app was designed with this goal in mind. As the operators’ primary GRM app, it would constantly occupy one of their large displays.</p>\n<p><img src=\"/img/service-specific-ux-design/grm-dashboard-app.png\" alt=\"GRM Dashboard App\"></p>\n<p>There are three main areas of the GRM Dashboard app: the Global Status Bar, the Alerts pane and a tabbed content area that displays either the Contacts page or the Equipment page. The key elements are described below, but you can find much more design and task flow detail in the GRM Design Specifications and Wireframes documents. You can also launch the GRM Dashboard Sample App to explore the design interactively.</p>\n<p><img src=\"/img/service-specific-ux-design/grm-dashboard-app-details.png\" alt=\"GRM Dashboard App Details\"></p>\n<h2 id=\"global-status-bar\">Global Status Bar</h2>\n<p>As outlined on the <a href=\"/grm-service-ux-design/about-the-grm-designs\">About GRM Designs</a> page, each of the apps in the GRM Suite is designed to occupy its own browser window, allowing operators to focus on the task at hand. But by virtue of being integrated into a suite, the apps share common functionality, such as a single login. Much of the shared functionality is provided in the <a href=\"/ui-components/global-status-bar\">Global Status Bar</a>, an Astro component featured in all three apps. Though the status bar contents vary somewhat between apps in order to best support each app’s individual workflows, all contain a <a href=\"/ui-components/clock\">Clock</a>, <a href=\"/ui-components/icons-and-symbols\">Monitoring Icons</a>, and an app switching menu that allows operators to transition quickly from one GRM task flow to another.</p>\n<p><img src=\"/img/service-specific-ux-design/grm-dashboard-global-status-bar-details.png\" alt=\"GRM Dashboard App Details\"></p>\n<ol>\n<li><strong>App Switcher Menu</strong> - the App Switcher Menu allows the user to launch new instances of different GRM apps, sign in/sign out, and edit preferences.</li>\n<li><strong>Global Clock</strong> - time is central to many GRM service task flows, so it is included in the Global Status Bar in all GRM apps.</li>\n<li><strong>Monitoring Icons</strong> - the Dashboard app includes Upcoming Contacts Allocated (UCA) and Software status indicators, as well as status and alert counts for each of the top categories in the equipment hierarchy.</li>\n</ol>\n<h2 id=\"alerts\">Alerts</h2>\n<p>The Alerts panel provides operators with a roll-up of issues across the ground system, satellite vehicles and satellite subsystems. Operators can filter the alerts by Severity and Category, allowing them to quickly identify the most critical issues or focus in on particular areas of the global system. This allows operators to efficiently track their workflow and keeps the Alerts panel more sparsely populated, so they’ll be more likely to notice when new alerts come in.\n:::two-col\n<img src=\"/img/service-specific-ux-design/grm-dashboard-alert-details.png\" alt=\"GRM Dashboard Alerts Details\"></p>\n<ol>\n<li><strong>Active Alert Hero Number</strong> - Shows number of active alerts at a glance.</li>\n<li><strong>Filter Drop-downs</strong> - filters alert list by severity and category.</li>\n<li><strong>Expandable List Items</strong> - expands to show alert details and call-to-action (if applicable).</li>\n<li><strong>Investigate</strong> - sends operators to a page with full alert details and actions for resolving the alert.</li>\n<li><strong>Acknowledge/Dismiss</strong> - acknowledges or dismisses alerts.\n:::</li>\n</ol>\n<h2 id=\"contacts\">Contacts</h2>\n<p>The Contacts tab allows operators to view all contacts configured in the GRM app. Contacts can be filtered by status to allow operators to quickly identify those that failed or are currently executing. The contacts are displayed in the table along with important information such as Ground Station, Equipment String and AOS/LOS times, but can also be expanded to present additional detail. The Contacts Summary at the bottom provides operators with a view of contact counts over time, color coded by status.</p>\n<p><img src=\"/img/service-specific-ux-design/grm-dashboard-contact-details.png\" alt=\"GRM Dashboard Contacts Details\"></p>\n<ol>\n<li><strong>Contacts Hero Numbers</strong> - shows number of executing contacts at a glance.</li>\n<li><strong>Segmented Button Filter</strong> - filters Current Contacts by All, Executing, or Failed.</li>\n<li><strong>Histogram</strong> - y-axis measures contact counts, while the x-axis represents time.</li>\n<li><strong>Histogram Filters</strong> - filters may be applied to one, many or all of the Contact States; Upcoming, Executing, Complete, Failed.</li>\n<li><strong>Zoom Control</strong> - operators can drag the slider to zoom in or out of the Histogram</li>\n</ol>\n<h2 id=\"equipment\">Equipment</h2>\n<p>The Equipment tab provides operators with a usage summary of the major equipment categories in their ground systems. At a glance, operators can see overall what the current percentage of the equipment is in use, idle or inoperable. This data will help operators identify shortages in particular areas or be used to develop contact schedules that drive more efficient equipment utilization. In addition to the current snapshot displayed in the donut charts at the top of the panel, operators can also view how this data has trended over time at the bottom of the panel.</p>\n<p><img src=\"/img/service-specific-ux-design/grm-dashboard-equipment-details.png\" alt=\"GRM Dashboard Equipment Details\"></p>\n<ol>\n<li><strong>Equipment Allocation</strong> - shows percentage of usage across top line categories at a glance.</li>\n<li><strong>Line Chart</strong> - y-axis displays percent of equipment in a given category allocated and x-axis represents time. A “Usage Threshold” value may be defined to identify equipment that exceeds this limit.</li>\n<li><strong>Trending Equipment Status Filters</strong> - filters may be applied to one, many or all of the equipment categories defined.</li>\n</ol>\n<h2 id=\"alert-details\">Alert Details</h2>\n<p>If operators choose to drill into an alert via the Investigate button in the Alerts panel, an Alert Details page is displayed in the main content area. The content of the page changes somewhat depending on whether the alert pertains to a contact or a piece of equipment, but each variant allows operators to view additional detail on the alert, dismiss or acknowledge it, or take some action to remedy it. The image below shows an example of the Alert Details page for a contact-related alert; you can find information on the equipment variant along with relevant task flows in the <a href=\"/grm-service-ux-design/grm-dashboard#contentBottom\">GRM Design Specifications</a> and Wireframes documents.</p>\n<p><img src=\"/img/service-specific-ux-design/grm-dashboard-contact-alert-details.png\" alt=\"GRM Dashboard Alert Details\"></p>\n<ol>\n<li><strong>Breadcrumb Navigation</strong> - returns the user to the Dashboard view.</li>\n<li><strong>Alert Details</strong> - contains information relevant to the particular alert.</li>\n<li><strong>Acknowledge/Dismiss</strong> - operators can acknowledge or dismiss the alert based.</li>\n<li><strong>Contact Details</strong> - because the alert in the example above is related to a contact, information relevant to that contact is displayed here.</li>\n<li><strong>Status Information</strong> - in this example, the equipment string indicates that an antenna is in a critical status for this contact</li>\n<li><strong>Event Log</strong> - displays the events leading up to the alert, which could be useful in troubleshooting</li>\n<li><strong>Modify Button</strong> - puts the contact in an editable mode to allow operators to resolve the issue, in this case by modifying the Equipment String.</li>\n</ol>\n<h3 id=\"ux-research-findings\">UX Research Findings</h3>\n<h2 id=\"task-flow-example---modify-equipment-string\">Task Flow Example - Modify Equipment String</h2>\n<p>Below is an animated walkthrough of a representative task flow using the GRM Dashboard app. In this flow, the operator notices a critical alert for an upcoming contact, investigates it via the Contact Alert Details page and then resolves the issue by selecting an alternative piece of equipment to use for the contact.</p>\n<p><img src=\"/img/service-specific-ux-design/gif-placeholder.png\" alt=\"Task Flow Example\"></p>\n<h2 id=\"design-materials-and-source-code\">Design Materials and Source Code</h2>\n<p>Below are design and development resources to get you started on an app that supports GRM services. Note that there are some discrepancies between the design documents and the <a href=\"https://grm-dashboard.astrouxds.com/\">GRM Dashboard Sample App</a> due to design improvements that were introduced late in the app development cycle.</p>\n<table>\n<thead>\n<tr>\n<th>Resources</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody><tr>\n<td><a href=\"http://com.rocketcom.astrouxds.s3.amazonaws.com/attachments/cjx3r384i2gbihmqnxcwrq25d-grm-specifications.pdf\">GRM Design Specifications (pdf)</a></td>\n<td>The GRM Design Specification contains information on use cases, task flows, UX research and wireframes for key features of the GRM App Suite.</td>\n</tr>\n<tr>\n<td><a href=\"http://com.rocketcom.astrouxds.s3.amazonaws.com/attachments/cjtsx349t073s4iqnxbejjwg6-grm-wireframes.pdf\">GRM Design Wireframes (pdf)</a></td>\n<td>The GRM Design Wireframes document contains the complete set of wireframes (mid-fidelity renderings) of the screens designed for the GRM App Suite.</td>\n</tr>\n<tr>\n<td><a href=\"https://bitbucket.org/rocketcom/grm-sample-apps-dashboard/src/master/\">App Source Code (Git Repository)</a></td>\n<td>The source code Git repository and other useful documentation for the GRM Dashboard App is hosted at bitbucket.org so that you can check it out in detail.</td>\n</tr>\n</tbody></table>\n",
      "excerpt": "<p><a href=\"https://grm-dashboard.astrouxds.com/\">Launch GRM Dashboard Sample App</a> | <a href=\"/grm-service-ux-design/grm-dashboard#contentBottom\">Design Materials and Source Code</a></p>",
      "id": "grm-service-ux-design\\grm-dashboard"
    },
    {
      "tags": [
        "grm",
        "egs"
      ],
      "path": "/grm-service-ux-design/grm-schedule",
      "date": "Last Modified",
      "layout": "interior.template.njk",
      "title": "GRM Schedule",
      "contents": "<h2 id=\"grm-schedule\">GRM Schedule</h2>\n<p><a href=\"https://grm-schedule.astrouxds.com/\">Launch GRM Schedule Sample App</a> | <a href=\"#contentBottom\">Design Materials and Source Code</a></p>\n<p>Ground Resource Management (GRM) operations require ensuring that all the necessary equipment is available during the time windows when a target satellite is in range. Complicating this task is the fact that there are multiple simultaneous satellite contacts to manage, pieces of equipment that are shared amongst operational groups, and shifting priorities that can require a well-orchestrated schedule to be modified in-flight. Operators need to be able to monitor these impacts to the schedule and make the necessary modifications quickly to ensure that satellite operations can continue.</p>\n<p>The GRM Schedule app is designed to allow operators to view and interact with the full schedule of contacts via a Timeline or List View. In addition, it allows the operator to manage the contacts in a single view, including the ability to add, view details, filter, modify and delete contacts.</p>\n<p><img src=\"/img/service-specific-ux-design/grm-schedule-app.png\" alt=\"GRM Schedule App\"></p>\n<p>There are three main areas in the Schedule app: the Global Status Bar, the Contacts panel and the Manage Contacts Pane. The key elements are described below, but you can find much more design and task flow detail in the GRM Design Specification and Wireframes documents. You can also launch the GRM Schedule Sample App to explore the design interactively.</p>\n<p><img src=\"/img/service-specific-ux-design/grm-schedule-app-details.png\" alt=\"GRM Schedule App Details\"></p>\n<h2 id=\"global-status-bar\">Global Status Bar</h2>\n<p>As outlined on the <a href=\"/grm-service-ux-design/about-the-grm-designs\">About GRM Designs</a> page, each of the apps in the GRM Suite is designed to occupy its own browser window, allowing operators to focus on the task at hand. But by virtue of being integrated into a suite, the apps share common functionality, such as a single login. Much of the shared functionality is provided in the <a href=\"/ui-components/global-status-bar\">Global Status Bar</a>, an Astro component featured in all three apps. Though the status bar contents vary somewhat between apps in order to best support each app’s individual workflows, all contain a <a href=\"/ui-components/clock\">Clock</a>, <a href=\"/ui-components/icons-and-symbols\">Monitoring Icons</a>, and an app switching menu that allows operators to transition quickly from one GRM task flow to another.</p>\n<p><img src=\"/img/service-specific-ux-design/grm-schedule-global-status-bar-details.png\" alt=\"GRM Schedule Global Status Bar Details\"></p>\n<ol>\n<li><strong>App Switcher Menu</strong> - the App Switcher Menu allows the user to launch new instances of different GRM apps, sign in/sign out, and edit preferences.</li>\n<li><strong>Global Clock</strong> - time is central to many GRM service task flows, so it is included in the Global Status Bar in all GRM apps.</li>\n<li><strong>Monitoring Icons</strong> - the Dashboard app includes Upcoming Contacts Allocated (UCA) and Software status indicators, as well as status and alert counts for each of the top categories in the equipment hierarchy.</li>\n</ol>\n<h2 id=\"contacts-panel\">Contacts Panel</h2>\n<p>The GRM Schedule app presents operators with two alternative views of their contacts, a Timeline view or a List view. The Timeline view displays contacts as bars within a graphical layout with Ground Stations on the y-axis and time on the x-axis. The List displays contact data in a tabular format to facilitate quickly scanning multiple values and comparing values across contacts.</p>\n<h3 id=\"timeline-view\">Timeline View</h3>\n<p>In the Timeline view, contacts are plotted by ground station and antenna on the y-axis and time on the x-axis. The contacts are represented as bars, the length of which indicates the duration of the contact. This design, which is based on the Astro Timeline component, provides operators with a consolidated view of the time and status for all recent, current and future contacts in their system. To allow operators to focus in on particular elements of interest, Ground Station rows can be expanded to show individual antennas, the timeline can be filtered by contact status, or zoomed in/out to focus on a particular time range.</p>\n<p><img src=\"/img/service-specific-ux-design/grm-schedule-timeline-details.png\" alt=\"GRM Schedule Timeline View\"></p>\n<ol>\n<li><strong>Time Range Display</strong> - displays the time range for the current timeline view.</li>\n<li><strong>Top Line Data Aggregates</strong> - displays total contacts and contact state counts.</li>\n<li><strong>Zoom Controls</strong> - allows operators to focus on certain time range by zooming the timeline in or out.</li>\n<li><strong>View Toggle</strong> - allows operators to switch between Timeline and List views.</li>\n<li><strong>Ground Stations</strong> - ground stations can be collapsed or expanded to display contacts by antenna.</li>\n<li><strong>Playhead</strong> - line marks current time with completed contacts to the left and future contacts to the right.</li>\n</ol>\n<h3 id=\"list-view\">List View</h3>\n<p>The List view shares many of the elements of the Timeline view including the time range display, data aggregates and view toggle controls. The main difference is that contacts are displayed in a tabular layout, which allows operators to see settings for contacts without having to click on them in the timeline. As such, it enables comparison of settings across contacts to show, for example, which ones share a particular element in an equipment string.</p>\n<p><img src=\"/img/service-specific-ux-design/grm-schedule-list-details.png\" alt=\"GRM Schedule List View\"></p>\n<ol>\n<li><strong>Time Range Display</strong> - displays the time range for the current timeline view.</li>\n<li><strong>Top Line Data Aggregates</strong> - displays total contacts and contact state counts.</li>\n<li><strong>Manage Contacts Toggle</strong> - opens the Manage Contacts Pane to filter or add contacts.</li>\n<li><strong>View Toggle</strong> - allows operators to switch between Timeline and List views.</li>\n<li><strong>Contacts Table</strong> - contacts are listed in a large data table.</li>\n</ol>\n<h2 id=\"manage-contacts-pane\">Manage Contacts Pane</h2>\n<p>Operators can view additional detail on a contact by clicking on it in the timeline or row in the list view. This detail is presented in a <a href=\"https://astrouxds.com/design-guidelines/modeless-panes\">Modeless Pane</a> that draws in from the right side of the window so operators aren’t taken away from the main app view. The data in the pane is presented in read-only form initially, but a Modify Contact button swaps the read-only view for an editable one, allowing operators to change the contact’s settings. Similarly, to schedule a new contact, operators can click on the Add Contact button which opens the pane to specify settings.</p>\n<p>The image below shows the Contact pane for this Add Contact task flow. To see the view contact and modify contact variants of the pane, and more design and task flow details, download the <a href=\"https://astrouxds.com/grm-service-ux-design/grm-schedule#contentBottom\">GRM Design Specification or Wireframes</a>. You can also interact with these elements in the <a href=\"https://grm-schedule.astrouxds.com/\">GRM Schedule Sample App</a>.</p>\n<p>:::two-col\n<img src=\"/img/service-specific-ux-design/grm-schedule-manage-contacts-details.png\" alt=\"GRM Schedule Manage Contacts Pane\"></p>\n<ol>\n<li><strong>Modeless Pane</strong> - the functionality to manage contact appears in a pane on the right side of the browser window that is collapsed when the task is complete.</li>\n<li><strong>Contact Settings</strong> - the settings for the contact are specified using dynamic fields to guide the operator through the process.</li>\n<li><strong>Action Buttons</strong> - once the required values have been specified and the contact is added, the pane closes and a confirmation message is displayed.\n:::</li>\n</ol>\n<h2 id=\"task-flow-example---modify-contact\">Task Flow Example - Modify Contact</h2>\n<p>Below is an animated walkthrough of a representative task flow using the GRM Schedule app. In this scenario, an operator uses the GRM Schedule app to change the priority of an upcoming contact.</p>\n<p><img src=\"/img/service-specific-ux-design/gif-placeholder.png\" alt=\"Task Flow Example\"></p>\n<h2 id=\"design-materials-and-source-code\">Design Materials and Source Code</h2>\n<p>Below are design and development resources to get you started on an app that supports GRM equipment management. Note that there are some discrepancies between the design documents and the <a href=\"https://grm-equipment.astrouxds.com/\">GRM Schedule Sample App</a> due to design improvements that were introduced late in the app development cycle.</p>\n<table>\n<thead>\n<tr>\n<th>Resources</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody><tr>\n<td><a href=\"http://com.rocketcom.astrouxds.s3.amazonaws.com/attachments/cjx3r384i2gbihmqnxcwrq25d-grm-specifications.pdf\">GRM Design Specifications (pdf)</a></td>\n<td>The GRM Design Specification contains information on use cases, task flows, UX research and wireframes for key features of the GRM App Suite.</td>\n</tr>\n<tr>\n<td><a href=\"http://com.rocketcom.astrouxds.s3.amazonaws.com/attachments/cjtsx349t073s4iqnxbejjwg6-grm-wireframes.pdf\">GRM Design Wireframes (pdf)</a></td>\n<td>The GRM Design Wireframes document contains the complete set of wireframes (mid-fidelity renderings) of the screens designed for the GRM App Suite.</td>\n</tr>\n<tr>\n<td><a href=\"https://bitbucket.org/rocketcom/grm-sample-apps-schedule/src/master/\">App Source Code (Git Repository)</a></td>\n<td>The source code Git repository and other useful documentation for the GRM Dashboard App is hosted at bitbucket.org so that you can check it out in detail.</td>\n</tr>\n</tbody></table>\n",
      "excerpt": "<p><a href=\"https://grm-schedule.astrouxds.com/\">Launch GRM Schedule Sample App</a> | <a href=\"#contentBottom\">Design Materials and Source Code</a></p>",
      "id": "grm-service-ux-design\\grm-schedule"
    },
    {
      "tags": [
        "grm",
        "egs"
      ],
      "path": "/grm-service-ux-design/grm-equipment-manager",
      "date": "Last Modified",
      "layout": "interior.template.njk",
      "title": "GRM Equipment Manager",
      "contents": "<h2 id=\"grm-equipment-manager\">GRM Equipment Manager</h2>\n<p><a href=\"https://grm-equipment.astrouxds.com/\">Launch GRM Equipment Manager Sample App</a> | <a href=\"#contentBottom\">Design Materials and Source Code</a></p>\n<p>A core requirement of GRM is to ensure that the equipment on the ground responsible for communicating with satellites is operational and available. This equipment includes hardware such as antennas, processors and software systems that all must interact with one another during a satellite contact. These resources are often shared amongst multiple operations, so if a piece of equipment is not available, it can affect multiple missions. As such, it is critical for operators to quickly identify equipment in need of attention and schedule maintenance to get it back up and running as quickly as possible.</p>\n<p>The GRM Equipment Manager app is designed to support this capability by consolidating information related to all ground equipment in one place. The app&#39;s home page, the Inoperable Equipment page, immediately provides operators with a list of all inoperable ground equipment. From there, operators can navigate to the Equipment Details page to view the full details of specific inoperable equipment and take action such as schedule a maintenance job.</p>\n<p><img src=\"/img/service-specific-ux-design/grm-equipment-manager-app.png\" alt=\"GRM Equipment Manager App\"></p>\n<p>There are three main areas of the GRM Equipment Manager app: the Global Status Bar, the Equipment Navigation Tree and a tabbed content area that can display either the Inoperable Equipment page or the Equipment Details page. The key elements are described below, but you can find much more design and task flow detail in the GRM Design Specification and Wireframes documents. You can also launch the GRM Equipment Manager Sample App to explore the design interactively.</p>\n<p><img src=\"/img/service-specific-ux-design/grm-equipment-manager-app-details.png\" alt=\"GRM Equipment Manager App Details\"></p>\n<h2 id=\"global-status-bar\">Global Status Bar</h2>\n<p>As outlined on the <a href=\"/grm-service-ux-design/about-the-grm-designs\">About GRM Designs</a> page, each of the apps in the GRM Suite is designed to occupy its own browser window, allowing operators to focus on the task at hand. But by virtue of being integrated into a suite, the apps share common functionality, such as a single login. Much of the shared functionality is provided in the <a href=\"/ui-components/global-status-bar\">Global Status Bar</a>, an Astro component featured in all three apps. Though the status bar contents vary somewhat between apps in order to best support each app’s individual workflows, all contain a <a href=\"/ui-components/clock\">Clock</a>, <a href=\"/ui-components/icons-and-symbols\">Monitoring Icons</a>, and an app switching menu that allows operators to transition quickly from one GRM task flow to another.</p>\n<p><img src=\"/img/service-specific-ux-design/grm-equipment-manager-global-status-bar-details.png\" alt=\"GRM Dashboard App Details\"></p>\n<ol>\n<li><strong>App Switcher Menu</strong> - the App Switcher Menu allows the user to launch new instances of different GRM apps, sign in/sign out, and edit preferences.</li>\n<li><strong>Global Clock</strong> - time is central to many GRM service task flows, so it is included in the Global Status Bar in all GRM apps.</li>\n<li><strong>Monitoring Icons</strong> - the Dashboard app includes Upcoming Contacts Allocated (UCA) and Software status indicators, as well as status and alert counts for each of the top categories in the equipment hierarchy.</li>\n</ol>\n<h2 id=\"equipment-navigation-tree\">Equipment Navigation Tree</h2>\n<p>Along the left side of the GRM Equipment Manager app is a <a href=\"/ui-components/tree\">navigation tree</a> that organizes the equipment in hierarchical form. The nature of the hierarchy would likely vary based on the structure of the operation, so it would need to be configurable on a per deployment basis. Using the tree, operators could drill in through the hierarchy and select a piece of equipment. Once the equipment is selected, a new tab is added in the tabbed content area and its details are displayed.</p>\n<p><img src=\"/img/service-specific-ux-design/grm-equipment-manager-nav-tree-details.png\" alt=\"GRM Equipment Manager Navigation Tree\"></p>\n<ol>\n<li><strong>Tree Structure</strong> - equipment is organized into a hierarchy with expandable and collapsible elements.</li>\n<li><strong>Equipment Tab</strong> - when a piece of equipment is selected, a new tab is created in the tabbed pane and its Equipment Details page is displayed.</li>\n</ol>\n<h2 id=\"inoperable-equipment-page\">Inoperable Equipment Page</h2>\n<p>The default view of the Equipment Manager app is the Inoperable Equipment page, which contains a grid of equipment in a critical or serious alert state, organized by category and color coded by severity. This allows operators to quickly identify assets that need attention. From this view, operators can click on a piece of equipment to be taken to its details page for more information and to take action.</p>\n<p><img src=\"/img/service-specific-ux-design/grm-equipment-manager-inop-details.png\" alt=\"GRM Equipment Manager Inoperable Equipment Page\"></p>\n<ol>\n<li><strong>Equipment Categories</strong> - inoperable equipment is organized into categories along with a total for the category.</li>\n<li><strong>Equipment Status</strong> - inoperable equipment is displayed with status coding indicating the severity of the problem.</li>\n</ol>\n<h2 id=\"equipment-details-page\">Equipment Details Page</h2>\n<p>Operators can access the Equipment Details page for a particular piece of equipment either via the navigation tree or from the grid of Inoperable Equipment. When operators open the details page for a piece of equipment, a new navigation tab to access it is added to the right of the Inoperable tab. This design allows operators to quickly and easily switch back and forth between equipment they are working with in the app.</p>\n<p>There are two panels on the Equipment Details page, one on top designed to provide comprehensive information and actions for an individual piece of ground equipment and the other below, which is focused on Maintenance.</p>\n<h3 id=\"equipment-details\">Equipment Details</h3>\n<p><img src=\"/img/service-specific-ux-design/grm-equipment-manager-equip-det-top-details.png\" alt=\"GRM Equipment Manager Equipment Details\"></p>\n<ol>\n<li><strong>Equipment Tab</strong> - a new tab labeled with the name of the equipment appears to the right of the “Inoperable” home button when operators navigate to any Equipment Details page.</li>\n<li><strong>Toggles</strong> - allow operators to change equipment&#39;s online/offline and considered/deconsidered states.</li>\n<li><strong>Alerts</strong> - a list of all current and past alerts for the related equipment.</li>\n<li><strong>Current Contacts</strong> - all contacts currently executing that include the related equipment in their equipment string.</li>\n</ol>\n<h3 id=\"maintenance\">Maintenance</h3>\n<p><img src=\"/img/service-specific-ux-design/grm-equipment-manager-equip-det-maint-details.png\" alt=\"GRM Equipment Maintenance Details\"></p>\n<ol>\n<li><strong>Schedule Job</strong> - the Schedule Maintenance Job page is displayed when operators click this button.</li>\n<li><strong>Job Status</strong> - the status of all current maintenance jobs for the equipment is displayed along with a button to view additional detail.</li>\n<li><strong>Maintenance History</strong> - displays the history of all maintenance job performed on the equipment.</li>\n</ol>\n<h3 id=\"schedule-maintenance-job\">Schedule Maintenance Job</h3>\n<p>A key capability of the Maintenance panel is that it allows operators to schedule a new job. When Schedule Job is clicked, Maintenance Details appear and operators can enter all required information. Once a time frame for the job has been entered, clicking the Calculate Conflicts button will display any schedule conflicts that will arise when this equipment is unavailable during the maintenance window. Seeing this information allows operators to either schedule the maintenance to minimize impact or to see the contacts that will have to be modified to use a different piece of equipment during that period.</p>\n<p>Note that maintenance-related task flows are covered in much more detail in the <a href=\"/grm-service-ux-design/grm-equipment-manager#contentBottom\">GRM Design Specification and Wireframes</a> documents, so be sure to consult those for more information.</p>\n<p><img src=\"/img/service-specific-ux-design/grm-equipment-manager-sched-maint-details.png\" alt=\"GRM Equipment Manager Schedule Jobs Details\"></p>\n<ol>\n<li><strong>Page</strong> - returns the user to the Dashboard view.</li>\n<li><strong>Job Settings</strong> - operators enter required information for the maintenance in the form at the left.</li>\n<li><strong>Calculate Conflicts</strong> - generates a list of contacts that will not execute due to the time window of this job, unless they are allocated different equipment.</li>\n<li><strong>Conflicts Table</strong> - if there are conflicts caused by the maintenance window, they are displayed in this table.</li>\n<li><strong>Submit Request</strong> - once operators have.</li>\n</ol>\n<h2 id=\"task-flow-example---schedule-maintenance-job\">Task Flow Example - Schedule Maintenance Job</h2>\n<p>Below is an animated walkthrough of a representative task flow using the GRM Equipment Manager app. In this flow, an operator notices a piece of equipment in a critical state and uses the app to request maintenance for it.</p>\n<p><img src=\"/img/service-specific-ux-design/gif-placeholder.png\" alt=\"Task Flow Example\"></p>\n<h2 id=\"design-materials-and-source-code\">Design Materials and Source Code</h2>\n<p>Below are design and development resources to get you started on an app that supports GRM equipment management. Note that there are some discrepancies between the design documents and the <a href=\"https://grm-equipment.astrouxds.com/\">GRM Equipment Manager Sample App</a> due to design improvements that were introduced late in the app development cycle.</p>\n<table>\n<thead>\n<tr>\n<th>Resources</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody><tr>\n<td><a href=\"http://com.rocketcom.astrouxds.s3.amazonaws.com/attachments/cjx3r384i2gbihmqnxcwrq25d-grm-specifications.pdf\">GRM Design Specifications (pdf)</a></td>\n<td>The GRM Design Specification contains information on use cases, task flows, UX research and wireframes for key features of the GRM App Suite.</td>\n</tr>\n<tr>\n<td><a href=\"http://com.rocketcom.astrouxds.s3.amazonaws.com/attachments/cjtsx349t073s4iqnxbejjwg6-grm-wireframes.pdf\">GRM Design Wireframes (pdf)</a></td>\n<td>The GRM Design Wireframes document contains the complete set of wireframes (mid-fidelity renderings) of the screens designed for the GRM App Suite.</td>\n</tr>\n<tr>\n<td><a href=\"https://bitbucket.org/rocketcom/grm-sample-apps-equipment/src/master/\">App Source Code (Git Repository)</a></td>\n<td>The source code Git repository and other useful documentation for the GRM Dashboard App is hosted at bitbucket.org so that you can check it out in detail.</td>\n</tr>\n</tbody></table>\n",
      "excerpt": "<p><a href=\"https://grm-equipment.astrouxds.com/\">Launch GRM Equipment Manager Sample App</a> | <a href=\"#contentBottom\">Design Materials and Source Code</a></p>",
      "id": "grm-service-ux-design\\grm-equipment-manager"
    },
    {
      "contents": "",
      "excerpt": "",
      "id": "_data\\links"
    },
    {
      "tags": "resources",
      "path": "/patterns/data-visualization",
      "date": "Last Modified",
      "layout": "interior.template.njk",
      "title": "Data Visualization",
      "contents": "<h1 id=\"data-visualization\">Data Visualization</h1>\n<p>The Data Visualization section covers best practices, principles and references tailored to Astro. A core objective of a Data Visualization is to make complex information accessible and easy to digest. Therefore, the interface presenting the data should be clean and straightforward in order to minimize users’ cognitive load and time spent searching.</p>\n<p>Visualizing data taps into pattern recognition ability and significantly accelerates the understanding of the data. You can look at a chart of data presented and understand it quickly by seeing the patterns and trends. This is a significantly faster way to comprehend information compared to reading numbers, comprehending the math, and then imagining in your mind how the numbers relate to each other.</p>\n<h2 id=\"common-chart-types-for-data-visualization\">Common Chart Types for Data Visualization</h2>\n<p>There are a significant number of chart types to cover many different ways of presenting data to users. The following subset of categories and examples were found to be complimentary to use cases within the Space domain. Astro will continue to expand upon this library as additional requirements are defined.</p>\n<h3 id=\"astro-chart-categories\">Astro Chart Categories</h3>\n<p>The following categories are used within Astro:</p>\n<p><strong>Part-to-whole</strong>: Show how a single entity can be broken down into its component elements. If the reader’s interest is solely in the size of the components, consider a magnitude-type chart instead.</p>\n<p><strong>Change Over Time</strong>: Give emphasis to changing trends. These can be short (intra-day) movements or extended series traversing years. Choosing the correct time period is important to provide suitable context for the user.</p>\n<p><strong>Correlation</strong>: Show the relationship between two or more variables.</p>\n<h3 id=\"astro-chart-types\">Astro Chart Types</h3>\n<p>There are a large number of charting visualizations. The following subset is relevant to the Astro domain:</p>\n<div class=\"three-col\">\n\n<p>:::col</p>\n<h4 id=\"pie-chart\">Pie Chart</h4>\n<p><img src=\"/img/design-guidelines/data-viz-pie.png\" alt=\"Pie Chart\">\nConveys part-to-whole data. Pie charts are very common, but research has shown that it may be difficult to accurately compare the size of the segments without supporting data points.\n:::</p>\n<p>:::col</p>\n<h4 id=\"donut-chart\">Donut Chart</h4>\n<p><img src=\"/img/design-guidelines/data-viz-donut.png\" alt=\"Donut Chart\">\nSimilar to a pie chart – but the center can be useful for additional information about the data (e.g. total). Example: <a href=\"https://grm-dashboard.astrouxds.com/\">GRM Sample app</a> - equipment tab</p>\n<p>:::</p>\n<p>:::col</p>\n<h4 id=\"bar-chart\">Bar Chart</h4>\n<p><img src=\"/img/design-guidelines/data-viz-bar-column.png\" alt=\"Bar/Column Chart\">\nStandard bar charts display the ranks of values more easily when sorted in order.</p>\n<p>:::</p>\n<p>:::col</p>\n<h4 id=\"stack-bar-chart\">Stack Bar Chart</h4>\n<p><img src=\"/img/design-guidelines/data-viz-stacked-bar.png\" alt=\"Stack Bar Chart\">\nThe standard way to show a statistical distribution - keep the gaps between columns small to highlight the ‘shape’ of the data. Example: GRM Sample app - contacts tab</p>\n<p>:::</p>\n<p>:::col</p>\n<h4 id=\"heat-map\">Heat Map</h4>\n<p><img src=\"/img/design-guidelines/data-viz-heat-map.png\" alt=\"Heat Map\">\nHeat maps enable you to do exploratory data analysis with two dimensions on the axes and the third dimension shown by intensity of color.</p>\n<p>:::</p>\n<p>:::col</p>\n<h4 id=\"area-chart\">Area Chart</h4>\n<p><img src=\"/img/design-guidelines/data-viz-area.png\" alt=\"Area Chart\">\nThis chart type excels at showing changes to total, but seeing change in components can be difficult.</p>\n<p>:::</p>\n<p>:::col</p>\n<h4 id=\"fill-guage\">Fill Guage</h4>\n<p><img src=\"/img/design-guidelines/data-viz-fill-gauge.png\" alt=\"Fill Guage\">\nA circular shape that represents a percentage value of a whole. May also be depicted as a dial.</p>\n<p>:::</p>\n<p>:::col</p>\n<h4 id=\"bubble-chart\">Bubble Chart</h4>\n<p><img src=\"/img/design-guidelines/data-viz-bubble.png\" alt=\"Bubble Chart\">\nBubble charts are used to visualize a data set with two to four dimensions. The first two dimensions are visualized as coordinates, the third as color and the fourth as size.</p>\n<p>:::</p>\n<p>:::col</p>\n<h4 id=\"histogram\">Histogram</h4>\n<p><img src=\"/img/design-guidelines/data-viz-histogram.png\" alt=\"Histogram\">\nConveys an accurate representation of the distribution of numerical data. It is an estimate of the probability distribution of a continuous variable (e.g. Spectrum analyzer).</p>\n<p>:::</p>\n<p>:::col</p>\n<h4 id=\"gantt-chart\">Gantt Chart</h4>\n<p><img src=\"/img/design-guidelines/data-viz-gantt.png\" alt=\"Gantt Chart\">\nA chart that depicts how a set of resources are used over time. Gantt charts illustrate the start, end, and duration of tasks (e.g. timeline or schedule). Example: <a href=\"https://ttc-monitor.astrouxds.com/\">TT&amp;C Sample app</a> - timeline view</p>\n<p>:::</p>\n<p>:::col</p>\n<h4 id=\"scatter-chart\">Scatter Chart</h4>\n<p><img src=\"/img/design-guidelines/data-viz-scatter-plot.png\" alt=\"Scatter Chart\">\nScatter charts plot points on a graph. When the user hovers over the points, tooltips are displayed with more information.</p>\n<p>:::</p>\n</div>\n\n<h2 id=\"visualization-anatomy\">Visualization Anatomy</h2>\n<p>The following images reference the general components and features for designing a visualization. Astro provides a variety of front-end components to support your design in the <a href=\"https://astrouxds.com/ui-components/readme\">UI Components</a> section.</p>\n<h3 id=\"filter-select\">Filter Select</h3>\n<p>Filters are used to narrow what is displayed in the table. They may be presented in the header as Drop Down menus, as a Segmented Button (e.g.View Select), or as an Input Field.</p>\n<p><img src=\"/img/design-guidelines/data-viz-anatomy.png\" alt=\"Example of filtering a chart view\"></p>\n<h3 id=\"legend\">Legend</h3>\n<p>When the data appearing in a chart contains multiple data series, it becomes more readable if they are shown in a legend. This helps in identifying each data series/data point in the chart.</p>\n<p><img src=\"/img/design-guidelines/data-viz-legend.png\" alt=\"Example of legend treatment in a chart view\"></p>\n<p>::: note\nLegends should be arranged as per the order of appearance of the data plot (Eg: if ‘Usage’ data is plotted first, the corresponding legend comes first).\n:::</p>\n<h3 id=\"accessibility\">Accessibility</h3>\n<p><strong>Type</strong>: Astro guidelines dictate a minimum type size of 14pt for axes and data points to maximize legibility. Open Sans, a sans-serif typeface, is required for optimum legibility. See <a href=\"/design-guidelines/typography\">Typography</a> for additional information.</p>\n<p><strong>Color and Contrast</strong>: Use colors that have sufficient contrast for the appropriate theme. If necessary, complement the use of color with a pattern or texture to convey different types of information. The non-status palette provided in the <a href=\"/design-guidelines/color\">Color</a> guidelines is applicable to both themes and is contrast compliant.</p>\n<h4 id=\"mixed-accessible-visualization-palette\">Mixed Accessible Visualization Palette</h4>\n<p>The following sample color set are provided for the specified number of data points. Astro dictates 8 or less colors per data set to reduce cognitive load. The mixed accessible palette was designed to meet a colorblind accessibility requirement. The vast majority of colorblind users are able to detect contrast variance as demonstrated in the following simulations.</p>\n<p><img src=\"/img/design-guidelines/accessibility-mixed.png\" alt=\"Mixed accessible color palette\">\n<img src=\"/img/design-guidelines/accessibility-deuternopia.png\" alt=\"Deuternopia accessible color palette\">\n<img src=\"/img/design-guidelines/accessibility-protanopia.png\" alt=\"Protanopia accessible color palette\">\n<img src=\"/img/design-guidelines/accessibility-tritanopia.png\" alt=\"Tritanopia accessible color palette\"></p>\n<h4 id=\"gradual-visualization-palettes\">Gradual Visualization Palettes</h4>\n<p>The following sample color sets were created from the non-status color palette:</p>\n<p>::: caution\nStatus colors are reserved for their respected statuses. Do not apply them to Visualizations unless they reflect the defined status, e.g. Critical.\n:::</p>\n<p><img src=\"/img/design-guidelines/data-set-palette-blue-green.png\" alt=\"Blue Green color palette\">\n<img src=\"/img/design-guidelines/data-set-palette-blue-violet.png\" alt=\"Blue Violet accessible color palette\">\n<img src=\"/img/design-guidelines/data-set-palette-tawny.png\" alt=\"Tawny accessible color palette\"></p>\n<h2 id=\"themed-visualization-references\">Themed Visualization References</h2>\n<p>Astro provides guidance, components and code for creating a light and dark themed User Interface. Use cases and additional information on selecting the appropriate UI can be found in the <a href=\"./theme\">Theme guidelines</a>. The following references demonstrate both.</p>\n<p><img src=\"/img/design-guidelines/stacked-bar.png\" alt=\"Sample stacked bar chart\">\n<img src=\"/img/design-guidelines/donut.png\" alt=\"Sample donut chart\">\n<img src=\"/img/design-guidelines/line.png\" alt=\"Sample line chart\"></p>\n<p>::: note\nLine charts and similar visualizations may require higher contrast than a filled graphic, e.g. Donut chart. Higher contrast colors are provided in the Astro Color Guidelines.\n:::</p>\n<p><img src=\"/img/design-guidelines/histogram.png\" alt=\"Sample histogram chart\"></p>\n<p>::: note\nDark-themed UIs help reduce eye strain and support visual clarity within the interface. This is ideal in a lights-out environment.\n:::</p>\n<p><img src=\"/img/design-guidelines/stacked-bar-lui.png\" alt=\"Sample stacked bar chart using the light theme\">\n<img src=\"/img/design-guidelines/donut-lui.png\" alt=\"Sample donut chart using the light theme\">\n<img src=\"/img/design-guidelines/line-lui.png\" alt=\"Sample line chart using the light theme\">\n<img src=\"/img/design-guidelines/histogram-lui.png\" alt=\"Sample histogram chart using the light theme\"></p>\n<h2 id=\"choose-the-right-visualization\">Choose the Right Visualization</h2>\n<p>A data visualization is useless if not designed to communicate clearly with the target audience. It should be compatible with the audience’s expertise and allow viewers to view and process data easily and quickly. Take into account how familiar the audience is with the basic principles being presented by the data, as well as whether they’re likely to be viewed on a regular basis.</p>\n<h2 id=\"examples\">Examples</h2>\n<p>:::two-col\n<img src=\"/img/design-guidelines/data-viz-do-1.png\" alt=\"Do: Allow axes labels enough padding. It’s important that the axes be legible and have adequate space. This will reduce eye strain and errors.\" title=\"Do: Allow axes labels enough padding. It’s important that the axes be legible and have adequate space. This will reduce eye strain and errors.\"></p>\n<p><img src=\"/img/design-guidelines/data-viz-dont-1.png\" alt=\"Don&#39;t: Use visual representations that don’t accurately represent the data set, like pie charts in 3D.\" title=\"Don’t: Use visual representations that don’t accurately represent the data set, like pie charts in 3D.\"></p>\n<p><img src=\"/img/design-guidelines/data-viz-do-2.png\" alt=\"Do: Use fill color and text that meets or exceeds WCAG 2.0 contrast requirements. Use a Contrast Checker to check contrast levels.\" title=\"Do: Use fill color and text that meets or exceeds WCAG 2.0 contrast requirements. Use a Contrast Checker to check contrast levels.\"></p>\n<p><img src=\"/img/design-guidelines/data-viz-dont-2.png\" alt=\"Don’t: Use more than 8 categories. Beyond that, mapping colors to categories will become burdensome and reduce their usefulness.\" title=\"Don’t: Use more than 8 categories. Beyond that, mapping colors to categories will become burdensome and reduce their usefulness.\">\n:::</p>\n<p>There are many dedicated visualization tools such as <a href=\"https://www.tableau.com/\">Tableau</a>, <a href=\"https://www.qlik.com/us\">QlikView</a>, <a href=\"https://www.highcharts.com/\">HighCharts</a> and <a href=\"https://d3js.org/\">d3.js</a>. Nothing can replace a modeling and statistic tool with good visualization capability. It helps tremendously in doing any exploratory data analysis as well as feature engineering. Always review the product licensing options before use.</p>\n",
      "excerpt": "<p>The Data Visualization section covers best practices, principles and references tailored to Astro. A core objective of a Data Visualization is to make complex information accessible and easy to digest. Therefore, the interface presenting the data should be clean and straightforward in order to minimize users&#x2019; cognitive load and time spent searching.</p>",
      "id": "patterns\\data-visualization"
    },
    {
      "tags": "resources",
      "path": "/patterns/modeless-panes",
      "date": "Last Modified",
      "layout": "interior.template.njk",
      "title": "Modeless Panes",
      "contents": "<h1 id=\"modeless-panes\">Modeless Panes</h1>\n<p>Every application needs to present screens temporarily to collect user input or to display transient details. Desktop and mobile platforms use Dialogs, Alerts or whole screens for these temporary interactions. A goal of Astro is to present temporary interactions inline and modelessly whenever possible, we call this a <strong>Modeless Pane</strong>.</p>\n<p>Modeless Panes allow Web applications to flow with less user interruption and to behave in a more Web-like fashion (overlapping and modal windows are not part of the core Web programming model).</p>\n<p>Modeless Panes are revealed inline by shifting existing content downward or to the right. They have a <strong>modeless</strong> interaction model that does not require user action before moving to another area of the page.</p>\n<h2 id=\"interaction-model\">Interaction Model</h2>\n<p>The simplest type of Modeless Pane displays static content and has a single Close button.</p>\n<p><img src=\"/img/design-guidelines/modeless-panes-1.png\" alt=\"Modeless Pane example.\"></p>\n<p>Modeless Panes with <strong>actionable content</strong>, such as controls for setting new values, have a pair of action buttons with a specific interaction.</p>\n<p>In this example, the command to Set Power on Radio 1 causes the content below to be shifted down to reveal a Modeless Panel with controls to set a new value for power.</p>\n<p>Until commitable changes have been made, the button pair are entitled <strong>Cancel</strong> (enabled) and <strong>Apply</strong> (disabled)</p>\n<p><img src=\"/img/design-guidelines/modeless-panes-2.png\" alt=\"Modeless Pane example.\"></p>\n<p>After committable changes have been made, the button pair become Cancel (enabled) and Apply (enabled)</p>\n<p><img src=\"/img/design-guidelines/modeless-panes-3.png\" alt=\"Modeless Pane example.\"></p>\n<p>Note that the design of this interaction, and the very nature of the web, means that the user can simply leave this pane by navigating elsewhere or closing the browser window. This design expects the users affirmative command to Apply before new values take effect.</p>\n<p><strong>Never place two “Close” buttons on the same Pane.</strong> Users may think they have different purposes. Always follow the distinct button layout described above.</p>\n<p><img src=\"/img/design-guidelines/modeless-panes-dont-2.png\" alt=\"Modeless Pane Don&#39;t Example.\">\n::: note\nDeveloper Note: Modeless Panes aren’t a specific programming construct. They may be implemented in a variety of ways. Astro doesn’t provide a standard implementation, so it’s important to follow the spirit and best practices of these guidelines as closely as possible.\n:::</p>\n",
      "excerpt": "<p>Every application needs to present screens temporarily to collect user input or to display transient details. Desktop and mobile platforms use Dialogs, Alerts or whole screens for these temporary interactions. A goal of Astro is to present temporary interactions inline and modelessly whenever possible, we call this a <strong>Modeless Pane</strong>.</p>",
      "id": "patterns\\modeless-panes"
    },
    {
      "tags": "resources",
      "path": "/patterns/navigation",
      "date": "Last Modified",
      "layout": "interior.template.njk",
      "title": "Navigation",
      "contents": "<h1 id=\"navigation\">Navigation</h1>\n<p>An application is fundamentally shaped by its navigation. Navigation defines how the user moves through the application and establishes their mental model of the object hierarchy.</p>\n<p>It’s best to start with a consideration of the primary objects your application will display. How are those objects divided or grouped? Is there a hierarchy of objects or a flat organization? Are there a small number primary objects or many?</p>\n<h2 id=\"master-detail-navigation\">Master-Detail Navigation</h2>\n<p>For a small, flat collection of like objects, consider Master-Detail navigation. Master-Detail is implemented with a list on the left and a detail panel on the right. The Master list shows key information for each item, the detail panel shows in-depth information and options.</p>\n<p><img src=\"/img/design-guidelines/master-detail-nav.png\" alt=\"Master-detail sample app layout\"></p>\n<h2 id=\"tab-navigation\">Tab Navigation</h2>\n<p>Application objects that easily fall into a small number of distinct categories, or that represent a step-wise workflow, are a candidate for <a href=\"../components/tabs\">Tab Navigation</a>. Examples include:</p>\n<ul>\n<li>Scheduled, In-progress, Done</li>\n<li>Untested, Succeeded, Failed</li>\n<li>Proposals, Projects</li>\n</ul>\n<p>Tab Navigation works best when the user can accomplish fundamental tasks within a tab before moving onto another.</p>\n<p>The contents of each tab may be similar objects with a different view, or unique objects or presentations.</p>\n<p><img src=\"/img/design-guidelines/tab-nav.png\" alt=\"Master-detail sample app layout\"></p>\n<h2 id=\"tree-navigation\">Tree Navigation</h2>\n<p>Tree Navigation resembles Master-Detail, but uses a hierarchal tree rather than a flat list to drive selection. The guidelines you’re reading right now use <a href=\"../components/tree\">Tree Navigation</a>.</p>\n<p>Use Tree Navigation only with a set of objects that fall into a natural single hierarchy, such as sections, chapters, and paragraphs.</p>\n<p>::: caution\nAvoid mixing unrelated object types in a single tree. Although this usage is commonly seen in desktop productivity applications, it often leads users on a frustrating hunt for objects or features.\n:::</p>\n<p><img src=\"/img/design-guidelines/tree-nav.png\" alt=\"Tree sample app layout\"></p>\n<h2 id=\"table-navigation\">Table Navigation</h2>\n<p>Applications with large uniform data sets can be structured with <a href=\"../components/table\">Table Navigation</a>. Table Navigation begins with a full screen tabular view of the application data. The table’s searching, sorting, and filtering capabilities allow the user to find objects of interest before drilling down to additional detail pages.</p>\n<p><img src=\"/img/design-guidelines/table-nav.png\" alt=\"Table navigation sample app layout\"></p>\n<h2 id=\"timeline-navigation\">Timeline Navigation</h2>\n<p>Applications that are principally organized around events on a realtime schedule can make use of <a href=\"../components/timeline\">Timeline Navigation</a>. A timeline atop the page allows the user to select events that are shown in detail in the main area the page.</p>\n<p><img src=\"/img/design-guidelines/timeline-nav.png\" alt=\"Timeline navigation sample app layout\"></p>\n<h2 id=\"combining-navigation\">Combining Navigation</h2>\n<p>Navigation types are often combined within complex applications. For example, an application can have Tab main navigation, with Master-Detail sub-navigation.</p>\n<p><img src=\"/img/design-guidelines/combined-nav.png\" alt=\"Combined navigation sample app layout\"></p>\n",
      "excerpt": "<p>An application is fundamentally shaped by its navigation. Navigation defines how the user moves through the application and establishes their mental model of the object hierarchy.</p>",
      "id": "patterns\\navigation"
    },
    {
      "tags": "resources",
      "path": "/patterns/notifications",
      "date": "Last Modified",
      "layout": "interior.template.njk",
      "title": "Notifications",
      "contents": "<h1 id=\"notifications\">Notifications</h1>\n<p>Notifications of application events have varying levels of urgency or interruption. An event may be as inconsequential as a download completing or as important as equipment unexpectedly going offline. Astro provides a variety of situationally appropriate mechanisms to notify users of events with varying levels of urgency.</p>\n<p>Below are examples of Astro Notifications from least urgency to highest priority:</p>\n<p><img src=\"/img/design-guidelines/notifications-urgency.png\" alt=\"Notification urgency.\"></p>\n<h2 id=\"log\">Log</h2>\n<p>Events of least urgency may be added to a <a href=\"../components/log\">Log</a>. Logged events aren’t likely to receive the user’s attention (Logs aren’t always in the user’s view), but are captured for later forensic use. Examples of low-level events are ordinary device state changes or routine consistency checks.</p>\n<p><img src=\"/img/design-guidelines/notifications-log.png\" alt=\"Notification log example.\"></p>\n<h2 id=\"notification-symbol\">Notification Symbol</h2>\n<p>Events that require some user attention, but no immediate response, may be indicated by changes to a <a href=\"../components/icons-and-symbols\">Notification Symbol</a>.</p>\n<p>This Notification Symbol shows that five events related to a satellite have occurred. You may hyperlink icons to reveal a deeper view of relevant Notification information. You may also link to the general Log.</p>\n<p><img src=\"/img/design-guidelines/notifications-symbol.png\" alt=\"Notification symbols example.\"></p>\n<h2 id=\"banner\">Banner</h2>\n<p>Events that deserve more urgent user attention, but don&#39;t require a response, may be displayed in a Notification Banner. The Banner displays within the user&#39;s field-of-view, but doesn&#39;t block other interaction.</p>\n<p>If the user is currently working in a specific screen area, the Banner may be presented in that area. If the Notification is more general, or doesn&#39;t relate to a specific area of the screen, it may be presented in the center of the screen just below the <a href=\"../library/global-status-bar\">Global Status Bar</a>.</p>\n<p><img src=\"/img/design-guidelines/notifications-banner.png\" alt=\"Notification symbols example.\"></p>\n<h2 id=\"modal-dialog\">Modal Dialog</h2>\n<p>For events that require the user&#39;s immediate attention and response, a modal <a href=\"../components/dialog-box\">Dialog Box</a> may be used. Modal Dialog Boxes should be avoided if possible, as they deliberately interrupt all other user interaction which could be critical.</p>\n<p><img src=\"/img/design-guidelines/notifications-modal-dialog.png\" alt=\"Modal dialog example.\"></p>\n",
      "excerpt": "<p>Notifications of application events have varying levels of urgency or interruption. An event may be as inconsequential as a download completing or as important as equipment unexpectedly going offline. Astro provides a variety of situationally appropriate mechanisms to notify users of events with varying levels of urgency.</p>",
      "id": "patterns\\notifications"
    },
    {
      "tags": "resources",
      "path": "/patterns/sample-app",
      "date": "Last Modified",
      "layout": "interior.template.njk",
      "title": "Sample App",
      "contents": "<h1 id=\"sample-app\">Sample App</h1>\n<h2 id=\"putting-it-together\">Putting It Together</h2>\n<p>The sample <a href=\"https://sample-app.astrouxds.com/\">Astro App</a> is provided to make it easier to create an application by combining components from Astro.</p>\n<p>We&#39;ve created an example for you that combines visual design, navigation, asset selection, data visualization, and other components to illustrate common layouts that are possible with the Astro components.</p>\n<p>::: caution\nPlease note that the sample app and web components are <strong>NOT PRODUCTION READY CODE</strong>. These are being provided as examples of how the UX works and a starting point for your development.\n:::</p>\n<p><img src=\"/img/design-guidelines/astro-app.png\" alt=\"Astro Sample App screenshot.\"></p>\n<p><a href=\"https://sample-app.astrouxds.com/\">Go to the Astro App</a></p>\n",
      "excerpt": "<p>The sample <a href=\"https://sample-app.astrouxds.com/\">Astro App</a> is provided to make it easier to create an application by combining components from Astro.</p>",
      "id": "patterns\\sample-app"
    },
    {
      "tags": "resources",
      "path": "/patterns/status-system",
      "date": "Last Modified",
      "layout": "interior.template.njk",
      "title": "Status System",
      "class": "color",
      "contents": "<h1 id=\"status-system\">Status System</h1>\n<p>Consistent use of colors and symbols to convey status is critical for user success.</p>\n<p>Astro&#39;s user research, conducted on a wide variety of space applications, showed that inconsistent and unconstrained use of colors and symbols left users confused and even dismissive of color systems. The research further showed that wide overuse of red to indicate both &quot;off&quot; and &quot;emergency&quot; stripped the color of its attention-getting power.</p>\n<p>The Astro Status System is a standard to consistently indicate the state of an object or concept (typically represented by an Icon). The Status System consists of Status Symbols and Status Colors.</p>\n<p>The Status Color palette for the Status System is based on a color temperature scale. The lowest level of severity, Off, is grey (neutral) and the highest level of severity, Alert, is red (hot).</p>\n<p><img src=\"/img/design-guidelines/status-system-fundamentals.png\" alt=\"Status system taxonmy\"></p>\n<p>Each Status Symbol is a combination of a Status Color and a shape. The shapes are provided to ensure people with color blindness can also clearly identify the state of the object or concept</p>\n<h2 id=\"rules-of-thumb\">Rules of Thumb</h2>\n<ul>\n<li>A state change must be reflected by a change in the Status Color and, if appropriate, the Status Icon.</li>\n<li>Only use the standard set of Status Symbols and Status Colors provided.</li>\n<li>Use the highest level of urgency status if multiple statuses are consolidated. For example, if the statuses of underlying components are green, yellow, and red, the consolidated indicator is red.</li>\n<li>Reserve red for states that are urgent and require immediate attention.</li>\n</ul>\n<h2 id=\"status-colors\">Status Colors</h2>\n<table>\n<thead>\n<tr>\n<th></th>\n<th>Hex</th>\n<th>RGB</th>\n<th>CSS</th>\n<th>Synonyms</th>\n</tr>\n</thead>\n<tbody><tr>\n<td><img src=\"/img/swatches/critical__dark.svg\" alt=\"Status Color: Critical \"></td>\n<td>#ff3838</td>\n<td>255,56,56</td>\n<td>--colorCritical</td>\n<td>Critical, alert, emergency, urgent</td>\n</tr>\n<tr>\n<td><img src=\"/img/swatches/serious__dark.svg\" alt=\"Status Color: Serious \"></td>\n<td>#ffb302</td>\n<td>255,179,2</td>\n<td>--colorSerious</td>\n<td>Serious, error, warning, needs attention</td>\n</tr>\n<tr>\n<td><img src=\"/img/swatches/caution__dark.svg\" alt=\"Status Color: Caution \"></td>\n<td>#fce83a</td>\n<td>252,232,58</td>\n<td>--colorCaution</td>\n<td>Caution, unstable, unsatisfactory</td>\n</tr>\n<tr>\n<td><img src=\"/img/swatches/normal__dark.svg\" alt=\"Status Color: Normal \"></td>\n<td>#56f000</td>\n<td>86,240,0</td>\n<td>--colorNormal</td>\n<td>Normal, on, ok, fine, go, satisfactory</td>\n</tr>\n<tr>\n<td><img src=\"/img/swatches/standby__dark.svg\" alt=\"Status Color: Standby \"></td>\n<td>#2dccff</td>\n<td>45,204,255</td>\n<td>--colorStandby</td>\n<td>Standby, available, enabled</td>\n</tr>\n<tr>\n<td><img src=\"/img/swatches/off__dark.svg\" alt=\"Status Color: Off \"></td>\n<td>#9ea7ad</td>\n<td>158,167,173</td>\n<td>--colorOff</td>\n<td>Off, unavailable, disabled</td>\n</tr>\n</tbody></table>\n<p>::: caution\nAvoid adding additional colors if possible. Creating additional colors greatly reduces the user’s ability to learn and properly use the application.\n:::</p>\n",
      "excerpt": "<p>Consistent use of colors and symbols to convey status is critical for user success.</p>",
      "id": "patterns\\status-system"
    },
    {
      "tags": "components",
      "path": "/patterns/table",
      "date": "Last Modified",
      "layout": "components.template.njk",
      "title": "Table",
      "contents": "<h1 id=\"table\">Table</h1>\n<p>Tables are a fundamental UX design tool for organizing and displaying data. They are used throughout space applications and may take many forms. The principal table interactions and styles are illustrated below and demonstrated in the <a href=\"https://grm-dashboard.astrouxds.com/\">GRM</a> and <a href=\"https://ttc-monitor.astrouxds.com/\">TTC</a> sample applications.</p>\n<h2 id=\"header\">Header</h2>\n<p>A table can be configured with a tall header with large hero numbers (if the count of some type is important to know at a glance) or with a compact header if vertical space is at a premium.</p>\n<p><img src=\"/img/components/table-header-tall-cms.png\" alt=\"Table with tall header.\" title=\"Table with tall header.\">\nTable with tall header.</p>\n<p><img src=\"/img/components/table-header-compact-cms.png\" alt=\"Table with compact header.\" title=\"Table with compact header.\">\nTable with compact header.</p>\n<h2 id=\"filters\">Filters</h2>\n<p>Filters, to narrow what is displayed in the table, may be presented in the header as Drop Down menus, as a Segmented Button, or as an Input Field. If it is critical that the user knows that not all data is displayed, a warning may be shown when filters are applied.</p>\n<p>While filters are often related to the data types displayed in columns, it is not recommended that filters be activated directly from the column headers or displayed there. Filters selected through a combination UI elements in the header can be more expressive and focused by combining and highlighting key data types.</p>\n<p><img src=\"/img/components/table-filters-cms.png\" alt=\"Table with filters as Drop Down menus and wildcar Input Field.\" title=\"Table with filters as Drop Down menus and wildcar Input Field.\">\nTable with filters as Drop Down menus and wildcar Input Field.</p>\n<p><img src=\"/img/components/table-segmented-button-cms.png\" alt=\"Table with filters as Segmented Buttons and wildcard Input Field.\" title=\"Table with filters as Segmented Buttons and wildcard Input Field.\">\nTable with filters as Segmented Buttons and wildcard Input Field.</p>\n<h2 id=\"sorting\">Sorting</h2>\n<p>Sorting is accomplished by clicking in a column header. The sort order (ascending or descending) is indicated by a arrow. A second click in the currently sorted column changes the sort order.</p>\n<p>Selection and Action\nTables use a familiar Selection/Action model. Selection is accomplished by clicking in a row. Multiple selection can be enabled by adding a selection column of Checkboxes. Action Buttons may appear in an inline detail area or in a footer.</p>\n<p><img src=\"/img/components/table-inline-action-cms.png\" alt=\"Table with inline action.\" title=\"Table with inline action.\">\nTable with inline action.</p>\n<p><img src=\"/img/components/table-action-footer-cms.png\" alt=\"Table with multiple selection and actions in footer.\" title=\"Table with multiple selection and actions in footer.\">\nTable with multiple selection and actions in footer.</p>\n",
      "excerpt": "<p>Tables are a fundamental UX design tool for organizing and displaying data. They are used throughout space applications and may take many forms. The principal table interactions and styles are illustrated below and demonstrated in the <a href=\"https://grm-dashboard.astrouxds.com/\">GRM</a> and <a href=\"https://ttc-monitor.astrouxds.com/\">TTC</a> sample applications.</p>",
      "id": "patterns\\table"
    },
    {
      "tags": "components",
      "path": "/patterns/validation",
      "date": "Last Modified",
      "layout": "components.template.njk",
      "title": "Validation",
      "contents": "<h1 id=\"validation\">Validation</h1>\n<p>Validation ensures that data is properly entered into an Input Field or Form. It alerts users to data errors, required input and prompts them to make corrections.</p>\n<p>Input Fields, Checkboxes and Drop Down Menus can be configured to require user input and to enforce specific data formats. Once configured, these elements can provide validation as users move through a group of controls, such as a form, within a Dialog Box or Pane. Validation is then employed a second time when “Apply” or “OK” is selected.</p>\n<p>Individual elements outside of a Dialog Box or Pane can also be configured for validation.</p>\n<h2 id=\"rules-of-thumb\">Rules of Thumb</h2>\n<ul>\n<li>Validate user input immediately after the element loses focus. Don’t wait to validate elements upon “Apply.”</li>\n<li>Don’t reset the form. Requiring users to re-input valid data is poor user experience.</li>\n<li>In the same voice, write short, simple and precise error messages that assist users in easily correcting input errors.</li>\n<li>Clearly mark required fields with an asterisk.</li>\n<li>Display examples of correctly formatted data.</li>\n<li>Use appropriate input type on form fields for the expected data input (e.g., <code>&lt;input type=&quot;number&quot;&gt;</code> when entering numeric data)</li>\n</ul>\n<p>::: note Poorly written error messages confuse and frustrate the user and force them to fix the input problem through trial and error.</p>\n<p>A well written validation error message greatly reduces the user’s error recovery time and boosts user’s confidence in the quality of the application. The error message should inform the user as succinctly as possible:</p>\n<ul>\n<li>What the input problem is.</li>\n<li>Why the input was deemed invalid.</li>\n<li>How to fix the input error.\n:::</li>\n</ul>\n<h2 id=\"writing-in-the-astro-voice\">Writing in the Astro Voice</h2>\n<p>The voice of Astro applications is direct, confident and reflects the critical nature of Astro events and processes. It’s never chatty or informal nor does it personify technology.</p>\n<p>Tips for writing validation error messages in the voice of Astro:</p>\n<ul>\n<li>Choose language that’s simple, brief and commanding. Astro users are often in high-pressure, time-sensitive situations with only seconds to correctly respond. Therefore, only include information absolutely necessary to swiftly resolve the error.</li>\n<li>Omit pronouns. In error messages pronouns add no value and take up already limited space. Pronouns also assume an intimacy with the user making the message seem less formal and less important.</li>\n<li>Never personify the application. Assigning human qualities to a virtual environment is the parlance of Science Fiction. It’s inappropriate for the vital nature of Astro applications.</li>\n<li>Don’t use salutations. Leave out: “hello, goodbye, welcome,” etc.</li>\n</ul>\n<h2 id=\"appearance-and-behavior\">Appearance and Behavior</h2>\n<p>Configuration options for validation of Input Fields:\n:::two-col</p>\n<p><img src=\"/img/components/val-required-input.png\" alt=\"Required Input - user must enter some text. If no text is entered, a warning icon and optional instructional text is shown.\" title=\"Required Input - user must enter some text. If no text is entered, a warning icon and optional instructional text is shown.\"></p>\n<p><img src=\"/img/components/val-numeric-range.png\" alt=\"Numeric Range - input must be a number within a specific range. Non-numeric characters and out-of-range values are indicated with a warning icon and optional instructional text.\" title=\"Numeric Range - input must be a number within a specific range. Non-numeric characters and out-of-range values are indicated with a warning icon and optional instructional text.\"></p>\n<p><img src=\"/img/components/val-time.png\" alt=\"Time - input must be a valid time. Text that cannot be recognized as a valid time is indicated with a warning icon and optional instructional text.\" title=\"Time - input must be a valid time. Text that cannot be recognized as a valid time is indicated with a warning icon and optional instructional text.\"></p>\n<p><img src=\"/img/components/val-date.png\" alt=\"Date - input must be a valid date. Text that cannot be recognized as a valid date is indicated with a warning icon and optional instructional text.\" title=\"Date - input must be a valid date. Text that cannot be recognized as a valid date is indicated with a warning icon and optional instructional text.\"></p>\n<p><img src=\"/img/components/val-group-checkbox.png\" alt=\"Checkboxes can be configured to require input, where at least one item in a group must be selected.\" title=\"Checkboxes can be configured to require input, where at least one item in a group must be selected.\"></p>\n<p><img src=\"/img/components/val-dropdown-input.png\" alt=\"Drop Down Menus can be configured to require input, where at least one item in the menu must be selected.\" title=\"Drop Down Menus can be configured to require input, where at least one item in the menu must be selected.\"></p>\n<p>:::</p>\n",
      "excerpt": "<p>Validation ensures that data is properly entered into an Input Field or Form. It alerts users to data errors, required input and prompts them to make corrections.</p>",
      "id": "patterns\\validation"
    },
    {
      "tags": "components",
      "path": "/components/accordion",
      "date": "Last Modified",
      "layout": "components.template.njk",
      "title": "Accordion",
      "demo": "https://astro-components.netlify.com/iframe.html?id=components-accordion--accordion",
      "storybook": "components-accordions--standard-accordion",
      "git": "rux-accordion",
      "height": "280px",
      "theme": false,
      "contents": "<h1 id=\"accordion\">Accordion</h1>\n<p>::: caution\nAccordions are currently being revamped for a future release. The following legacy page is provided for reference.\n:::</p>\n<p>An Accordion is a device which presents a hierarchical set of items in which only a single branch of that hierarchy may be exposed at one time.</p>\n<h2 id=\"rules-of-thumb\">Rules of Thumb</h2>\n<ul>\n<li>Give titles to Accordions if content is not obvious to users.\n::: note\nAccordions are not commonly used for direct action or data manipulation. Use Accordions for navigation within a master-detail navigational pattern.\n:::</li>\n</ul>\n<p><img src=\"/img/components/accordion-1.png\" alt=\"Example of an accordion in its collapsed state\"></p>\n<h2 id=\"appearance-and-behavior\">Appearance and Behavior</h2>\n<p>Clicking on an item in an Accordion selects and expands that item. If there are any child items in the hierarchy below, those items are automatically displayed. Items are indented according to their depth.</p>\n<p><img src=\"/img/components/accordion-2.png\" alt=\"Chapter 1 is selected, and its children are displayed.\" title=\"Do: Item 1 is selected, and its children are displayed.\">\nChapter 1 is selected, and its children are displayed.</p>\n<p><img src=\"/img/components/accordion-3.png\" alt=\"If a child item of the current selection is selected, that entire branch remains displayed.\" title=\"If a child item of the current selection is selected, that entire branch remains displayed.\">\nIf a child item of the current selection is selected, that entire branch remains displayed.</p>\n<p><img src=\"/img/components/accordion-4.png\" alt=\"If a different branch is selected, for example, by clicking on a different top level item, the current branch automatically closes and the new branch opens.\" title=\"If a different branch is selected, for example, by clicking on a different top level item, the current branch automatically closes and the new branch opens.\">\nIf a different branch is selected, for example, by clicking on a different top level item, the current branch automatically closes and the new branch opens.</p>\n<p><img src=\"/img/components/accordion-do-5.png\" alt=\"If a child item of the current selection is selected, that entire branch remains displayed.\" title=\"If a child item of the current selection is selected, that entire branch remains displayed.\">\nIf a child item of the current selection is selected, that entire branch remains displayed.\n:::</p>\n",
      "excerpt": "<p>::: caution\nAccordions are currently being revamped for a future release. The following legacy page is provided for reference.\n:::</p>",
      "id": "components\\accordion"
    },
    {
      "tags": "components",
      "path": "/components/button",
      "date": "Last Modified",
      "layout": "components.template.njk",
      "title": "Button",
      "demo": "https://rocketcom.bitbucket.io/html-demos/button.html",
      "storybook": "components-buttons--standard-button",
      "git": "rux-button",
      "height": "210px",
      "theme": true,
      "contents": "<h1 id=\"button\">Button</h1>\n<p>Action Buttons allow users to trigger actions by clicking, tapping, or pressing a corresponding key on a keyboard, such as the “Enter” key.</p>\n<h2 id=\"rules-of-thumb\">Rules of Thumb</h2>\n<ul>\n<li>Use only predefined button colors, sizes and fonts — don’t customize or alter them.</li>\n<li>Don’t design elements which look similar to buttons but act differently. Buttons are actionable elements.</li>\n<li>Don’t activate Pop Up Menus from buttons.</li>\n<li>Buttons within the same group should be the same size. Use the width of the widest button.</li>\n<li>Space buttons evenly.</li>\n<li>Clearly title buttons by choosing a verb that describes the action the user performs at precisely the moment the button is clicked: “Save, Close, Print, * Delete, Change Password,” etc.</li>\n<li>Resize button width to accommodate the title; do not abbreviate or truncate button titles.</li>\n<li>Don’t use an outside label to introduce a button. Instead, clearly title the button.</li>\n<li>Add an ellipsis (…) to the button title if it opens another window, Dialog Box or app.</li>\n<li>Within Dialog Boxes, right-justify buttons.</li>\n</ul>\n<h2 id=\"outline-button\">Outline Button</h2>\n<p>Outline Buttons are an alternative button style to be used in situations where a de-emphasized button is beneficial in guiding the user to a preferred option. For example, use an outline button for the less preferred option in Ok/Cancel button pairings.</p>\n<h2 id=\"examples\">Examples</h2>\n<p>:::two-col</p>\n<p><img src=\"/img/components/button-do-1.png\" alt=\"Do: User buttons for actionable controls only\" title=\"Do: User buttons for actionable controls only\"></p>\n<p><img src=\"/img/components/button-dont-1.png\" alt=\"Don&#39;t: User buttons for actionable controls only\" title=\"Don&#39;t: User buttons for actionable controls only\"></p>\n<p><img src=\"/img/components/button-do-2.png\" alt=\"Do: Right justify buttons and give them adequate spacing from fields.\" title=\"Do: Right justify buttons and give them adequate spacing from fields.\"></p>\n<p><img src=\"/img/components/button-dont-2.png\" alt=\"Don’t: Mix button colors and sizes.\" title=\"Don’t: Mix button colors and sizes.\"></p>\n<p><img src=\"/img/components/button-do-3.png\" alt=\"Do: Use standardized button colors only.\" title=\"Do: Use standardized button colors only.\"></p>\n<p>:::</p>\n",
      "excerpt": "<p>Action Buttons allow users to trigger actions by clicking, tapping, or pressing a corresponding key on a keyboard, such as the &#x201C;Enter&#x201D; key.</p>",
      "id": "components\\button"
    },
    {
      "tags": "components",
      "path": "/components/checkbox",
      "date": "Last Modified",
      "layout": "components.template.njk",
      "title": "Checkbox",
      "demo": "https://rocketcom.bitbucket.io/html-demos/checkbox.html",
      "storybook": "components-form-elements--checkboxes",
      "git": "rux-checkbox",
      "height": "150px",
      "theme": true,
      "contents": "<h1 id=\"checkbox\">Checkbox</h1>\n<p>A Checkbox describes a state or value that can be either “On or Off.” Checkboxes are not mutually exclusive. More than one Checkbox may be checked at the same time.</p>\n<h2 id=\"rules-of-thumb\">Rules of Thumb</h2>\n<ul>\n<li>Use Checkboxes when there is a list of options from which the user may select any number of choices.</li>\n<li>In a list, each Checkbox is independent of all other Checkboxes.</li>\n<li>When asking the user to make a mutually exclusive choice, use a Radio Button not a Checkbox.</li>\n<li>Group Checkboxes whenever possible.</li>\n</ul>\n<h2 id=\"appearance-and-behavior\">Appearance and Behavior</h2>\n<p>A checkbox can be configured for required input. <a href=\"./validation/\">See Form and Input Validation</a>.</p>\n<p>::: note\nDon’t use a Checkbox to initiate an action. Instead, use an <a href=\"../button\">Action Button</a> or a <a href=\"./toggle\">Toggle Button</a>\n:::</p>\n<h2 id=\"examples\">Examples</h2>\n<p>::: two-col\n<img src=\"/img/components/checkbox-do-1.png\" alt=\"Do: Neatly arrange and group multiple Checkboxes whenever possible.\" title=\"Do: Neatly arrange and group multiple Checkboxes whenever possible.\">\nDo: Neatly arrange and group multiple Checkboxes whenever possible.</p>\n<p><img src=\"/img/components/checkbox-do-1.png\" alt=\"Don’t: Poorly placed and misaligned Checkboxes make it difficult for users to differentiate one state from another.\" title=\"Don’t: Poorly placed and misaligned Checkboxes make it difficult for users to differentiate one state from another.\">\nDon’t: Poorly placed and misaligned Checkboxes make it difficult for users to differentiate one state from another.</p>\n<p>:::</p>\n",
      "excerpt": "<p>A Checkbox describes a state or value that can be either &#x201C;On or Off.&#x201D; Checkboxes are not mutually exclusive. More than one Checkbox may be checked at the same time.</p>",
      "id": "components\\checkbox"
    },
    {
      "tags": "components",
      "path": "/components/clock",
      "date": "Last Modified",
      "layout": "components.template.njk",
      "title": "Clock",
      "demo": "https://rocketcom.bitbucket.io/packages/rux-clock/demo/rux-clock.html",
      "storybook": "components-clock--clock",
      "git": "rux-clock",
      "height": "190px",
      "theme": true,
      "contents": "<h1 id=\"clock\">Clock</h1>\n<p>Clock shows the current date and time, and optional AOS and LOS timers. It will typically be positioned on the Global Status Bar.</p>\n<h2 id=\"appearance-and-behavior\">Appearance and Behavior</h2>\n<p>The clock is not an interactive component. Date and Time are always present. AOS, and LOS are optional. The time is UTC by default, but can be configured for any time zone.</p>\n<p>All digits should be displayed in the Roboto Mono font. This font&#39;s monospace number characters ensure that the display will not jitter as it changes. The font is already built into the Clock web component, but may be <a href=\"https://fonts.google.com/specimen/Roboto+Mono\">downloaded</a> for design use.</p>\n<h2 id=\"examples\">Examples</h2>\n<p><img src=\"/img/components/clock-roboto-mono.png\" alt=\"Example Clock\" title=\"Do: Something\"></p>\n",
      "excerpt": "<p>Clock shows the current date and time, and optional AOS and LOS timers. It will typically be positioned on the Global Status Bar.</p>",
      "id": "components\\clock"
    },
    {
      "tags": "components",
      "path": "/components/dialog-box",
      "date": "Last Modified",
      "layout": "components.template.njk",
      "title": "Dialog Box",
      "demo": "https://rocketcom.bitbucket.io/html-demos/modal.html",
      "storybook": "components-story--dialog-box",
      "git": "rux-modal",
      "height": "240px",
      "theme": true,
      "contents": "<h1 id=\"dialog-box\">Dialog Box</h1>\n<p>A Dialog Box interrupts app processing to prompt a user to confirm an action or acknowledge a piece of information. It displays information along with a set of buttons allowing users to “Accept or Cancel” the actions presented within the Dialog Box.</p>\n<h2 id=\"rules-of-thumb\">Rules of Thumb</h2>\n<ul>\n<li>Use a Dialog Box to: - Ask users to confirm irreversible, destructive or expensive actions. - <a href=\"/design-guidelines/notifications\">Notify</a> the user of an urgent event.</li>\n<li>Use buttons within a Dialog Box to confirm or cancel actions. Avoid using links or other components.</li>\n<li>Use clearly titled action buttons to exit a Dialog Box. Don’t use a “close box.”</li>\n<li>Title buttons by choosing a verb that describes its action.</li>\n<li>Use Dialog Boxes sparingly as they interrupt critical workflow.</li>\n<li>Dialog Box text should be clearly written, brief and actionable.</li>\n</ul>\n<h2 id=\"appearance-and-behavior\">Appearance and Behavior</h2>\n<h2 id=\"examples\">Examples</h2>\n<p>:::two-col</p>\n<p><img src=\"/img/components/modal-do-1.png\" alt=\"Do: Use buttons within a Dialog Box to confirm or cancel actions.\" title=\"Do: Use buttons within a Dialog Box to confirm or cancel actions.\"></p>\n<p><img src=\"/img/components/modal-dont-1.png\" alt=\"Don’t: Use links or other components to confirm or cancel actions.\" title=\"Don’t: Use links or other components to confirm or cancel actions.\"></p>\n<p>:::</p>\n",
      "excerpt": "<p>A Dialog Box interrupts app processing to prompt a user to confirm an action or acknowledge a piece of information. It displays information along with a set of buttons allowing users to &#x201C;Accept or Cancel&#x201D; the actions presented within the Dialog Box.</p>",
      "id": "components\\dialog-box"
    },
    {
      "tags": "components",
      "path": "/components/drop-down",
      "date": "Last Modified",
      "layout": "components.template.njk",
      "title": "Drop Down",
      "demo": "https://astro-components.netlify.com/iframe.html?id=components-form-elements--select-menu",
      "storybook": "components-form-elements--select-menu",
      "git": "rux-modal",
      "height": "130px",
      "theme": true,
      "contents": "<h1 id=\"drop-down\">Drop Down</h1>\n<p>When activated, Drop Down Menus allow users to select a value from a list of values. Once a value is selected, the Drop Down displays the selected value.</p>\n<p>Content</p>\n<h2 id=\"rules-of-thumb\">Rules of Thumb</h2>\n<ul>\n<li>Drop Downs should display a list of multiple values.</li>\n<li>Drop Downs may default to a state that instructs users what to do. For example: “Select Modem” or, a default choice like “Modem X.”</li>\n<li>When user knows what they’re looking for in advance, consider using a text field with client-side auto-complete functionality instead.</li>\n</ul>\n<h2 id=\"examples\">Examples</h2>\n<p>:::two-col</p>\n<p><img src=\"/img/components/dropdown-dont-1.png\" alt=\"Don’t: Create a Drop Down list with too many options. The user needs to be able to scan and navigate the list easily\" title=\"Don’t: Create a Drop Down list with too many options. The user needs to be able to scan and navigate the list easily\"></p>\n<p>:::</p>\n",
      "excerpt": "<p>When activated, Drop Down Menus allow users to select a value from a list of values. Once a value is selected, the Drop Down displays the selected value.</p>",
      "id": "components\\drop-down"
    },
    {
      "tags": "components",
      "path": "/components/global-status-bar",
      "date": "Last Modified",
      "layout": "components.template.njk",
      "title": "Global Status Bar",
      "demo": "https://astro-components.netlify.com/iframe.html?id=components-global-status-bar--global-status-bar",
      "storybook": "components-global-status-bar--global-status-bar",
      "git": "rux-global-status-bar",
      "height": "150px",
      "contents": "<h1 id=\"global-status-bar\">Global Status Bar</h1>\n<p>The Global Status Bar is a full width view across the top of an application — an area commonly reserved for global status, global command and top-level navigation. The Global Status Bar often includes: Application Name, Monitoring Icons, Top Level Navigation and an Emergency Button.</p>\n<h2 id=\"rules-of-thumb\">Rules of Thumb</h2>\n<ul>\n<li>Make Monitoring Icons interactive to reveal in-depth information.</li>\n<li>Make sure that Monitoring Icons use color coding, iconography and labels consistent with the standard design.</li>\n<li>Include the name of the application.</li>\n</ul>\n<h2 id=\"appearance-and-behavior\">Appearance and Behavior</h2>\n<p><img src=\"/img/components/global-status-simple.png\" alt=\"Simplest Global Status Bar - Only include the App Name.\" title=\"Simplest Global Status Bar - Only include the App Name.\"></p>\n<p><img src=\"/img/components/global-status-more.png\" alt=\"Simple Global Status Bar - App Name and Emergency Off.\" title=\"Simple Global Status Bar - App Name and Emergency Off.\"></p>\n<p><img src=\"/img/components/global-status-very.png\" alt=\"More Complex Global Status Bar - App Name, Status Icons and Emergency Off.\" title=\"More Complex Global Status Bar - App Name, Status Icons and Emergency Off.\"></p>\n<p><img src=\"/img/components/global-status-complex.png\" alt=\"Most Complex Global Status Bar - App Name, Navigation, Monitoring Icons and Emergency Off.\" title=\"Most Complex Global Status Bar - App Name, Navigation, Monitoring Icons and Emergency Off.\"></p>\n<p>::: note\nWhen using the alternate light theme in Astro, the Global Status Bar and all of the elements it contains still use the default dark theme styling.\n:::</p>\n<h2 id=\"examples\">Examples</h2>\n<p>:::two-col</p>\n<p><img src=\"/img/components/global-status-do-1.png\" alt=\"Do: Correctly and consistently utilize the standard elements that comprise the Global Status Bar.\" title=\"Do: Correctly and consistently utilize the standard elements that comprise the Global Status Bar.\"></p>\n<p><img src=\"/img/components/global-status-dont-1.png\" alt=\"Don’t: Use icons, labels and colors incorrectly.\" title=\"Don’t: Use icons, labels and colors incorrectly.\"></p>\n<p><img src=\"/img/components/global-status-do-2.png\" alt=\"Do: Left justify the application name and Top Level Nav (when utilized). Right justify Icons and Emergency Off (when utilized).\" title=\"Do: Left justify the application name and Top Level Nav (when utilized). Right justify Icons and Emergency Off (when utilized).\"></p>\n<p><img src=\"/img/components/global-status-dont-2.png\" alt=\"Don’t: Use the Global Status Bar for controls or indications that come and go with different app modes. Reserve it for truly global elements.\" title=\"Don’t: Use the Global Status Bar for controls or indications that come and go with different app modes. Reserve it for truly global elements.\"></p>\n<p>:::</p>\n",
      "excerpt": "<p>The Global Status Bar is a full width view across the top of an application &#x2014; an area commonly reserved for global status, global command and top-level navigation. The Global Status Bar often includes: Application Name, Monitoring Icons, Top Level Navigation and an Emergency Button.</p>",
      "id": "components\\global-status-bar"
    },
    {
      "tags": "components",
      "path": "/components/icons-and-symbols",
      "date": "Last Modified",
      "layout": "components.template.njk",
      "title": "Icons and Symbols",
      "demo": "https://astro-components.netlify.com/iframe.html?id=components-icons-symbols--monitoring-icon-set",
      "storybook": "components-icons-symbols--monitoring-icon-set",
      "git": "rux-icon",
      "height": 130,
      "theme": true,
      "contents": "<h1 id=\"icons-and-symbols\">Icons and Symbols</h1>\n<p>Astro includes a library of common Icons, Symbols, and Notification Symbols. Persistent use of these will help ensure users are presented with consistent and meaningful information across applications.</p>\n<p>Each of these must be easily identifiable by users and also be immediately distinguishable from each other, eliminating confusion and mistakes.</p>\n<p>Astro’s icons have been designed to utilize the Astro Status System.</p>\n<p>::: note\nMonitoring Icons must include a label, a title attribute in the HTML and a status indicator. When used in a light theme status indicators must also include a 1 pixel border around the status indicator set to rgba(0,0,0,0.5)\n:::</p>\n<h2 id=\"astro-icon-classes\">Astro Icon Classes</h2>\n<h3 id=\"monitoring-icons\">Monitoring Icons</h3>\n<p>These icons represent objects, equipment, and concepts that are being administered or monitored. The purpose of these icons is to easily, concisely, and clearly visually communicate their status to users.</p>\n<p><img src=\"/img/components/icons-monitoring-1.png\" alt=\"Example of the same monitoring icon in all possible states\" title=\"Example of the same monitoring icon in all possible states\"></p>\n<p><img src=\"/img/components/icons-monitoring-2.png\" alt=\"Example of different monitoring icon symbols\" title=\"Example of different monitoring icon symbols\"></p>\n<h3 id=\"percentage-monitoring-icons\">Percentage Monitoring Icons</h3>\n<p>Percentage Monitoring Icons depict a value between 0 and 100 as an arc and a numeric display. Ranges within the arc may be mapped to the standard <a href=\"/design-guidelines/status-system\">Astro Status Colors</a>. In this example the range containing 80% is mapped to Serious.</p>\n<p><img src=\"/img/components/percentage-monitoring-graphic-cms.png\" alt=\"Anatomy of the monitoring progress icon\" title=\"Anatomy of the monitoring progress icon\"></p>\n<h3 id=\"action-icons\">Action Icons</h3>\n<p>Action Icons initiate actions or state changes to objects or processes.</p>\n<p><img src=\"/img/components/icons-action.png\" alt=\"Examples of Astro Action Icons\" title=\"Examples of Astro Action Icons\"></p>\n<h3 id=\"utility-icons\">Utility Icons</h3>\n<p>Utility Icons represent access to tools used to modify the settings for a component, object or globally. Utility Icons are also accompanied by a descriptive name.</p>\n<p><img src=\"/img/components/icons-utility.png\" alt=\"Examples of Astro Utility Icons\" title=\"Examples of Astro Utility Icons\"></p>\n<h3 id=\"component-icons\">Component Icons</h3>\n<p>A Component Icon is a pictorial representation of an action associated with a screen component (i.e. - popup menu open/close or window expand/contract). The Component Icon graphic provides a guide to the action that will happen to the window component. Component Icon actions are enacted when selected or clicked.</p>\n<p><img src=\"/img/components/icons-component-1.png\" alt=\"Examples of Astro Component Icons\" title=\"Examples of Astro Component Icons\"></p>\n<p><img src=\"/img/components/icons-component-2.png\" alt=\"Examples of Astro Component Icons\" title=\"Examples of Astro Component Icons\"></p>\n<h2 id=\"astro-symbol-classes\">Astro Symbol Classes</h2>\n<p>Astro Symbols are associated with something being monitored and whose state is being communicated to the user. A user may make a setting change based on an items status, but the Status Symbol will only change if the status of the thing being monitored changes.</p>\n<p>::: caution\nStatus Symbols are not to be altered as they are appended to icons for ADA 508 and WCAG 2.0 compliance.\n:::</p>\n<h3 id=\"status-symbols\">Status Symbols</h3>\n<p><a href=\"/components/status-symbol\">Status Symbols</a> include a shape and color that represent a particular state of an object, tool, concept, or action. An icon that indicates a state will be accompanied with a corresponding Status Color and Status Symbol. For more information see <a href=\"/design-guidelines/status-system\">Status System</a>.</p>\n<p><img src=\"/img/components/icons-status-symbols-1.png\" alt=\"All Astro status symbol icons\" title=\"All Astro status symbol icons\"></p>\n<p><img src=\"/img/components/icons-status-symbols-2.png\" alt=\"Anatomy of a Monitoring Icon with status\" title=\"Anatomy of a Monitoring Icon with status\"></p>\n<p><img src=\"/img/components/icons-symbols-modems.png\" alt=\"Astro Status Symbols in context of a modem list layout.\" title=\"Astro Status Symbols in context of a modem list layout.\"></p>\n<h3 id=\"lockunlock\">Lock/Unlock</h3>\n<p>A unique single purpose state indicator to identify whether an object or component is locked/unlocked.</p>\n<p><img src=\"/img/components/icons-lock-unlock.png\" alt=\"Astro lock/unlock example.\" title=\"Astro lock/unlock example.\"></p>\n<h3 id=\"notification-symbols\">Notification Symbols</h3>\n<p>Events that require some user attention, but no immediate response, may be indicated by changes to a Notification Symbol.</p>\n<p>This Notification Symbol shows that five events related to a Satellite have occurred. You may hyperlink indicators to reveal a deeper view of relevant <a href=\"/design-guidelines/notifications\">Notification</a> information. You may also link to the general Log.</p>\n<p><img src=\"/img/components/notification-symbols.png\" alt=\"Anatomy of the notification count symbol.\" title=\"Anatomy of the notification count symbol.\"></p>\n<h3 id=\"labeling\">Labeling</h3>\n<p>An Icon may also include a Label and Sub-Label.</p>\n<p><img src=\"/img/components/icons-labeling.png\" alt=\"Anatomy of icon label and sublable.\" title=\"Anatomy of icon label and sublable.\"></p>\n<p>An Icon Label provides the name of the item being represented. An Icon Label should not change.</p>\n<p>An Icon Sub-Label provides additional information to the user and may be dynamic. Use Sub-Labels only as needed to avoid unnecessary distraction.</p>\n<h2 id=\"examples\">Examples</h2>\n<p>:::two-col</p>\n<p><img src=\"/img/components/icons-do-1.png\" alt=\"Do: When used in a group, keep Icons and Symbols equally sized.\" title=\"Do: When used in a group, keep Icons and Symbols equally sized.\"></p>\n<p><img src=\"/img/components/icons-do-2.png\" alt=\"Do: Allow ample space between Icons and Symbols.\" title=\"Do: Allow ample space between Icons and Symbols.\"></p>\n<p><img src=\"/img/components/icons-do-3.png\" alt=\"Do:  In a horizontal layout, align horizontally based on the center of each Icon when height and width may vary.\" title=\"Do:  In a horizontal layout, align horizontally based on the center of each Icon when height and width may vary.\"></p>\n<p><img src=\"/img/components/icons-do-4.png\" alt=\"Do: Use Icons and Symbols consistently across applications.\" title=\"Do: Use Icons and Symbols consistently across applications.\"></p>\n<p><img src=\"/img/components/icons-do-5.png\" alt=\"Do:  Use standard Health and Status indication colors and Symbols.\" title=\"Do:  Use standard Health and Status indication colors and Symbols.\"></p>\n<p><img src=\"/img/components/icons-do-6.png\" alt=\"Do: In a vertical layout, align vertically based on the center of each Icon when height and width vary.\" title=\"Do: In a vertical layout, align vertically based on the center of each Icon when height and width vary.\"></p>\n<p>:::</p>\n",
      "excerpt": "<p>Astro includes a library of common Icons, Symbols, and Notification Symbols. Persistent use of these will help ensure users are presented with consistent and meaningful information across applications.</p>",
      "id": "components\\icons-and-symbols"
    },
    {
      "tags": "components",
      "path": "/components/input-field",
      "date": "Last Modified",
      "layout": "components.template.njk",
      "title": "Input Field",
      "demo": "https://rocketcom.bitbucket.io/html-demos/input.html",
      "storybook": "components-form-elements--input-fields",
      "height": "310px",
      "theme": true,
      "contents": "<h1 id=\"input-field\">Input Field</h1>\n<p>Input Fields allow users to enter text or numeric data.</p>\n<h2 id=\"rules-of-thumb\">Rules of Thumb</h2>\n<ul>\n<li>Stacked Input Fields are left justified to one another.</li>\n<li>Use consistent spacing between stacked fields.</li>\n<li>Don&#39;t use text smaller than what is defined in the CSS. Text size within fields is critical to usability.</li>\n</ul>\n<h2 id=\"appearance-and-behavior\">Appearance and Behavior</h2>\n<p>An Input field is enabled if it is eligible for interaction, and focused if it is the current target for keystrokes.</p>\n<p>An input field can be configured for required input, limited data ranges or specific data formats. See <a href=\"/components/validation\">Form and Input Validation</a>.</p>\n<p>Input Fields have a smaller variant which may be beneficial in layouts where space is at a premium</p>\n<h2 id=\"examples\">Examples</h2>\n<p>:::two-col\n<img src=\"/img/components/input-fields-do.png\" alt=\"Do: Design a well organized form with logical, clearly labeled groupings.\" title=\"Do: Design a well organized form with logical, clearly labeled groupings.\"></p>\n<p><img src=\"/img/components/input-fields-dont.png\" alt=\"Don’t: Design a long form without labels, splits or groupings.\" title=\"Don’t: Design a long form without labels, splits or groupings.\"></p>\n<p>:::</p>\n",
      "excerpt": "<p>Input Fields allow users to enter text or numeric data.</p>",
      "id": "components\\input-field"
    },
    {
      "tags": "components",
      "path": "/components/link",
      "date": "Last Modified",
      "layout": "components.template.njk",
      "title": "Link",
      "contents": "<h1 id=\"link\">Link</h1>\n<p>A Link (also known as a hyperlink) is a clickable text element. It may be used for navigation and to trigger an event. Links are visualized to stand out from standard (non-clickable) text.</p>\n<h2 id=\"rules-of-thumb\">Rules of Thumb</h2>\n<ul>\n<li>Choose text for Links that: - Tell the user what will happen when clicking the link. - Hint at the deeper content the Link will reveal.</li>\n<li>Keep the text for Links short. Short links are more visually scannable.</li>\n</ul>\n<p>::: note\nAvoid using &quot;Click Here,&quot; or &quot;Link.&quot;\n:::</p>\n<h2 id=\"examples\">Examples</h2>\n<p>:::two-col\n<img src=\"/img/components/links-do.png\" alt=\"Do: Use Astro defined color for links \" title=\"Do: Use Astro defined color for links \"></p>\n<p><img src=\"/img/components/links-dont.png\" alt=\"Don’t: use underlines on links\" title=\"Don’t: use underlines on links\"></p>\n<p>:::</p>\n",
      "excerpt": "<p>A Link (also known as a hyperlink) is a clickable text element. It may be used for navigation and to trigger an event. Links are visualized to stand out from standard (non-clickable) text.</p>",
      "id": "components\\link"
    },
    {
      "tags": "components",
      "path": "/components/log",
      "date": "Last Modified",
      "layout": "components.template.njk",
      "title": "Log",
      "demo": "https://astro-components.netlify.com/iframe.html?id=components-log--log",
      "storybook": "components-log--log",
      "git": "rux-log",
      "height": "420px",
      "theme": true,
      "contents": "<h1 id=\"log\">Log</h1>\n<p>A Log is a tabular representation of application events and may include username, priority, equipment type, signal type, etc. As part of the Notification System, Logs provide sorting and filtering function for examining events.</p>\n<h2 id=\"rules-of-thumb\">Rules of Thumb</h2>\n<ul>\n<li>Logs always include a timestamp</li>\n</ul>\n<h2 id=\"appearance-and-behavior\">Appearance and Behavior</h2>\n<h3 id=\"basic-log\">Basic Log</h3>\n<p><img src=\"/img/components/log-basic.png\" alt=\"The log includes a Table of timestamped events and a Search field to narrow the displayed events\" title=\"The log includes a Table of timestamped events and a Search field to narrow the displayed events\"></p>\n<h3 id=\"scroll-interaction\">Scroll Interaction</h3>\n<p>New events are added to the top of the Table. The Log has two subtly different modes of scrolling interaction:</p>\n<ul>\n<li>If the Log is scrolled all the way to the top (and therefore the most recent event is on the first row), all new events are added to the top. Older events move down to make room. Essentially, scrolling is locked to the top allowing users to always see the latest event.</li>\n<li>When the user has scrolled down to examine older events, new events don’t automatically scroll the display. This allows the user to read the Log without incoming events changing the view.</li>\n</ul>\n<h3 id=\"searching-and-filtering\">Searching and Filtering</h3>\n<ul>\n<li>The user may enter text into the Search field to narrow displayed events. As users enter text, all events that match the Search text remain, and events that do not are removed. Simple wildcard pattern matching should be used.</li>\n<li>The defined scrolling rules apply when a Search term is entered. If the Table is scrolled to the top, it should remain locked to the top. New events that match the Search term are added to the top.</li>\n</ul>\n<p><img src=\"/img/components/log-search.png\" alt=\"View of Search Text Applied Within Field\" title=\"View of Search Text Applied Within Field\"></p>\n",
      "excerpt": "<p>A Log is a tabular representation of application events and may include username, priority, equipment type, signal type, etc. As part of the Notification System, Logs provide sorting and filtering function for examining events.</p>",
      "id": "components\\log"
    },
    {
      "tags": "components",
      "path": "/components/notification-banner",
      "date": "Last Modified",
      "layout": "components.template.njk",
      "title": "Notification Banner",
      "demo": "https://rocketcom.bitbucket.io/html-demos/notification.html",
      "storybook": "components-notification--notification",
      "git": "rux-banner",
      "height": "440px",
      "theme": true,
      "contents": "<h1 id=\"notification-banner\">Notification Banner</h1>\n<h2 id=\"appearance-and-behavior\">Appearance and Behavior</h2>\n<p>Events that deserve user attention, but don’t require a response, may be displayed in a Notification Banner. The Banner displays within the user’s field-of-view, but doesn’t block other interaction.</p>\n<p>If the user is currently working in a specific screen area, the Banner may be presented in that area. If the Notification is more general, or doesn’t relate to a specific area of the screen, it may be presented in the center of the screen just below the <a href=\"/components/global-status-bar\">Global Status Bar</a>.</p>\n<p>If another Notification Banner is waiting, it appears when the current Banner is dismissed. Banners don’t stack or group.</p>\n",
      "excerpt": "<p>Events that deserve user attention, but don&#x2019;t require a response, may be displayed in a Notification Banner. The Banner displays within the user&#x2019;s field-of-view, but doesn&#x2019;t block other interaction.</p>",
      "id": "components\\notification-banner"
    },
    {
      "tags": "components",
      "path": "/components/pagination",
      "date": "Last Modified",
      "layout": "components.template.njk",
      "title": "Pagination",
      "demo": "https://rocketcom.bitbucket.io/_html-samples/samples/pagination.html",
      "height": "300px",
      "contents": "<h1 id=\"pagination\">Pagination</h1>\n<p>::: note\nBe sure the current page is easily distinguishable from other pages referenced by the Pagination.\n:::</p>\n<h2 id=\"rules-of-thumb\">Rules of Thumb</h2>\n<ul>\n<li>Don’t underline links.</li>\n<li>Use Pagination only when necessary. Instead, think about editing the content to fit onto one page.</li>\n<li>Make each page a similar length.</li>\n<li>If there is only one page, no Pagination is needed.</li>\n</ul>\n<h2 id=\"appearance-and-behavior\">Appearance and Behavior</h2>\n<h2 id=\"examples\">Examples</h2>\n<p>:::two-col\n<img src=\"/img/components/pagination-1.png\" alt=\"Offer a “Prev” and “Next” link where useful.\"></p>\n<p><img src=\"/img/components/pagination-2.png\" alt=\"Disable the “Prev” link when there are no more pages before the first numeral displayed.\"></p>\n<p><img src=\"/img/components/pagination-3.png\" alt=\"Disable the “Next” link when there are no more pages after the last numeral displayed.\"></p>\n<p>:::</p>\n<h2 id=\"pagination-of-search-results\">Pagination of Search Results</h2>\n<p>:::two-col</p>\n<p><img src=\"/img/components/pagination-4.png\" alt=\"Optionally, links for “Show All” and “Number of Results” may be displayed below page numbers. Links are centered below the Pagination on the same baseline.\"></p>\n<p><img src=\"/img/components/pagination-5.png\" alt=\"When there are no Search results, suggest that the user amend the Search.\">\n:::</p>\n",
      "excerpt": "<p>::: note\nBe sure the current page is easily distinguishable from other pages referenced by the Pagination.\n:::</p>",
      "id": "components\\pagination"
    },
    {
      "tags": "components",
      "path": "/components/pop-up",
      "date": "Last Modified",
      "layout": "components.template.njk",
      "title": "Pop Up",
      "demo": "https://rocketcom.bitbucket.io/html-demos/pop-up.html",
      "storybook": "components-pop-up-menu--pop-up-menu",
      "git": "pop-up-menu",
      "height": "450px",
      "theme": true,
      "contents": "<h1 id=\"pop-up\">Pop Up</h1>\n<p>A Pop-Up Menu provides users with a quick way to access common actions for a highlighted item.</p>\n<h2 id=\"rules-of-thumb\">Rules of Thumb</h2>\n<ul>\n<li>Select menu item names that are accurate and informative allowing user to predict the result of choosing an item.</li>\n<li>Choose names for menu items that are short and precise.</li>\n<li>Use separators to indicate groups of related items.</li>\n<li>If you use more than one word in a menu item name, be sure to use title-style capitalization.</li>\n<li>Use an ellipsis (…) to indicate to users that further action is required to complete the command. The ellipsis character means that a Dialog Box or a separate window will open allowing users to make additional choices or supply additional information to complete the action.</li>\n<li>Avoid combining actions and attributes in the same group. Users tend to view choosing an action differently from choosing an attribute.</li>\n</ul>\n",
      "excerpt": "<p>A Pop-Up Menu provides users with a quick way to access common actions for a highlighted item.</p>",
      "id": "components\\pop-up"
    },
    {
      "tags": "components",
      "path": "/components/progress",
      "date": "Last Modified",
      "layout": "components.template.njk",
      "title": "Component Template",
      "demo": "https://rocketcom.bitbucket.io/html-demos/progress.html",
      "storybook": "components-progress",
      "git": "rux-progress",
      "height": "160px",
      "theme": true,
      "contents": "<h1 id=\"component-template\">Component Template</h1>\n<p>An Progress indicator signals that an application is busy performing an operation.</p>\n<p>::: note\nWhen operations take five seconds or longer to complete, add a progress feedback element to your design.\n:::</p>\n<h2 id=\"rules-of-thumb\">Rules of Thumb</h2>\n<ul>\n<li>Use <strong>Indeterminate Progress</strong> mode to continually display unknown progress for an operation.</li>\n<li>Use <strong>Determinate Progress</strong> mode when an operation has a well-defined duration or a predictable end.\nDon’t provide inaccurate time or percentage estimates if the precise completion time for the operation is unknown.</li>\n</ul>\n<h2 id=\"examples\">Examples</h2>\n<p>:::two-col\n<img src=\"/img/components/determinate-progress-do.png\" alt=\"Do: Use a Determinate Progress Bar to indicate to users how much of an operation has been completed.\" title=\"Do: Use a Determinate Progress Bar to indicate to users how much of an operation has been completed.\"></p>\n<p><img src=\"/img/components/indeterminate-progress-do.png\" alt=\"Do: Use an Indeterminate Progress control to indicate that an application is busy performing an operation but the progress is unknown.\" title=\"Do: Use an Indeterminate Progress control to indicate that an application is busy performing an operation but the progress is unknown.\"></p>\n<p>:::</p>\n",
      "excerpt": "<p>An Progress indicator signals that an application is busy performing an operation.</p>",
      "id": "components\\progress"
    },
    {
      "tags": "components",
      "path": "/components/push-button",
      "date": "Last Modified",
      "layout": "components.template.njk",
      "title": "Push Button",
      "demo": "https://rocketcom.bitbucket.io/html-demos/pushbutton.html",
      "storybook": "components-push-button--push-button",
      "git": "rux-push-button",
      "height": "210px",
      "theme": true,
      "contents": "<h1 id=\"push-button\">Push Button</h1>\n<p>Pushbuttons are a variant of the toggle button that incorporate label and action in to a single user interface element. Pushbuttons may provide a useful interface element where screen real-estate is at a premium.</p>\n",
      "excerpt": "<p>Pushbuttons are a variant of the toggle button that incorporate label and action in to a single user interface element. Pushbuttons may provide a useful interface element where screen real-estate is at a premium.</p>",
      "id": "components\\push-button"
    },
    {
      "tags": "components",
      "path": "/components/radio-button",
      "date": "Last Modified",
      "layout": "components.template.njk",
      "title": "Radio Button",
      "demo": "https://rocketcom.bitbucket.io/html-demos/radio-button.html",
      "storybook": "components-form-elements--radio-buttons",
      "git": "rux-radio-button",
      "height": "150px",
      "theme": true,
      "contents": "<h1 id=\"radio-button\">Radio Button</h1>\n<p>Radio Buttons allow users to mutually select an option from a predefined set of options. When one selection is made, the previous selection becomes deselected. One option should always be selected.</p>\n<h2 id=\"rules-of-thumb\">Rules of Thumb</h2>\n<ul>\n<li>Use Radio Buttons for mutually exclusive choices. If user can make more than one choice use Checkboxes.</li>\n<li>Radio Buttons appear in groups of two or more.</li>\n<li>One option should always be selected.</li>\n<li>Use Radio Buttons when two to six choices are available. If displaying more than six items, consider using a Drop Down Menu.</li>\n<li>Don’t use a Radio Button to initiate an action.</li>\n<li>Lay out lists of Radio Buttons vertically with one choice per line.</li>\n<li>Accurately label a group of Radio Buttons to describe the choices.</li>\n<li>Give each Radio Button a text label that describes the choice it represents.</li>\n<li>If you use more than one word in a text label, be sure to use title-style capitalization.</li>\n</ul>\n<p>::: note\nIf a user is required to make a choice between items without a default, consider a Drop Down Menu.\n:::</p>\n<p>:::two-col\n<img src=\"/img/components/radio-buttons-do-1.png\" alt=\"Do: Use Radio Buttons when asking users to select a mutually exclusive option from a predefined set of options. When one selection is made, a previous selection becomes deselected.\" title=\"Do: Use Radio Buttons when asking users to select a mutually exclusive option from a predefined set of options. When one selection is made, a previous selection becomes deselected.\"></p>\n<p><img src=\"/img/components/radio-buttons-dont-1.png\" alt=\"Don’t: Use Radio Buttons to display more than six items. Instead, use a Drop Down Menu.\" title=\"Don’t: Use Radio Buttons to display more than six items. Instead, use a Drop Down Menu.\"></p>\n<p>:::</p>\n",
      "excerpt": "<p>Radio Buttons allow users to mutually select an option from a predefined set of options. When one selection is made, the previous selection becomes deselected. One option should always be selected.</p>",
      "id": "components\\radio-button"
    },
    {
      "tags": "components",
      "path": "/components/search",
      "date": "Last Modified",
      "layout": "components.template.njk",
      "title": "Search",
      "demo": "https://rocketcom.bitbucket.io/html-demos/search.html",
      "storybook": "components-story--search",
      "git": "search",
      "height": "50px",
      "theme": true,
      "contents": "<h1 id=\"search\">Search</h1>\n<p>Search is a specialized text field for entering Search terms.</p>\n<p>::: note</p>\n<ul>\n<li>Display prompt text in the Search Field such as “Search.”</li>\n<li>Include a “Clear” button allowing users to erase the field and begin a new Search.\n:::</li>\n</ul>\n<h2 id=\"rules-of-thumb\">Rules of Thumb</h2>\n<ul>\n<li>Use prompt text in Search Field.</li>\n</ul>\n<h2 id=\"appearance-and-behavior\">Appearance and Behavior</h2>\n<p>Search has two states:</p>\n<p>:::two-col\n<img src=\"/img/components/search-enabled.png\" alt=\"The normal (enabled) state is less prominent than the focused state.\" title=\"The normal (enabled) state is less prominent than the focused state.\"></p>\n<p><img src=\"/img/components/search-focus.png\" alt=\"Within the focused state, the magnifying glass symbol is more prominent. The “Clear” button becomes enabled.\" title=\"Within the focused state, the magnifying glass symbol is more prominent. The “Clear” button becomes enabled.\">\n:::</p>\n",
      "excerpt": "<p>Search is a specialized text field for entering Search terms.</p>",
      "id": "components\\search"
    },
    {
      "tags": "components",
      "path": "/components/segmented-button",
      "date": "Last Modified",
      "layout": "components.template.njk",
      "title": "Segmented Button",
      "demo": "https://rocketcom.bitbucket.io/html-demos/segmented-button.html",
      "storybook": "components-segmented-button--segmented-button",
      "git": "rux-segmented-button",
      "height": "50px",
      "theme": true,
      "contents": "<h1 id=\"segmented-button\">Segmented Button</h1>\n<p>Segmented Buttons allow users to select one item at a time from two to four options. Selecting one option automatically turns off the last selection made. Segmented Buttons are mutually exclusive.</p>\n<h2 id=\"rules-of-thumb\">Rules of Thumb</h2>\n<ul>\n<li>Use Segmented Buttons: - To filter a grid or table. - To switch a view&#39;s display mode.</li>\n<li>One option must always be selected.</li>\n</ul>\n<h2 id=\"appearance-and-behavior\">Appearance and Behavior</h2>\n<h2 id=\"examples\">Examples</h2>\n<p>:::two-col\n<img src=\"/img/components/segmented-button-do-1.png\" alt=\"Do: Use Segmented Buttons to filter an associated table or grid.\" title=\"Do: Use Segmented Buttons to filter an associated table or grid.\"></p>\n<p><img src=\"/img/components/segmented-button-dont-1.png\" alt=\"Don’t: Use Segmented Buttons to switch between separate views, use Tabs instead.\" title=\"Don’t: Use Segmented Buttons to switch between separate views, use Tabs instead.\"></p>\n<p><img src=\"/img/components/segmented-button-do-2.png\" alt=\"Do: Use Segmented Buttons to switch a view’s display mode.\" title=\"Do: Use Segmented Buttons to switch a view’s display mode.\"></p>\n<p><img src=\"/img/components/segmented-button-dont-2.png\" alt=\"Don’t: Use Segmented Buttons for user input in a form, use Radio Buttons or Drop Downs instead.\" title=\"Don’t: Use Segmented Buttons for user input in a form, use Radio Buttons or Drop Downs instead.\"></p>\n<p>:::</p>\n",
      "excerpt": "<p>Segmented Buttons allow users to select one item at a time from two to four options. Selecting one option automatically turns off the last selection made. Segmented Buttons are mutually exclusive.</p>",
      "id": "components\\segmented-button"
    },
    {
      "tags": "components",
      "path": "/components/slider",
      "date": "Last Modified",
      "layout": "components.template.njk",
      "title": "Slider",
      "demo": "https://rocketcom.bitbucket.io/html-demos/slider.html",
      "storybook": "components-slider--slider",
      "git": "rux-slider",
      "height": "170px",
      "theme": true,
      "contents": "<h1 id=\"slider\">Slider</h1>\n<p>A Slider allows users to choose from a range of continuous and discrete values. The Slider displays the range of possible values and the Slider’s indicator displays the current value.</p>\n<p>::: note\nTo achieve the split color element in the slider a small amount of JavaScript is needed. Refer to slider documentation in the Git repository for more information\n:::</p>\n<h2 id=\"rules-of-thumb\">Rules of Thumb</h2>\n<p><strong>Use a slider:</strong></p>\n<ul>\n<li>When users need to set defined, contiguous values (like volume or brightness), or a range of discrete values (like screen resolution).</li>\n<li>To display abstracted values like “Low, Medium,” or “High.”</li>\n<li>To reflect discrete numeric values by adding labels.</li>\n<li>To give users immediate feedback on selection such as screen contrast.</li>\n</ul>\n<p>::: note\nSliders may be used in conjunction with an input field allowing the user to set a slider value via keyboard entry\n:::</p>\n<h2 id=\"examples\">Examples</h2>\n<p>:::two-col\n<img src=\"/img/components/slider-do.png\" alt=\"Do: If adding labels, only use the minimal amount necessary to indicate the values.\" title=\"Do: If adding labels, only use the minimal amount necessary to indicate the values.\"></p>\n<p><img src=\"/img/components/slider-dont.png\" alt=\"Don’t: Excessive labels clutter the design.\" title=\"Don’t: Excessive labels clutter the design.\"></p>\n<p>:::</p>\n",
      "excerpt": "<p>A Slider allows users to choose from a range of continuous and discrete values. The Slider displays the range of possible values and the Slider&#x2019;s indicator displays the current value.</p>",
      "id": "components\\slider"
    },
    {
      "tags": "components",
      "path": "/components/spectrum-analyzer",
      "date": "Last Modified",
      "layout": "components.template.njk",
      "title": "Spectrum Analyzer",
      "demo": "https://rocketcom.bitbucket.io/packages/rux-spectrum-analyzer/demo/rux-spectrum-analyzer.html",
      "height": "380px",
      "contents": "<h1 id=\"spectrum-analyzer\">Spectrum Analyzer</h1>\n<p>Often called “Spec-A”, Spectrum Analysis diagrams display power levels over a specific band.</p>\n<p>This live component simulates a classic &quot;Spec-A&quot; display, traditionally implemented in hardware, that is so often seen in SATCOM and other space domain applications.</p>\n<p>The display updates at two frames per second and draws data from a standard web socket.</p>\n<p>This component is highly customizable for bandwidth, power range, and labeling. See the Web Component documentation for detailed information on these settable properties.</p>\n",
      "excerpt": "<p>Often called &#x201C;Spec-A&#x201D;, Spectrum Analysis diagrams display power levels over a specific band.</p>",
      "id": "components\\spectrum-analyzer"
    },
    {
      "tags": "components",
      "path": "/components/status-symbol",
      "date": "Last Modified",
      "layout": "components.template.njk",
      "title": "Status Symbol",
      "demo": "https://astro-components.netlify.com/iframe.html?id=components-status--status",
      "storybook": "components-status--status",
      "git": "status-symbol",
      "height": "80px",
      "theme": true,
      "contents": "<h1 id=\"component-template\">Component Template</h1>\n<p>The Status Symbol combines color and shape to create a standard and consistent way to indicate the status of a device or feature.</p>\n<p>::: note\nTo ensure compliance with <a href=\"https://www.w3.org/WAI/standards-guidelines/wcag/new-in-21/#1411-non-text-contrast-aa\">WCAG 2.0 contrast specifications for non-text content</a> light themed status symbols must have a 1px black border set to 50% opacity.\n:::</p>\n<h2 id=\"rules-of-thumb\">Rules of Thumb</h2>\n<ul>\n<li>Use the standard set of Status Symbols provided.</li>\n<li>Only use the provided colors for status.</li>\n<li>Use the highest color possible if multiple statuses are consolidated. For example, if the statuses of underlying components are green, yellow, and red, the consolidated indicator is red.</li>\n</ul>\n<p>::: note\nAdding a title attribute to status elements can improve accessibility by offering additional information about the status when the user hovers over the element or when used in conjunction with a screen reader.</p>\n<p>Place your cursor over any status symbol above to see an example.\n:::</p>\n<h2 id=\"related-pages\">Related Pages</h2>\n<ul>\n<li>For a detailed description of how Status Symbols are used within Monitoring Icons, see Icons and Symbols.</li>\n<li>To learn more about the usage of status colors, see Status System.</li>\n</ul>\n<h2 id=\"status-colors\">Status Colors</h2>\n<p>Status colors are provided for both light and dark theme versions of Astro in Hex, RGB and CSS Custom Property values.</p>\n<h3 id=\"dark-theme-status-colors\">Dark Theme Status Colors</h3>\n<table>\n<thead>\n<tr>\n<th></th>\n<th>Hex</th>\n<th>RGB</th>\n<th>CSS</th>\n<th>Synonyms</th>\n</tr>\n</thead>\n<tbody><tr>\n<td><img src=\"/img/swatches/critical__dark.svg\" alt=\"Status Color: Critical \"></td>\n<td>#ff3838</td>\n<td>255,56,56</td>\n<td>--colorCritical</td>\n<td>Critical, alert, emergency, urgent</td>\n</tr>\n<tr>\n<td><img src=\"/img/swatches/serious__dark.svg\" alt=\"Status Color: Serious \"></td>\n<td>#ffb302</td>\n<td>255,179,2</td>\n<td>--colorSerious</td>\n<td>Serious, error, warning, needs attention</td>\n</tr>\n<tr>\n<td><img src=\"/img/swatches/caution__dark.svg\" alt=\"Status Color: Caution \"></td>\n<td>#fce83a</td>\n<td>252,232,58</td>\n<td>--colorCaution</td>\n<td>Caution, unstable, unsatisfactory</td>\n</tr>\n<tr>\n<td><img src=\"/img/swatches/normal__dark.svg\" alt=\"Status Color: Normal \"></td>\n<td>#56f000</td>\n<td>86,240,0</td>\n<td>--colorNormal</td>\n<td>Normal, on, ok, fine, go, satisfactory</td>\n</tr>\n<tr>\n<td><img src=\"/img/swatches/standby__dark.svg\" alt=\"Status Color: Standby \"></td>\n<td>#2dccff</td>\n<td>45,204,255</td>\n<td>--colorStandby</td>\n<td>Standby, available, enabled</td>\n</tr>\n<tr>\n<td><img src=\"/img/swatches/off__dark.svg\" alt=\"Status Color: Off \"></td>\n<td>#9ea7ad</td>\n<td>158,167,173</td>\n<td>--colorOff</td>\n<td>Off, unavailable, disabled</td>\n</tr>\n</tbody></table>\n<h3 id=\"light-theme-status-colors\">Light Theme Status Colors</h3>\n<table>\n<thead>\n<tr>\n<th></th>\n<th>Hex</th>\n<th>RGB</th>\n<th>CSS</th>\n<th>Synonyms</th>\n</tr>\n</thead>\n<tbody><tr>\n<td><img src=\"/img/swatches/critical__light.svg\" alt=\"Status Color: Critical \"></td>\n<td>#ff3838</td>\n<td>255,56,56</td>\n<td>--colorCritical</td>\n<td>Critical, alert, emergency, urgent</td>\n</tr>\n<tr>\n<td><img src=\"/img/swatches/serious__light.svg\" alt=\"Status Color: Serious \"></td>\n<td>#ffb302</td>\n<td>255,179,2</td>\n<td>--colorSerious</td>\n<td>Serious, error, warning, needs attention</td>\n</tr>\n<tr>\n<td><img src=\"/img/swatches/caution__light.svg\" alt=\"Status Color: Caution \"></td>\n<td>#fce83a</td>\n<td>252,232,58</td>\n<td>--colorCaution</td>\n<td>Caution, unstable, unsatisfactory</td>\n</tr>\n<tr>\n<td><img src=\"/img/swatches/normal__light.svg\" alt=\"Status Color: Normal \"></td>\n<td>#56f000</td>\n<td>86,240,0</td>\n<td>--colorNormal</td>\n<td>Normal, on, ok, fine, go, satisfactory</td>\n</tr>\n<tr>\n<td><img src=\"/img/swatches/standby__light.svg\" alt=\"Status Color: Standby \"></td>\n<td>#2dccff</td>\n<td>45,204,255</td>\n<td>--colorStandby</td>\n<td>Standby, available, enabled</td>\n</tr>\n<tr>\n<td><img src=\"/img/swatches/off__light.svg\" alt=\"Status Color: Off \"></td>\n<td>#9ea7ad</td>\n<td>158,167,173</td>\n<td>--colorOff</td>\n<td>Off, unavailable, disabled</td>\n</tr>\n</tbody></table>\n<p>::: note\nIn light theme user interfaces all symbols indicating status must include a 1 pixel border set to black with an opacity of 50% to meet WCAG 2.0 Contrast Compliance.\n:::</p>\n",
      "excerpt": "<p>The Status Symbol combines color and shape to create a standard and consistent way to indicate the status of a device or feature.</p>",
      "id": "components\\status-symbol"
    },
    {
      "tags": "components",
      "path": "/components/tabs",
      "date": "Last Modified",
      "layout": "components.template.njk",
      "title": "Tabs",
      "demo": "https://astro-components.netlify.com/iframe.html?id=components-tabs--tabs",
      "storybook": "components-tabs--tabs",
      "git": "rux-tabs",
      "height": "210px",
      "theme": true,
      "contents": "<h1 id=\"tabs\">Tabs</h1>\n<p>Tabs in Astro Applications are used to divide major areas of content and to indicate work process.</p>\n<h2 id=\"rules-of-thumb\">Rules of Thumb</h2>\n<ul>\n<li>Use only one row of Tabs.</li>\n<li>Use Higher Level Tabs only on top of the panel.</li>\n<li>Tab labels should not be more than two words and should accurately reflect what underlying content the user can expect to reveal.</li>\n<li>Use title-style capitalization for labels.</li>\n<li>High level tabs are often used to organize an application by work process.</li>\n</ul>\n<p>!!! note High Level Tabs are often process/workflow oriented. Process oriented tabs should:</p>\n<ul>\n<li>Appear in the upper left quadrant.</li>\n<li>Be clearly labeled.</li>\n<li>Guide users through a sequential process.</li>\n</ul>\n<h2 id=\"interiorcompact-tabs\">Interior/Compact Tabs</h2>\n<p>For use outside of main navigation, a more compact tab component can be used.</p>\n<p>:::caution\nCaution Do Missing sample of interior tabs. New format only supports a single demo as of now\n:::</p>\n<h2 id=\"rules-of-thumb-1\">Rules of Thumb</h2>\n<ul>\n<li>Use only one row of Tabs.</li>\n<li>Tab labels should not be more than two words and should accurately reflect what the user can expect to see.</li>\n<li>Use title-style capitalization for labels.</li>\n</ul>\n<h2 id=\"examples\">Examples</h2>\n<p>:::two-col\n<img src=\"/img/components/nav-tabs-do.png\" alt=\"Do: To guide users through a process, correctly place and label Tabs to reflect a step-by-step process.\" title=\"Do: To guide users through a process, correctly place and label Tabs to reflect a step-by-step process.\"></p>\n<p><img src=\"/img/components/nav-tabs-dont.png\" alt=\"Don’t: Stack or improperly nest Tabs.\" title=\"Don’t: Stack or improperly nest Tabs.\"></p>\n<p>:::</p>\n",
      "excerpt": "<p>Tabs in Astro Applications are used to divide major areas of content and to indicate work process.</p>",
      "id": "components\\tabs"
    },
    {
      "tags": "components",
      "path": "/components/tineline",
      "date": "Last Modified",
      "layout": "components.template.njk",
      "title": "Timeline",
      "demo": "https://rocketcom.bitbucket.io/packages/rux-timeline/demo/rux-timeline.html",
      "storybook": "components-timeline--timeline",
      "git": "rux-tineline",
      "height": "160px",
      "theme": true,
      "contents": "<h1 id=\"timeline\">Timeline</h1>\n<p>Timeline displays a sequence of realtime events during a fixed time span. The Playhead indicates the current time of day, Time Regions represent events.</p>\n<h2 id=\"anatomy\">Anatomy</h2>\n<p><img src=\"/img/components/timeline-anatomy.png\" alt=\"Anatomy of a simple timeline element\" title=\"Anatomy of a simple timeline element\"></p>\n<h2 id=\"appearance-and-behavior\">Appearance and Behavior</h2>\n<h3 id=\"header\">Header</h3>\n<p>The header houses the timeline Title and Status Symbol as well as Zoom control. The Status Symbol represents the overall status of the timeline.</p>\n<h3 id=\"track\">Track</h3>\n<p>A track is a row of time regions. A timeline can have multiple tracks. When the timeline reaches maximum height, the track area becomes vertically scrollable. Tracks have an optional label area fixed on the left end.</p>\n<h3 id=\"ruler\">Ruler</h3>\n<p>The Ruler spans the bottom of the Tracks and shows increments of time in the standard formats of: seconds, minutes, hours, days, weeks, months, etc. The Ruler may have day markers at midnight.</p>\n<h3 id=\"scroll-bar\">Scroll Bar</h3>\n<p>The Scroll Bar moves the timeline forward and backward in the viewport. Even when scrolling, the playhead stays at the current time of day. The Scroll Bar&#39;s appearance and interaction are managed by the OS and browser, and will look different on each system.</p>\n<h3 id=\"time-region\">Time Region</h3>\n<p>Time regions show blocks of time. Each time region has a title, status symbol, and timespan. Regions are automatically rendered as &#39;current&#39; if under the playhead. Time Regions may also be selected by the user.</p>\n<p>Time regions can overlap. If they do, a small indicator will appear showing how many timeblocks are overlapping. Upon hover a popup will appear showing title, time, and status for each of the overlapping time regions.</p>\n<h3 id=\"playhead\">Playhead</h3>\n<p>The Playhead indicates current time of day. Time Blocks underneath the playhead have a special &#39;current&#39; appearance.</p>\n<h2 id=\"rules-of-thumb\">Rules of Thumb</h2>\n<ul>\n<li>Always manage the zoom level such that the time span at least fills the viewport.</li>\n<li>Concurrent time regions on the same track should stack with the longest time region on bottom and shortest time region on top.</li>\n</ul>\n",
      "excerpt": "<p>Timeline displays a sequence of realtime events during a fixed time span. The Playhead indicates the current time of day, Time Regions represent events.</p>",
      "id": "components\\timeline"
    },
    {
      "tags": "components",
      "path": "/components/toggle",
      "date": "Last Modified",
      "layout": "components.template.njk",
      "title": "Toggle",
      "demo": "https://rocketcom.bitbucket.io/html-demos/toggle.html",
      "storybook": "components-toggle--toggle",
      "git": "rux-toggle",
      "height": "150px",
      "theme": true,
      "contents": "<h1 id=\"toggle\">Toggle</h1>\n<p>A Toggle describes a state or value. Similar to a checkbox, toggles allow users to change a setting between two states such as “On&quot; or &quot;Off.” Unlike a checkbox, a toggle button initiates an action with immediate effect.</p>\n",
      "excerpt": "<p>A Toggle describes a state or value. Similar to a checkbox, toggles allow users to change a setting between two states such as &#x201C;On&quot; or &quot;Off.&#x201D; Unlike a checkbox, a toggle button initiates an action with immediate effect.</p>",
      "id": "components\\toggle"
    },
    {
      "tags": "components",
      "path": "/components/tree",
      "date": "Last Modified",
      "layout": "components.template.njk",
      "title": "Tree",
      "demo": "https://rocketcom.bitbucket.io/packages/rux-tree/demo/rux-tree.html",
      "storybook": "components-tree--tree",
      "git": "rux-tree",
      "height": "280px",
      "theme": true,
      "contents": "<h1 id=\"tree\">Tree</h1>\n<p>Trees present a hierarchical set of related items, and allow users to explore and select items within that hierarchy.</p>\n<p>!!! note Accordions are closely related to Trees, but are specialized to automatically display only a single branch. A Tree is managed by the users, opening and closing branches as necessary.</p>\n<h2 id=\"anatomy\">Anatomy</h2>\n<p><img src=\"/img/components/tree-anatomy-cms.png\" alt=\"Anatomy of an Astro Tree Component.\" title=\"Anatomy of an Astro Tree Component.\"></p>\n<h2 id=\"rules-of-thumb\">Rules of Thumb</h2>\n<ul>\n<li>Avoid mixing unrelated data types or functions in a Tree. For example, don’t mix e-mail, calendar and to-do items.</li>\n<li>A Tree should not be a “catch-all” for application features. Usability falls off with each new addition.</li>\n<li>Trees are not native to the Web environment and should be used sparingly. When it&#39;s necessary to display a hierarchy, consider using cascading panels or pages.</li>\n</ul>\n<h2 id=\"appearance-and-behavior\">Appearance and Behavior</h2>\n<h3 id=\"appearance\">Appearance</h3>\n<p>:::two-col\nItems in the Tree that have children display a turn-down arrow. Items without children, even if they represent empty containers, do not display a turn-down arrow. Items are indented according to their depth.</p>\n<p><img src=\"/img/components/tree-no-status-cms.png\" alt=\"Astro Tree Component with no status symbols.\" title=\"Astro Tree Component with no status symbols.\"></p>\n<p>The Tree may optionally show a <a href=\"/components/status-symbol\">Status Symbol</a> alongside each item.</p>\n<p><img src=\"/img/components/tree-with-status-cms.png\" alt=\"Astro Tree Component with no status symbols.\" title=\"Astro Tree Component with status symbols.\">\n:::</p>\n<h3 id=\"behavior\">Behavior</h3>\n<p>Clicking on an item (in any area other than the turn-down arrow) selects that item. Only one item at a time may be selected.</p>\n<p>Clicking on a turn-down arrow opens or closes that branch. This does not change the selected item unless the selected item is within the branch being closed. If the branch is closed, the selection becomes null — a Tree’s selection and revealed branches are almost entirely independent of each other.</p>\n",
      "excerpt": "<p>Trees present a hierarchical set of related items, and allow users to explore and select items within that hierarchy.</p>",
      "id": "components\\tree"
    },
    {
      "tags": "components",
      "path": "/components/component-sandbox",
      "permalink": "/components/component-sandbox/index.html",
      "date": "Last Modified",
      "layout": "components.template.njk",
      "title": "Component Sandbox",
      "contents": "<h1 id=\"component-sandbox\">Component Sandbox</h1>\n<p>The <a href=\"https://astro-components.netlify.com/\">Astro Storybook site</a> presents all Astro Components in an interactive sandbox exposing all features, properties and events of Astro Components as well as associated documentation.</p>\n<p><img src=\"/img/components/component-sandbox.png\" alt=\"Component Sandbox\"></p>\n",
      "excerpt": "<p>The <a href=\"https://astro-components.netlify.com/\">Astro Storybook site</a> presents all Astro Components in an interactive sandbox exposing all features, properties and events of Astro Components as well as associated documentation.</p>",
      "id": "components\\_component-sandbox"
    },
    {
      "tags": "resources",
      "date": "Last Modified",
      "path": "/components/readme",
      "permalink": "/components/readme/index.html",
      "layout": "interior.template.njk",
      "title": "Read Me",
      "contents": "<h1 id=\"readme\">README</h1>\n<p>ASTRO UX Guidelines include a CSS library of standard HTML elements for building Astro Applications. No specific JavaScript library is recommended for adding functionality to these components.</p>\n<p>There are two ways to use the Astro elements in your applications. You may simply download and refer to the compiled CSS and images in your app using the HTML and classes provided, or you may clone and serve the Astro Web Components library for development within a NodeJS project.</p>\n<h2 id=\"getting-started-with-html--css\">Getting Started with HTML &amp; CSS</h2>\n<p><a href=\"https://bitbucket.org/rocketcom/astro-styles/src/master/\">Additional Documentation/Git Repository</a></p>\n<p>Download and unzip the <a href=\"https://bitbucket.org/rocketcom/astro-styles/get/master.zip\">Astro UI</a> Library and copy the ASTRO.css file and img directory to your project folder. In the head of all .html documents, add a link element with an href attribute to the relative location of astro.css or astro.min.css. Copy the /icons and /fonts directory to the root of your project. Note: astro.css and astro.min.css assume they are located in a sibling directory to /icons and /fonts.</p>\n<p>Example:</p>\n<pre><code class=\"language-html\">&lt;link rel=&quot;stylesheet&quot; href=&quot;/your-project/path/astro.css&quot; /&gt;</code></pre>\n<p>::: caution\nCAUTION!: astro.css is a simple CSS stylesheet, it can easily be broken or distorted if it is loaded out of order or if a reset stylesheet is used.\n:::</p>\n<h3 id=\"why-web-components\">Why Web Components?</h3>\n<p>When the Astro predecessor SATCOM components were initially created, they were specific to the SATCOM domain. The scope of use has since expanded to include other domains in space, allowing us to create a more agnostic set of components for use across a wider spectrum of space systems.</p>\n<p>While the initial components were purposefully created to be framework-agnostic, this limited the demonstrated experiences to pure HTML/CSS implementations. For today&#39;s space app needs, we want to provide more practical demonstrations which can be used across a wide variety of frameworks. WebComponents v1 provide us with an opportunity to deliver functional examples which can be incorporated in a variety of frameworks (Angular 2+, React, Ember) or simply used as a more relevant example of implementing Astro Guidelines in a modern framework.</p>\n<p><strong>Benefits of Astro Web Components</strong></p>\n<ul>\n<li>Web Components provide style scope isolation; styles will exist as defined and cannot be overridden by other stylesheets</li>\n<li>Code is portable within self-contained HTML/CSS/JS</li>\n<li>Eliminates future CSS class name changes</li>\n<li>Code is â€œgenericâ€; it follows a similar format to popular frameworks like Angular and React, without being prescriptive.</li>\n<li>All the major JS frameworks were built to reflect the ideas of WebComponents and/or influenced the Web Component v1 specification; Web Components are an accepted and respected pattern in the JS community</li>\n<li>Localized Web Component HTML and CSS minimizes or eliminates the need for complicated CSS naming structures e.g., .rux-buttonâ€”small__light</li>\n<li>Web Components are a W3 standard, requiring no vendor lock-in or decisions about which frameworks to use. Chrome, Firefox, and Safari support Web Components v1 without the need for polyfills. Microsoft has committed to supporting the standard in a future version of Edge. Note: IE11+ supports Web Components via polyfills.</li>\n</ul>\n",
      "excerpt": "<p>ASTRO UX Guidelines include a CSS library of standard HTML elements for building Astro Applications. No specific JavaScript library is recommended for adding functionality to these components.</p>",
      "id": "components\\_readme"
    },
    {
      "tags": "components",
      "path": "/components/component-template",
      "date": "Last Modified",
      "layout": "components.template.njk",
      "title": "Component Template",
      "demo": "https://rocketcom.bitbucket.io/html-demos/component-template.html",
      "storybook": "components-story--component-template",
      "git": "component-template/",
      "contents": "<h1 id=\"component-template\">Component Template</h1>\n<p>Content</p>\n<h2 id=\"rules-of-thumb\">Rules of Thumb</h2>\n<ul>\n<li>Rule of Thumb</li>\n</ul>\n<h2 id=\"appearance-and-behavior\">Appearance and Behavior</h2>\n<h2 id=\"examples\">Examples</h2>\n<p>:::dos-donts\n<img src=\"/img/components/component-template-do-1.png\" alt=\"Do: Something\" title=\"Do: Something\">\nDo: Something</p>\n<p><img src=\"/img/components/component-template-dont-1.png\" alt=\"Don&#39;t: Something\" title=\"Don&#39;t: Something\">\nDon&#39;t: Something\n:::</p>\n",
      "excerpt": "<p>Content</p>",
      "id": "components\\__template"
    }
  ]
}
